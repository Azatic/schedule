// Generated by js_of_ocaml
//# buildInfo:effects=false, use-js-string=false, version=5.0.1
(function
   (globalThis)
   {"use strict";
    var
     runtime=globalThis.jsoo_runtime,
     caml_get_public_method=runtime.caml_get_public_method,
     caml_ml_string_length=runtime.caml_ml_string_length,
     caml_string_compare=runtime.caml_string_compare,
     caml_string_equal=runtime.caml_string_equal,
     caml_string_of_jsbytes=runtime.caml_string_of_jsbytes;
    function caml_call1(f,a0)
     {return f.length == 1?f(a0):runtime.caml_call_gen(f,[a0])}
    function caml_call2(f,a0,a1)
     {return f.length == 2?f(a0,a1):runtime.caml_call_gen(f,[a0,a1])}
    function caml_call3(f,a0,a1,a2)
     {return f.length == 3?f(a0,a1,a2):runtime.caml_call_gen(f,[a0,a1,a2])}
    function caml_call4(f,a0,a1,a2,a3)
     {return f.length == 4
              ?f(a0,a1,a2,a3)
              :runtime.caml_call_gen(f,[a0,a1,a2,a3])}
    function caml_call5(f,a0,a1,a2,a3,a4)
     {return f.length == 5
              ?f(a0,a1,a2,a3,a4)
              :runtime.caml_call_gen(f,[a0,a1,a2,a3,a4])}
    var
     global_data=runtime.caml_get_global_data(),
     first$1=caml_string_of_jsbytes("key"),
     second$1=caml_string_of_jsbytes("value"),
     first$0=caml_string_of_jsbytes("key"),
     second$0=caml_string_of_jsbytes("value"),
     cst$69=caml_string_of_jsbytes("#"),
     cst$68=caml_string_of_jsbytes(""),
     cst$56=caml_string_of_jsbytes(" ()"),
     cst_Next=caml_string_of_jsbytes("Next"),
     cst$57=caml_string_of_jsbytes(" ()"),
     cst_Back=caml_string_of_jsbytes("Back"),
     cst$58=caml_string_of_jsbytes("}\n"),
     cst$59=caml_string_of_jsbytes("}\n"),
     cst$60=caml_string_of_jsbytes('  ""];\n'),
     cst$61=caml_string_of_jsbytes('  ""];\n'),
     cst$62=caml_string_of_jsbytes("}\n"),
     cst$63=caml_string_of_jsbytes('  ""];\n'),
     cst$64=caml_string_of_jsbytes("}\n"),
     cst$65=caml_string_of_jsbytes("}\n"),
     cst$66=caml_string_of_jsbytes("}\n"),
     cst$67=caml_string_of_jsbytes("}\n"),
     cst$52=caml_string_of_jsbytes(""),
     cst$53=caml_string_of_jsbytes(""),
     cst$54=caml_string_of_jsbytes(""),
     cst$55=caml_string_of_jsbytes(""),
     cst$51=caml_string_of_jsbytes(""),
     cst$50=caml_string_of_jsbytes(""),
     cst$49=caml_string_of_jsbytes(""),
     cst$48=caml_string_of_jsbytes(""),
     cst$47=caml_string_of_jsbytes(""),
     cst$46=caml_string_of_jsbytes(""),
     cst$45=caml_string_of_jsbytes(""),
     cst$44=caml_string_of_jsbytes(""),
     cst$43=caml_string_of_jsbytes(""),
     cst$42=caml_string_of_jsbytes(""),
     cst$41=caml_string_of_jsbytes(""),
     cst$40=caml_string_of_jsbytes(""),
     cst$39=caml_string_of_jsbytes(""),
     cst$38=caml_string_of_jsbytes(""),
     cst$37=caml_string_of_jsbytes(""),
     cst$36=caml_string_of_jsbytes(""),
     cst_for_var_i_0_i_coll_length_$0=
      caml_string_of_jsbytes("  for (var i = 0 ; i<coll.length; i++) {\n"),
     cst_if_coll_i_checked=
      caml_string_of_jsbytes("    if (coll[i].checked) {\n"),
     cst_break=caml_string_of_jsbytes("       break;\n"),
     cst$33=caml_string_of_jsbytes("    }\n"),
     cst$34=caml_string_of_jsbytes("  }\n"),
     cst_for_var_i_0_i_coll_length_=
      caml_string_of_jsbytes("    for (var i = 0; i<coll.length; i++) {\n"),
     cst$30=caml_string_of_jsbytes("    }\n"),
     cst$31=caml_string_of_jsbytes("  }\n"),
     cst_textContent=caml_string_of_jsbytes(".textContent"),
     cst$28=caml_string_of_jsbytes("}\n"),
     cst_else=caml_string_of_jsbytes("else {\n"),
     cst_innerText=caml_string_of_jsbytes(".innerText"),
     cst$29=caml_string_of_jsbytes("}\n"),
     cst_nbsp_nbsp=caml_string_of_jsbytes("&nbsp;&nbsp;"),
     cst_hr=caml_string_of_jsbytes("<hr>"),
     cst_var_coll_null=caml_string_of_jsbytes("  var coll = null;\n"),
     cst$32=caml_string_of_jsbytes("}\n"),
     cst_var_coll_null$0=caml_string_of_jsbytes("  var coll = null;\n"),
     cst$35=caml_string_of_jsbytes("}\n"),
     cst$26=caml_string_of_jsbytes(""),
     cst$27=caml_string_of_jsbytes(""),
     cst$25=caml_string_of_jsbytes(":"),
     cst_li$1=caml_string_of_jsbytes("li"),
     cst_ul$1=caml_string_of_jsbytes("ul"),
     cst_li$0=caml_string_of_jsbytes("li"),
     cst_ul$0=caml_string_of_jsbytes("ul"),
     cst$24=caml_string_of_jsbytes(": "),
     cst_a$0=caml_string_of_jsbytes("<\/a>"),
     cst_a=caml_string_of_jsbytes("<\/a>"),
     cst_option=caml_string_of_jsbytes("option"),
     cst$23=caml_string_of_jsbytes(""),
     cst_select=caml_string_of_jsbytes("select"),
     cst_nbsp=caml_string_of_jsbytes("&nbsp;"),
     cst_input$2=caml_string_of_jsbytes("input"),
     cst$22=caml_string_of_jsbytes(""),
     cst$21=caml_string_of_jsbytes(""),
     cst_textarea=caml_string_of_jsbytes("textarea"),
     cst$20=caml_string_of_jsbytes(""),
     cst_input$1=caml_string_of_jsbytes("input"),
     cst$19=caml_string_of_jsbytes(""),
     cst_div=caml_string_of_jsbytes("div"),
     cst$18=caml_string_of_jsbytes(""),
     cst_button=caml_string_of_jsbytes("button"),
     cst$17=caml_string_of_jsbytes(""),
     cst_input$0=caml_string_of_jsbytes("input"),
     cst$16=caml_string_of_jsbytes(""),
     cst_input=caml_string_of_jsbytes("input"),
     cst$15=caml_string_of_jsbytes(""),
     cst_form=caml_string_of_jsbytes("form"),
     cst$14=caml_string_of_jsbytes(""),
     cst_th=caml_string_of_jsbytes("th"),
     cst$13=caml_string_of_jsbytes(""),
     cst_td=caml_string_of_jsbytes("td"),
     cst$12=caml_string_of_jsbytes(""),
     cst_tr=caml_string_of_jsbytes("tr"),
     cst$11=caml_string_of_jsbytes(""),
     cst_table=caml_string_of_jsbytes("table"),
     cst$10=caml_string_of_jsbytes(""),
     cst_i=caml_string_of_jsbytes("i"),
     cst$9=caml_string_of_jsbytes(""),
     cst_b=caml_string_of_jsbytes("b"),
     cst$8=caml_string_of_jsbytes(""),
     cst_li=caml_string_of_jsbytes("li"),
     cst$7=caml_string_of_jsbytes(""),
     cst_ol=caml_string_of_jsbytes("ol"),
     cst$6=caml_string_of_jsbytes(""),
     cst_ul=caml_string_of_jsbytes("ul"),
     cst$5=caml_string_of_jsbytes(""),
     cst_body=caml_string_of_jsbytes("body"),
     cst$4=caml_string_of_jsbytes(""),
     cst_title=caml_string_of_jsbytes("title"),
     cst$3=caml_string_of_jsbytes(""),
     cst_html=caml_string_of_jsbytes("html"),
     cst$2=caml_string_of_jsbytes(""),
     cst=caml_string_of_jsbytes(""),
     cst$0=caml_string_of_jsbytes(""),
     cst$1=caml_string_of_jsbytes(" "),
     cst_lt=caml_string_of_jsbytes("&lt;"),
     cst_gt=caml_string_of_jsbytes("&gt;"),
     cst_amp=caml_string_of_jsbytes("&amp;"),
     cst_quot=caml_string_of_jsbytes("&quot;"),
     _c_=[0,caml_string_of_jsbytes("page"),caml_string_of_jsbytes("generate")],
     shared=
      [0,
       caml_string_of_jsbytes("text"),
       caml_string_of_jsbytes("string"),
       caml_string_of_jsbytes("render"),
       caml_string_of_jsbytes("radio"),
       caml_string_of_jsbytes("id"),
       caml_string_of_jsbytes("flag"),
       caml_string_of_jsbytes("div"),
       caml_string_of_jsbytes("combo"),
       caml_string_of_jsbytes("add")],
     cst_br=caml_string_of_jsbytes("<br>"),
     first=caml_string_of_jsbytes(""),
     second=caml_string_of_jsbytes(""),
     Stdlib_List=global_data.Stdlib__List,
     Stdlib_Array=global_data.Stdlib__Array,
     Stdlib=global_data.Stdlib,
     Stdlib_Printf=global_data.Stdlib__Printf,
     Stdlib_Hashtbl=global_data.Stdlib__Hashtbl,
     CamlinternalOO=global_data.CamlinternalOO,
     Stdlib_String=global_data.Stdlib__String,
     Stdlib_Buffer=global_data.Stdlib__Buffer,
     View=global_data.View,
     _e_=View[1],
     _a1_=
      [0,
       [2,0,[11,caml_string_of_jsbytes(".anchor"),[4,0,0,0,0]]],
       caml_string_of_jsbytes("%s.anchor%d")],
     _a0_=
      [0,
       [11,caml_string_of_jsbytes("page_"),[2,0,[12,95,[4,0,0,0,0]]]],
       caml_string_of_jsbytes("page_%s_%d")],
     _aI_=
      [0,
       [11,
        caml_string_of_jsbytes("  "),
        [2,0,[11,caml_string_of_jsbytes(",\n"),0]]],
       caml_string_of_jsbytes("  %s,\n")],
     _aE_=
      [0,
       [11,
        caml_string_of_jsbytes("  "),
        [2,0,[11,caml_string_of_jsbytes(",\n"),0]]],
       caml_string_of_jsbytes("  %s,\n")],
     _aC_=
      [0,
       [11,
        caml_string_of_jsbytes('  "'),
        [2,0,[11,caml_string_of_jsbytes('",\n'),0]]],
       caml_string_of_jsbytes('  "%s",\n')],
     _ar_=
      [0,
       [11,caml_string_of_jsbytes('id="'),[2,0,[12,34,0]]],
       caml_string_of_jsbytes('id="%s"')],
     _as_=
      [0,
       [11,caml_string_of_jsbytes('id="'),[2,0,[12,34,0]]],
       caml_string_of_jsbytes('id="%s"')],
     _ab_=
      [0,
       [11,caml_string_of_jsbytes("bb_"),[2,0,0]],
       caml_string_of_jsbytes("bb_%s")],
     _ac_=
      [0,
       [11,caml_string_of_jsbytes("nb_"),[2,0,0]],
       caml_string_of_jsbytes("nb_%s")],
     _ad_=
      [0,
       [11,caml_string_of_jsbytes("page_"),[2,0,0]],
       caml_string_of_jsbytes("page_%s")],
     _ae_=
      [0,
       [11,caml_string_of_jsbytes("do_back_"),[2,0,0]],
       caml_string_of_jsbytes("do_back_%s")],
     _af_=
      [0,
       [11,caml_string_of_jsbytes("do_next_"),[2,0,0]],
       caml_string_of_jsbytes("do_next_%s")],
     _ag_=
      [0,
       [11,caml_string_of_jsbytes("pages_"),[2,0,0]],
       caml_string_of_jsbytes("pages_%s")],
     _ah_=
      [0,
       [11,caml_string_of_jsbytes("present_"),[2,0,0]],
       caml_string_of_jsbytes("present_%s")],
     _ai_=
      [0,
       [11,caml_string_of_jsbytes("savefs_"),[2,0,0]],
       caml_string_of_jsbytes("savefs_%s")],
     _aj_=
      [0,
       [11,caml_string_of_jsbytes("loadfs_"),[2,0,0]],
       caml_string_of_jsbytes("loadfs_%s")],
     _ak_=
      [0,
       [11,caml_string_of_jsbytes("curr_"),[2,0,0]],
       caml_string_of_jsbytes("curr_%s")],
     _al_=
      [0,
       [11,caml_string_of_jsbytes("save_"),[2,0,0]],
       caml_string_of_jsbytes("save_%s")],
     _am_=
      [0,
       [11,caml_string_of_jsbytes("load_"),[2,0,0]],
       caml_string_of_jsbytes("load_%s")],
     _an_=
      [0,
       [11,caml_string_of_jsbytes("stack_"),[2,0,0]],
       caml_string_of_jsbytes("stack_%s")],
     _ao_=
      [0,
       [11,caml_string_of_jsbytes("stack_ptr_"),[2,0,0]],
       caml_string_of_jsbytes("stack_ptr_%s")],
     _ap_=
      [0,
       [11,caml_string_of_jsbytes("push_"),[2,0,0]],
       caml_string_of_jsbytes("push_%s")],
     _aq_=
      [0,
       [11,caml_string_of_jsbytes("pop_"),[2,0,0]],
       caml_string_of_jsbytes("pop_%s")],
     _at_=
      [0,
       [11,
        caml_string_of_jsbytes("var "),
        [2,0,[11,caml_string_of_jsbytes(" = 0;\n"),0]]],
       caml_string_of_jsbytes("var %s = 0;\n")],
     _au_=
      [0,
       [11,
        caml_string_of_jsbytes("var "),
        [2,
         0,
         [11,
          caml_string_of_jsbytes(" = new Array("),
          [4,0,0,0,[11,caml_string_of_jsbytes(");\n"),0]]]]],
       caml_string_of_jsbytes("var %s = new Array(%d);\n")],
     _av_=
      [0,
       [11,
        caml_string_of_jsbytes("function "),
        [2,0,[11,caml_string_of_jsbytes(" (i) {\n"),0]]],
       caml_string_of_jsbytes("function %s (i) {\n")],
     _aw_=
      [0,
       [11,
        caml_string_of_jsbytes("  "),
        [2,
         0,
         [11,
          caml_string_of_jsbytes(" ["),
          [2,0,[11,caml_string_of_jsbytes("++] = i;\n"),0]]]]],
       caml_string_of_jsbytes("  %s [%s++] = i;\n")],
     _ax_=
      [0,
       [11,
        caml_string_of_jsbytes("function "),
        [2,0,[11,caml_string_of_jsbytes(" () {\n"),0]]],
       caml_string_of_jsbytes("function %s () {\n")],
     _ay_=
      [0,
       [11,
        caml_string_of_jsbytes("  return "),
        [2,
         0,
         [11,
          caml_string_of_jsbytes(" [--"),
          [2,0,[11,caml_string_of_jsbytes("];\n"),0]]]]],
       caml_string_of_jsbytes("  return %s [--%s];\n")],
     _az_=
      [0,
       [11,
        caml_string_of_jsbytes("var "),
        [2,0,[11,caml_string_of_jsbytes(" = {};\n"),0]]],
       caml_string_of_jsbytes("var %s = {};\n")],
     _aA_=
      [0,
       [11,
        caml_string_of_jsbytes("var "),
        [2,0,[11,caml_string_of_jsbytes(" = 0;\n"),0]]],
       caml_string_of_jsbytes("var %s = 0;\n")],
     _aB_=
      [0,
       [11,
        caml_string_of_jsbytes("var "),
        [2,0,[11,caml_string_of_jsbytes(" = [\n"),0]]],
       caml_string_of_jsbytes("var %s = [\n")],
     _aD_=
      [0,
       [11,
        caml_string_of_jsbytes("var "),
        [2,0,[11,caml_string_of_jsbytes(" = [\n"),0]]],
       caml_string_of_jsbytes("var %s = [\n")],
     _aF_=
      [0,
       [11,
        caml_string_of_jsbytes("function "),
        [2,0,[11,caml_string_of_jsbytes(" () {\n"),0]]],
       caml_string_of_jsbytes("function %s () {\n")],
     _aG_=
      [0,
       [11,
        caml_string_of_jsbytes("  "),
        [2,
         0,
         [12,
          91,
          [2,
           0,
           [11,
            caml_string_of_jsbytes("] ("),
            [2,0,[11,caml_string_of_jsbytes(");\n"),0]]]]]]],
       caml_string_of_jsbytes("  %s[%s] (%s);\n")],
     _aH_=
      [0,
       [11,
        caml_string_of_jsbytes("var "),
        [2,0,[11,caml_string_of_jsbytes(" = [\n"),0]]],
       caml_string_of_jsbytes("var %s = [\n")],
     _aJ_=
      [0,
       [11,
        caml_string_of_jsbytes("function "),
        [2,0,[11,caml_string_of_jsbytes(" () {\n"),0]]],
       caml_string_of_jsbytes("function %s () {\n")],
     _aK_=
      [0,
       [11,
        caml_string_of_jsbytes("  "),
        [2,
         0,
         [12,
          91,
          [2,
           0,
           [11,
            caml_string_of_jsbytes("] ("),
            [2,0,[11,caml_string_of_jsbytes(");\n"),0]]]]]]],
       caml_string_of_jsbytes("  %s[%s] (%s);\n")],
     _aL_=
      [0,
       [11,
        caml_string_of_jsbytes("function "),
        [2,0,[11,caml_string_of_jsbytes(" () {\n"),0]]],
       caml_string_of_jsbytes("function %s () {\n")],
     _aM_=
      [0,
       [11,
        caml_string_of_jsbytes('  document.getElementById ("'),
        [2,
         0,
         [11,
          caml_string_of_jsbytes('").innerHTML = '),
          [2,0,[12,91,[2,0,[11,caml_string_of_jsbytes("];\n"),0]]]]]]],
       caml_string_of_jsbytes
        ('  document.getElementById ("%s").innerHTML = %s[%s];\n')],
     _aN_=
      [0,
       [11,
        caml_string_of_jsbytes("  "),
        [2,
         0,
         [11,
          caml_string_of_jsbytes(" ("),
          [2,0,[11,caml_string_of_jsbytes(");\n"),0]]]]],
       caml_string_of_jsbytes("  %s (%s);\n")],
     _aO_=
      [0,
       [11,
        caml_string_of_jsbytes('  document.getElementById ("'),
        [2,
         0,
         [11,
          caml_string_of_jsbytes('").disabled = 0 == '),
          [2,0,[11,caml_string_of_jsbytes(";\n"),0]]]]],
       caml_string_of_jsbytes
        ('  document.getElementById ("%s").disabled = 0 == %s;\n')],
     _aP_=
      [0,
       [11,
        caml_string_of_jsbytes("function "),
        [2,0,[11,caml_string_of_jsbytes(" () {\n"),0]]],
       caml_string_of_jsbytes("function %s () {\n")],
     _aQ_=
      [0,
       [11,
        caml_string_of_jsbytes("  "),
        [2,
         0,
         [11,
          caml_string_of_jsbytes(" ("),
          [2,0,[11,caml_string_of_jsbytes(");\n"),0]]]]],
       caml_string_of_jsbytes("  %s (%s);\n")],
     _aR_=
      [0,
       [11,
        caml_string_of_jsbytes("  "),
        [2,
         0,
         [11,
          caml_string_of_jsbytes(" = "),
          [2,0,[11,caml_string_of_jsbytes(" ();\n"),0]]]]],
       caml_string_of_jsbytes("  %s = %s ();\n")],
     _aS_=
      [0,
       [11,
        caml_string_of_jsbytes("  "),
        [2,0,[11,caml_string_of_jsbytes(" ();\n"),0]]],
       caml_string_of_jsbytes("  %s ();\n")],
     _aT_=
      [0,
       [11,
        caml_string_of_jsbytes("function "),
        [2,0,[11,caml_string_of_jsbytes(" () {\n"),0]]],
       caml_string_of_jsbytes("function %s () {\n")],
     _aU_=
      [0,
       [11,
        caml_string_of_jsbytes("  "),
        [2,
         0,
         [11,
          caml_string_of_jsbytes(" ("),
          [2,0,[11,caml_string_of_jsbytes(");\n"),0]]]]],
       caml_string_of_jsbytes("  %s (%s);\n")],
     _aV_=
      [0,
       [11,
        caml_string_of_jsbytes("  var nxt = "),
        [2,
         0,
         [11,
          caml_string_of_jsbytes(" ("),
          [2,
           0,
           [11,
            caml_string_of_jsbytes(", "),
            [2,0,[11,caml_string_of_jsbytes(");\n"),0]]]]]]],
       caml_string_of_jsbytes("  var nxt = %s (%s, %s);\n")],
     _aW_=
      [0,
       [11,
        caml_string_of_jsbytes("  if (nxt < 0 || nxt == "),
        [2,0,[11,caml_string_of_jsbytes(") return;\n"),0]]],
       caml_string_of_jsbytes("  if (nxt < 0 || nxt == %s) return;\n")],
     _aX_=
      [0,
       [11,
        caml_string_of_jsbytes("  "),
        [2,
         0,
         [11,
          caml_string_of_jsbytes(" ("),
          [2,0,[11,caml_string_of_jsbytes(");\n"),0]]]]],
       caml_string_of_jsbytes("  %s (%s);\n")],
     _aY_=
      [0,
       [11,
        caml_string_of_jsbytes("  "),
        [2,0,[11,caml_string_of_jsbytes(" = nxt;\n"),0]]],
       caml_string_of_jsbytes("  %s = nxt;\n")],
     _aZ_=
      [0,
       [11,
        caml_string_of_jsbytes("  "),
        [2,0,[11,caml_string_of_jsbytes(" ();\n"),0]]],
       caml_string_of_jsbytes("  %s ();\n")],
     _X_=
      [0,
       [11,
        caml_string_of_jsbytes('  curr["'),
        [2,
         0,
         [11,
          caml_string_of_jsbytes('"] = '),
          [2,0,[11,caml_string_of_jsbytes('.replace(/\\u00a0/g, " ");\n'),0]]]]],
       caml_string_of_jsbytes('  curr["%s"] = %s.replace(/\\u00a0/g, " ");\n')],
     _W_=
      [0,
       [11,
        caml_string_of_jsbytes('  curr["'),
        [2,
         0,
         [11,
          caml_string_of_jsbytes('"] = document.getElementById("'),
          [2,0,[11,caml_string_of_jsbytes('").value;\n'),0]]]]],
       caml_string_of_jsbytes
        ('  curr["%s"] = document.getElementById("%s").value;\n')],
     _Y_=
      [0,
       [11,
        caml_string_of_jsbytes('document.getElementById("'),
        [2,0,[11,caml_string_of_jsbytes('")'),0]]],
       caml_string_of_jsbytes('document.getElementById("%s")')],
     _Z_=
      [0,
       [11,
        caml_string_of_jsbytes('  curr["'),
        [2,
         0,
         [11,
          caml_string_of_jsbytes('"] = document.getElementById("'),
          [2,0,[11,caml_string_of_jsbytes('").checked;\n'),0]]]]],
       caml_string_of_jsbytes
        ('  curr["%s"] = document.getElementById("%s").checked;\n')],
     ___=
      [0,
       [11,
        caml_string_of_jsbytes('  coll = document.getElementsByName ("'),
        [2,0,[11,caml_string_of_jsbytes('");\n'),0]]],
       caml_string_of_jsbytes('  coll = document.getElementsByName ("%s");\n')],
     _$_=
      [0,
       [11,
        caml_string_of_jsbytes('       curr["'),
        [2,0,[11,caml_string_of_jsbytes('"] = coll[i].value;\n'),0]]],
       caml_string_of_jsbytes('       curr["%s"] = coll[i].value;\n')],
     _P_=
      [0,
       [11,
        caml_string_of_jsbytes('  if (curr["'),
        [2,
         0,
         [11,
          caml_string_of_jsbytes('"]) '),
          [2,
           0,
           [11,
            caml_string_of_jsbytes(' = curr["'),
            [2,0,[11,caml_string_of_jsbytes('"];\n'),0]]]]]]],
       caml_string_of_jsbytes('  if (curr["%s"]) %s = curr["%s"];\n')],
     _O_=
      [0,
       [11,
        caml_string_of_jsbytes('  if (curr["'),
        [2,
         0,
         [11,
          caml_string_of_jsbytes('"]) document.getElementById ("'),
          [2,
           0,
           [11,
            caml_string_of_jsbytes('").value = curr["'),
            [2,0,[11,caml_string_of_jsbytes('"];\n'),0]]]]]]],
       caml_string_of_jsbytes
        ('  if (curr["%s"]) document.getElementById ("%s").value = curr["%s"];\n')],
     _Q_=
      [0,
       [11,
        caml_string_of_jsbytes('document.getElementById ("'),
        [2,0,[11,caml_string_of_jsbytes('")'),0]]],
       caml_string_of_jsbytes('document.getElementById ("%s")')],
     _R_=
      [0,
       [11,
        caml_string_of_jsbytes('  if (curr["'),
        [2,
         0,
         [11,
          caml_string_of_jsbytes('"]) document.getElementById ("'),
          [2,
           0,
           [11,
            caml_string_of_jsbytes('").checked = curr["'),
            [2,0,[11,caml_string_of_jsbytes('"];\n'),0]]]]]]],
       caml_string_of_jsbytes
        ('  if (curr["%s"]) document.getElementById ("%s").checked = curr["%s"];\n')],
     _S_=
      [0,
       [11,
        caml_string_of_jsbytes('  if (curr["'),
        [2,0,[11,caml_string_of_jsbytes('"]) {\n'),0]]],
       caml_string_of_jsbytes('  if (curr["%s"]) {\n')],
     _T_=
      [0,
       [11,
        caml_string_of_jsbytes('    coll = document.getElementsByName ("'),
        [2,0,[11,caml_string_of_jsbytes('");\n'),0]]],
       caml_string_of_jsbytes
        ('    coll = document.getElementsByName ("%s");\n')],
     _U_=
      [0,
       [11,
        caml_string_of_jsbytes
         ('      coll[i].checked = coll[i].value == curr["'),
        [2,0,[11,caml_string_of_jsbytes('"];\n'),0]]],
       caml_string_of_jsbytes
        ('      coll[i].checked = coll[i].value == curr["%s"];\n')],
     _K_=
      [0,
       [11,
        caml_string_of_jsbytes("if (typeof "),
        [2,0,[11,caml_string_of_jsbytes('.innerText === "undefined") {'),0]]],
       caml_string_of_jsbytes('if (typeof %s.innerText === "undefined") {')],
     _L_=
      [0,
       [11,caml_string_of_jsbytes("  "),[2,0,0]],
       caml_string_of_jsbytes("  %s")],
     _M_=
      [0,
       [11,caml_string_of_jsbytes("  "),[2,0,0]],
       caml_string_of_jsbytes("  %s")],
     _E_=
      [0,
       [2,0,[11,caml_string_of_jsbytes(' onclick="'),[2,0,[12,34,0]]]],
       caml_string_of_jsbytes('%s onclick="%s"')],
     _F_=
      [0,
       [2,0,[11,caml_string_of_jsbytes(' onclick="'),[2,0,[12,34,0]]]],
       caml_string_of_jsbytes('%s onclick="%s"')],
     _G_=[0,caml_string_of_jsbytes('colspan="3" align="center"')],
     _H_=[0,caml_string_of_jsbytes('colspan="3"')],
     _I_=
      [0,
       [11,caml_string_of_jsbytes("save_"),[2,0,0]],
       caml_string_of_jsbytes("save_%s")],
     _J_=
      [0,
       [11,caml_string_of_jsbytes("load_"),[2,0,0]],
       caml_string_of_jsbytes("load_%s")],
     _N_=
      [0,
       [11,
        caml_string_of_jsbytes("function "),
        [2,0,[11,caml_string_of_jsbytes(" (curr) {\n"),0]]],
       caml_string_of_jsbytes("function %s (curr) {\n")],
     _V_=
      [0,
       [11,
        caml_string_of_jsbytes("function "),
        [2,0,[11,caml_string_of_jsbytes(" (curr) {\n"),0]]],
       caml_string_of_jsbytes("function %s (curr) {\n")],
     _y_=
      [0,
       [2,0,[11,caml_string_of_jsbytes(' id="'),[2,0,[12,34,0]]]],
       caml_string_of_jsbytes('%s id="%s"')],
     _C_=
      [0,
       [2,0,[11,caml_string_of_jsbytes(' name="'),[2,0,[12,34,0]]]],
       caml_string_of_jsbytes('%s name="%s"')],
     _z_=[0,caml_string_of_jsbytes('align="left" valign="center"')],
     _A_=[0,caml_string_of_jsbytes('align="center" valign="center"')],
     _B_=[0,caml_string_of_jsbytes('align="right" valign="center"')],
     _x_=[0,[2,0,[12,95,[2,0,0]]],caml_string_of_jsbytes("%s_%s")],
     _w_=
      [0,
       [11,caml_string_of_jsbytes("<a href="),[3,0,[12,62,0]]],
       caml_string_of_jsbytes("<a href=%S>")],
     _v_=
      [0,
       [11,caml_string_of_jsbytes("<a name="),[3,0,[12,62,0]]],
       caml_string_of_jsbytes("<a name=%S>")],
     _u_=
      [0,
       [2,0,[11,caml_string_of_jsbytes(' value="'),[2,0,[12,34,0]]]],
       caml_string_of_jsbytes('%s value="%s"')],
     _t_=
      [0,
       [2,
        0,
        [12,
         32,
         [2,
          0,
          [11,caml_string_of_jsbytes(' type="radio" value="'),[2,0,[12,34,0]]]]]],
       caml_string_of_jsbytes('%s %s type="radio" value="%s"')],
     _s_=
      [0,
       [2,0,[11,caml_string_of_jsbytes(' type="text"'),0]],
       caml_string_of_jsbytes('%s type="text"')],
     _r_=
      [0,
       [2,0,[11,caml_string_of_jsbytes(' contentEditable="true"'),0]],
       caml_string_of_jsbytes('%s contentEditable="true"')],
     _q_=
      [0,
       [2,0,[11,caml_string_of_jsbytes(' type="button"'),0]],
       caml_string_of_jsbytes('%s type="button"')],
     _p_=
      [0,
       [2,0,[11,caml_string_of_jsbytes(' type="checkbox"'),0]],
       caml_string_of_jsbytes('%s type="checkbox"')],
     _o_=
      [0,
       [11,
        caml_string_of_jsbytes
         ('<link rel="stylesheet" type="text/css" href="'),
        [2,0,[11,caml_string_of_jsbytes('" media="screen">'),0]]],
       caml_string_of_jsbytes
        ('<link rel="stylesheet" type="text/css" href="%s" media="screen">')],
     _m_=
      [0,
       [11,caml_string_of_jsbytes("<\/"),[2,0,[12,62,0]]],
       caml_string_of_jsbytes("<\/%s>")],
     _n_=[0,[12,60,[2,0,[12,62,0]]],caml_string_of_jsbytes("<%s>")],
     _a_=[0,caml_string_of_jsbytes("pages"),caml_string_of_jsbytes("i")],
     _b_=[0,caml_string_of_jsbytes("items")],
     _d_=
      [0,
       caml_string_of_jsbytes("flag"),
       caml_string_of_jsbytes("combo"),
       caml_string_of_jsbytes("text"),
       caml_string_of_jsbytes("radio"),
       caml_string_of_jsbytes("id"),
       caml_string_of_jsbytes("add"),
       caml_string_of_jsbytes("div"),
       caml_string_of_jsbytes("render"),
       caml_string_of_jsbytes("string")];
    function escape(s)
     {var
       buf=caml_call1(Stdlib_Buffer[1],caml_ml_string_length(s) * 2 | 0),
       _dW_=caml_ml_string_length(s) - 1 | 0,
       _dV_=0;
      if(_dW_ >= 0)
       {var i=_dV_;
        for(;;)
         {var c=runtime.caml_string_get(s,i);
          if(34 === c)
           var _dX_=cst_quot;
          else
           {var switch$0=0;
            if(60 <= c)
             if(63 <= c)
              switch$0 = 1;
             else
              {var switch$1=0;
               switch(c - 60 | 0)
                {case 0:var _dZ_=cst_lt;break;
                 case 1:switch$0 = 1;switch$1 = 1;break;
                 default:var _dZ_=cst_gt}
               if(! switch$1)var _dX_=_dZ_}
            else
             if(38 === c)var _dX_=cst_amp;else switch$0 = 1;
            if(switch$0)var _dX_=caml_call2(Stdlib_String[1],1,c)}
          caml_call2(Stdlib_Buffer[16],buf,_dX_);
          var _dY_=i + 1 | 0;
          if(_dW_ !== i){var i=_dY_;continue}
          break}}
      return caml_call1(Stdlib_Buffer[2],buf)}
    function string(s){var _dU_=escape(s);return caml_call1(View[5],_dU_)}
    function raw(s){return caml_call1(View[5],s)}
    var
     _k_=View[14],
     _l_=View[15],
     _f_=View[4],
     _g_=View[6],
     _h_=View[7],
     _i_=View[8],
     _j_=View[9],
     br=raw(cst_br);
    function tag(opt,s,p)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$2;
      var
       _dQ_=[0,p,[0,raw(caml_call2(Stdlib_Printf[4],_m_,s)),0]],
       _dR_=caml_string_equal(attrs,cst)?cst$0:cst$1,
       _dS_=caml_call2(Stdlib[28],_dR_,attrs),
       _dT_=caml_call2(Stdlib[28],s,_dS_);
      return caml_call1
              (_k_,[0,raw(caml_call2(Stdlib_Printf[4],_n_,_dT_)),_dQ_])}
    function link(url)
     {return caml_call1(_k_,[0,raw(caml_call2(Stdlib_Printf[4],_o_,url)),0])}
    function html(opt)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$3;
      var _dO_=[0,attrs];
      return function(_dP_){return tag(_dO_,cst_html,_dP_)}}
    function title(opt)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$4;
      var _dM_=[0,attrs];
      return function(_dN_){return tag(_dM_,cst_title,_dN_)}}
    function body(opt)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$5;
      var _dK_=[0,attrs];
      return function(_dL_){return tag(_dK_,cst_body,_dL_)}}
    function ul(opt)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$6;
      var _dI_=[0,attrs];
      return function(_dJ_){return tag(_dI_,cst_ul,_dJ_)}}
    function ol(opt)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$7;
      var _dG_=[0,attrs];
      return function(_dH_){return tag(_dG_,cst_ol,_dH_)}}
    function li(opt)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$8;
      var _dE_=[0,attrs];
      return function(_dF_){return tag(_dE_,cst_li,_dF_)}}
    function b(opt)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$9;
      var _dC_=[0,attrs];
      return function(_dD_){return tag(_dC_,cst_b,_dD_)}}
    function i(opt)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$10;
      var _dA_=[0,attrs];
      return function(_dB_){return tag(_dA_,cst_i,_dB_)}}
    function table(opt)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$11;
      var _dy_=[0,attrs];
      return function(_dz_){return tag(_dy_,cst_table,_dz_)}}
    function tr(opt)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$12;
      var _dw_=[0,attrs];
      return function(_dx_){return tag(_dw_,cst_tr,_dx_)}}
    function td(opt)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$13;
      var _du_=[0,attrs];
      return function(_dv_){return tag(_du_,cst_td,_dv_)}}
    function th(opt)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$14;
      var _ds_=[0,attrs];
      return function(_dt_){return tag(_ds_,cst_th,_dt_)}}
    function form(opt)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$15;
      var _dq_=[0,attrs];
      return function(_dr_){return tag(_dq_,cst_form,_dr_)}}
    function input(opt)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$16;
      var _do_=[0,attrs];
      return function(_dp_){return tag(_do_,cst_input,_dp_)}}
    function checkbox(opt)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$17;
      var _dm_=[0,caml_call2(Stdlib_Printf[4],_p_,attrs)];
      return function(_dn_){return tag(_dm_,cst_input$0,_dn_)}}
    function button(opt)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$18;
      var _dk_=[0,caml_call2(Stdlib_Printf[4],_q_,attrs)];
      return function(_dl_){return tag(_dk_,cst_button,_dl_)}}
    function div(opt)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$19;
      var _di_=[0,caml_call2(Stdlib_Printf[4],_r_,attrs)];
      return function(_dj_){return tag(_di_,cst_div,_dj_)}}
    function text(opt)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$20;
      var _dg_=[0,caml_call2(Stdlib_Printf[4],_s_,attrs)];
      return function(_dh_){return tag(_dg_,cst_input$1,_dh_)}}
    function textarea(opt)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$21;
      var _de_=[0,attrs];
      return function(_df_){return tag(_de_,cst_textarea,_df_)}}
    function radio(opt,triples)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$22;
      function _dc_(param)
       {var a=param[3],v=param[2],name=param[1],_dd_=[0,raw(cst_nbsp),0];
        return caml_call1
                (_k_,
                 [0,
                  tag
                   ([0,caml_call4(Stdlib_Printf[4],_t_,attrs,a,v)],
                    cst_input$2,
                    name),
                  _dd_])}
      return caml_call1(_k_,caml_call2(Stdlib_List[19],_dc_,triples))}
    function select(opt,triples)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$23;
      function _db_(param)
       {var a=param[3],v=param[2],name=param[1];
        return tag([0,caml_call3(Stdlib_Printf[4],_u_,a,v)],cst_option,name)}
      return tag
              ([0,attrs],
               cst_select,
               caml_call1(_k_,caml_call2(Stdlib_List[19],_db_,triples)))}
    function anchor(r,p)
     {var _da_=[0,p,[0,raw(cst_a),0]];
      return caml_call1(_k_,[0,raw(caml_call2(Stdlib_Printf[4],_v_,r)),_da_])}
    function ref(r,p)
     {var _c$_=[0,p,[0,raw(cst_a$0),0]];
      return caml_call1(_k_,[0,raw(caml_call2(Stdlib_Printf[4],_w_,r)),_c$_])}
    function named(n,p)
     {var _c__=string(caml_call2(Stdlib[28],n,cst$24));
      return caml_call1(_k_,[0,caml_call1(b(0),_c__),[0,p,0]])}
    function list(p)
     {var _c7_=0;
      function _c8_(_c9_){return tag(_c7_,cst_li$0,_c9_)}
      return tag
              (0,cst_ul$0,caml_call1(_k_,caml_call2(Stdlib_List[19],_c8_,p)))}
    function array(p)
     {var _c4_=0;
      function _c5_(_c6_){return tag(_c4_,cst_li$1,_c6_)}
      return tag
              (0,cst_ul$1,caml_call1(_l_,caml_call2(Stdlib_Array[15],_c5_,p)))}
    function fields(l)
     {function _c3_(param){var x=param[2],n=param[1];return named(n,x)}
      return list(caml_call2(Stdlib_List[19],_c3_,l))}
    function make(f,x){return raw(caml_call1(f,x))}
    function _D_(_b0_)
     {var
       _b1_=caml_call2(CamlinternalOO[3],_b0_,cst$26),
       _b2_=caml_call2(CamlinternalOO[3],_b0_,cst$27),
       _b3_=caml_call3(CamlinternalOO[4],_b0_,shared,_b_),
       _ca_=_b3_[9],
       _cb_=_b3_[10],
       _b4_=_b3_[1],
       _b5_=_b3_[2],
       _b6_=_b3_[3],
       _b7_=_b3_[4],
       _b8_=_b3_[5],
       _b9_=_b3_[6],
       _b__=_b3_[7],
       _b$_=_b3_[8];
      function _cc_(self_1,param,_cv_)
       {var
         nextCb=_cv_[3],
         nextA=_cv_[2],
         next=_cv_[1],
         backCb=param[3],
         backA=param[2],
         back=param[1],
         _cw_=caml_call1(Stdlib_List[9],self_1[1 + _cb_]);
        function _cx_(t)
         {function attrs(attrs)
           {return caml_call3(Stdlib_Printf[4],_y_,attrs,t[2])}
          var _cT_=t[3],_cS_=0;
          switch(_cT_[0])
           {case 0:
             var
              attrs$0=_cT_[1],
              _cU_=View[2],
              _cV_=caml_call1(text([0,attrs(attrs$0)]),_cU_);
             break;
            case 1:
             var
              text$0=_cT_[2],
              attrs$1=_cT_[1],
              _c0_=raw(text$0),
              _cV_=caml_call1(textarea([0,attrs(attrs$1)]),_c0_);
             break;
            case 2:
             var
              text$1=_cT_[2],
              attrs$2=_cT_[1],
              _c1_=raw(text$1),
              _cV_=caml_call1(div([0,attrs(attrs$2)]),_c1_);
             break;
            case 3:
             var
              attrs$3=_cT_[1],
              _c2_=View[2],
              _cV_=caml_call1(checkbox([0,attrs(attrs$3)]),_c2_);
             break;
            case 4:
             var
              triples=_cT_[2],
              attrs$4=_cT_[1],
              _cV_=select([0,attrs(attrs$4)],triples);
             break;
            default:
             var
              triples$0=_cT_[2],
              attrs$5=_cT_[1],
              _cV_=
               radio
                ([0,attrs(caml_call3(Stdlib_Printf[4],_C_,attrs$5,t[2]))],
                 triples$0)}
          var
           _cW_=[0,caml_call1(td(_z_),_cV_),_cS_],
           _cX_=raw(cst$25),
           _cY_=[0,caml_call1(td(_A_),_cX_),_cW_],
           _cZ_=raw(t[1]),
           r=caml_call1(_k_,[0,caml_call1(td(_B_),_cZ_),_cY_]),
           id=t[2];
          return [0,[0,t[1],id,t[3]],r]}
        var
         _cy_=caml_call2(Stdlib_List[19],_cx_,_cw_),
         match=caml_call1(Stdlib_List[54],_cy_),
         rendered=match[2],
         ids=match[1],
         _cz_=raw(next),
         _cA_=
          [0,
           caml_call1
            (button([0,caml_call3(Stdlib_Printf[4],_E_,nextA,nextCb)]),_cz_),
           0],
         _cB_=[0,raw(cst_nbsp_nbsp),_cA_],
         _cC_=raw(back),
         _cD_=
          caml_call1
           (_k_,
            [0,
             caml_call1
              (button([0,caml_call3(Stdlib_Printf[4],_F_,backA,backCb)]),_cC_),
             _cB_]),
         _cE_=caml_call1(td(_G_),_cD_),
         _cF_=[0,caml_call1(tr(0),_cE_),0],
         _cG_=raw(cst_hr),
         _cH_=caml_call1(td(_H_),_cG_),
         _cI_=[0,caml_call1(tr(0),_cH_),_cF_];
        function _cJ_(eta){return caml_call1(tr(0),eta)}
        var
         _cK_=caml_call2(Stdlib_List[19],_cJ_,rendered),
         _cL_=caml_call1(_k_,caml_call2(Stdlib[37],_cK_,_cI_)),
         html=caml_call1(table([0,self_1[1 + _b2_]]),_cL_),
         savef=caml_call2(Stdlib_Printf[4],_I_,self_1[1 + _b1_]),
         loadf=caml_call2(Stdlib_Printf[4],_J_,self_1[1 + _b1_]),
         js=caml_call1(Stdlib_Buffer[1],1024);
        function generate(s){return caml_call2(Stdlib_Buffer[16],js,s)}
        function innerText(elem,gen)
         {generate(caml_call2(Stdlib_Printf[4],_K_,elem));
          var
           _cQ_=
            caml_call1(gen,caml_call2(Stdlib[28],elem,cst_textContent));
          generate(caml_call2(Stdlib_Printf[4],_L_,_cQ_));
          generate(cst$28);
          generate(cst_else);
          var _cR_=caml_call1(gen,caml_call2(Stdlib[28],elem,cst_innerText));
          generate(caml_call2(Stdlib_Printf[4],_M_,_cR_));
          return generate(cst$29)}
        generate(caml_call2(Stdlib_Printf[4],_N_,loadf));
        generate(cst_var_coll_null);
        function _cM_(param)
         {var t=param[3],id=param[2],name=param[1];
          switch(t[0])
           {case 2:
             var
              _cP_=
               function(elem)
                {return caml_call4(Stdlib_Printf[4],_P_,name,elem,name)};
             return innerText(caml_call2(Stdlib_Printf[4],_Q_,id),_cP_);
            case 3:
             return generate(caml_call4(Stdlib_Printf[4],_R_,name,id,name));
            case 5:
             generate(caml_call2(Stdlib_Printf[4],_S_,name));
             generate(caml_call2(Stdlib_Printf[4],_T_,id));
             generate(cst_for_var_i_0_i_coll_length_);
             generate(caml_call2(Stdlib_Printf[4],_U_,name));
             generate(cst$30);
             return generate(cst$31);
            default:
             return generate(caml_call4(Stdlib_Printf[4],_O_,name,id,name))}}
        caml_call2(Stdlib_List[17],_cM_,ids);
        generate(cst$32);
        generate(caml_call2(Stdlib_Printf[4],_V_,savef));
        generate(cst_var_coll_null$0);
        function _cN_(param)
         {var t=param[3],id=param[2],name=param[1];
          switch(t[0])
           {case 2:
             var
              _cO_=
               function(elem)
                {return caml_call3(Stdlib_Printf[4],_X_,name,elem)};
             return innerText(caml_call2(Stdlib_Printf[4],_Y_,id),_cO_);
            case 3:return generate(caml_call3(Stdlib_Printf[4],_Z_,name,id));
            case 5:
             generate(caml_call2(Stdlib_Printf[4],___,id));
             generate(cst_for_var_i_0_i_coll_length_$0);
             generate(cst_if_coll_i_checked);
             generate(caml_call2(Stdlib_Printf[4],_$_,name));
             generate(cst_break);
             generate(cst$33);
             return generate(cst$34);
            default:return generate(caml_call3(Stdlib_Printf[4],_W_,name,id))}}
        caml_call2(Stdlib_List[17],_cN_,ids);
        generate(cst$35);
        return [0,savef,loadf,caml_call1(Stdlib_Buffer[2],js),html]}
      function _cd_(self_1,name)
       {var _ct_=self_1[1 + _cb_];
        function _cu_(i){return caml_string_equal(i[1],name)}
        return caml_call2(Stdlib_List[38],_cu_,_ct_)[2]}
      function _ce_(self_1,opt,name,items)
       {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$36;
        return caml_call3(self_1[1][1 + _ca_],self_1,name,[5,attrs,items])}
      function _cf_(self_1,opt,name,items)
       {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$37;
        return caml_call3(self_1[1][1 + _ca_],self_1,name,[4,attrs,items])}
      function _cg_(self_1,opt,name)
       {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$38;
        return caml_call3(self_1[1][1 + _ca_],self_1,name,[3,attrs])}
      function _ch_(self_1,opt,name)
       {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$39;
        return caml_call3(self_1[1][1 + _ca_],self_1,name,[0,attrs])}
      function _ci_(self_1,opt,_cs_,name)
       {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$41;
        if(_cs_)var sth$0=_cs_[1],default$0=sth$0;else var default$0=cst$40;
        return caml_call3(self_1[1][1 + _ca_],self_1,name,[2,attrs,default$0])}
      function _cj_(self_1,opt,_cr_,name)
       {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$43;
        if(_cr_)var sth$0=_cr_[1],default$0=sth$0;else var default$0=cst$42;
        return caml_call3(self_1[1][1 + _ca_],self_1,name,[1,attrs,default$0])}
      var
       _ck_=
        [0,
         _ca_,
         function(self_1,name,item)
          {var id=self_1[1 + _b1_],_cq_=self_1[1 + _cb_];
           self_1[1 + _cb_]
           =
           [0,[0,name,caml_call3(Stdlib_Printf[4],_x_,id,name),item],_cq_];
           return self_1},
         _b4_,
         _cj_,
         _b__,
         _ci_,
         _b5_,
         _ch_,
         _b9_,
         _cg_,
         _b$_,
         _cf_,
         _b7_,
         _ce_,
         _b8_,
         _cd_,
         _b6_,
         _cc_];
      caml_call2(CamlinternalOO[11],_b0_,_ck_);
      return function(_co_,_cn_,_cm_,_cl_)
       {var _cp_=caml_call2(CamlinternalOO[24],_cn_,_b0_);
        _cp_[1 + _b2_] = _cl_;
        _cp_[1 + _b1_] = _cm_;
        _cp_[1 + _cb_] = 0;
        return _cp_}}
    var c=caml_call2(CamlinternalOO[19],_d_,_D_);
    function string$0(opt,name,p)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$44;
      return caml_call3
              (caml_get_public_method(p,288368849,1),p,[0,attrs],name)}
    function flag(opt,name,p)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$45;
      return caml_call3
              (caml_get_public_method(p,-1010955348,2),p,[0,attrs],name)}
    function combo(opt,name,items,p)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$46;
      return caml_call4
              (caml_get_public_method(p,-899864498,3),p,[0,attrs],name,items)}
    function radio$0(opt,name,items,p)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$47;
      return caml_call4
              (caml_get_public_method(p,-468184837,4),p,[0,attrs],name,items)}
    function text$0(opt,_bZ_,name,p)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$49;
      if(_bZ_)var sth$0=_bZ_[1],default$0=sth$0;else var default$0=cst$48;
      return caml_call4
              (caml_get_public_method(p,-856044371,5),
               p,
               [0,attrs],
               [0,default$0],
               name)}
    function div$0(opt,_bY_,name,p)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$51;
      if(_bY_)var sth$0=_bY_[1],default$0=sth$0;else var default$0=cst$50;
      return caml_call4
              (caml_get_public_method(p,4996433,6),
               p,
               [0,attrs],
               [0,default$0],
               name)}
    function _aa_(_bt_)
     {var
       _bu_=caml_call2(CamlinternalOO[3],_bt_,cst$52),
       _bv_=caml_call2(CamlinternalOO[3],_bt_,cst$53),
       _bw_=caml_call2(CamlinternalOO[3],_bt_,cst$54),
       _bx_=caml_call2(CamlinternalOO[3],_bt_,cst$55),
       _by_=caml_call3(CamlinternalOO[4],_bt_,_c_,_a_),
       _bB_=_by_[3],
       _bC_=_by_[4],
       _bz_=_by_[1],
       _bA_=_by_[2];
      function _bD_(self_2)
       {var
         n=caml_call1(Stdlib_List[1],self_2[1 + _bB_]),
         bb=caml_call2(Stdlib_Printf[4],_ab_,self_2[1 + _bv_]),
         nb=caml_call2(Stdlib_Printf[4],_ac_,self_2[1 + _bv_]),
         pg=caml_call2(Stdlib_Printf[4],_ad_,self_2[1 + _bv_]),
         bf=caml_call2(Stdlib_Printf[4],_ae_,self_2[1 + _bv_]),
         nf=caml_call2(Stdlib_Printf[4],_af_,self_2[1 + _bv_]),
         pc=caml_call2(Stdlib_Printf[4],_ag_,self_2[1 + _bv_]),
         pr=caml_call2(Stdlib_Printf[4],_ah_,self_2[1 + _bv_]),
         sf=caml_call2(Stdlib_Printf[4],_ai_,self_2[1 + _bv_]),
         lf=caml_call2(Stdlib_Printf[4],_aj_,self_2[1 + _bv_]),
         cr=caml_call2(Stdlib_Printf[4],_ak_,self_2[1 + _bv_]),
         sv=caml_call2(Stdlib_Printf[4],_al_,self_2[1 + _bv_]),
         ld=caml_call2(Stdlib_Printf[4],_am_,self_2[1 + _bv_]),
         st=caml_call2(Stdlib_Printf[4],_an_,self_2[1 + _bv_]),
         sp=caml_call2(Stdlib_Printf[4],_ao_,self_2[1 + _bv_]),
         pu=caml_call2(Stdlib_Printf[4],_ap_,self_2[1 + _bv_]),
         po=caml_call2(Stdlib_Printf[4],_aq_,self_2[1 + _bv_]),
         js=caml_call1(Stdlib_Buffer[1],1024);
        function generate(s){return caml_call2(Stdlib_Buffer[16],js,s)}
        var l=caml_call1(Stdlib_List[9],self_2[1 + _bB_]);
        function inner(i,param)
         {if(! param)return 0;
          var
           tl=param[2],
           h=param[1],
           _bU_=inner(i + 1 | 0,tl),
           _bV_=caml_call2(Stdlib[28],nf,cst$56),
           _bW_=[0,cst_Next,caml_call2(Stdlib_Printf[4],_ar_,nb),_bV_],
           _bX_=caml_call2(Stdlib[28],bf,cst$57),
           match=
            caml_call3
             (caml_get_public_method(h,86600534,7),
              h,
              [0,cst_Back,caml_call2(Stdlib_Printf[4],_as_,bb),_bX_],
              _bW_),
           page=match[4],
           script=match[3],
           loadf=match[2],
           savef=match[1];
          generate(script);
          return [0,[0,[0,savef,loadf],caml_call1(_e_,page)],_bU_]}
        var
         _bP_=inner(0,l),
         match=caml_call1(Stdlib_List[54],_bP_),
         pages=match[2],
         funs=match[1],
         match$0=caml_call1(Stdlib_List[54],funs),
         loadfs=match$0[2],
         savefs=match$0[1];
        generate(caml_call2(Stdlib_Printf[4],_at_,sp));
        generate(caml_call3(Stdlib_Printf[4],_au_,st,n));
        generate(caml_call2(Stdlib_Printf[4],_av_,pu));
        generate(caml_call3(Stdlib_Printf[4],_aw_,st,sp));
        generate(cst$58);
        generate(caml_call2(Stdlib_Printf[4],_ax_,po));
        generate(caml_call3(Stdlib_Printf[4],_ay_,st,sp));
        generate(cst$59);
        generate(caml_call2(Stdlib_Printf[4],_az_,cr));
        generate(caml_call2(Stdlib_Printf[4],_aA_,pg));
        generate(caml_call2(Stdlib_Printf[4],_aB_,pc));
        function _bQ_(p)
         {var _bT_=caml_call1(Stdlib_String[24],p);
          return generate(caml_call2(Stdlib_Printf[4],_aC_,_bT_))}
        caml_call2(Stdlib_List[17],_bQ_,pages);
        generate(cst$60);
        generate(caml_call2(Stdlib_Printf[4],_aD_,sf));
        function _bR_(s){return generate(caml_call2(Stdlib_Printf[4],_aE_,s))}
        caml_call2(Stdlib_List[17],_bR_,savefs);
        generate(cst$61);
        generate(caml_call2(Stdlib_Printf[4],_aF_,sv));
        generate(caml_call4(Stdlib_Printf[4],_aG_,sf,pg,cr));
        generate(cst$62);
        generate(caml_call2(Stdlib_Printf[4],_aH_,lf));
        function _bS_(s){return generate(caml_call2(Stdlib_Printf[4],_aI_,s))}
        caml_call2(Stdlib_List[17],_bS_,loadfs);
        generate(cst$63);
        generate(caml_call2(Stdlib_Printf[4],_aJ_,ld));
        generate(caml_call4(Stdlib_Printf[4],_aK_,lf,pg,cr));
        generate(cst$64);
        generate(caml_call2(Stdlib_Printf[4],_aL_,pr));
        generate(caml_call4(Stdlib_Printf[4],_aM_,self_2[1 + _bw_],pc,pg));
        generate(caml_call3(Stdlib_Printf[4],_aN_,ld,cr));
        generate(caml_call3(Stdlib_Printf[4],_aO_,bb,pg));
        generate(cst$65);
        generate(caml_call2(Stdlib_Printf[4],_aP_,bf));
        generate(caml_call3(Stdlib_Printf[4],_aQ_,sv,cr));
        generate(caml_call3(Stdlib_Printf[4],_aR_,pg,po));
        generate(caml_call2(Stdlib_Printf[4],_aS_,pr));
        generate(cst$66);
        generate(caml_call2(Stdlib_Printf[4],_aT_,nf));
        generate(caml_call3(Stdlib_Printf[4],_aU_,sv,cr));
        generate(caml_call4(Stdlib_Printf[4],_aV_,self_2[1 + _bx_],pg,cr));
        generate(caml_call2(Stdlib_Printf[4],_aW_,pg));
        generate(caml_call3(Stdlib_Printf[4],_aX_,pu,pg));
        generate(caml_call2(Stdlib_Printf[4],_aY_,pg));
        generate(caml_call2(Stdlib_Printf[4],_aZ_,pr));
        generate(cst$67);
        return [0,pr,caml_call1(Stdlib_Buffer[2],js)]}
      var
       _bE_=
        [0,
         _bz_,
         function(self_2,l)
          {var
            _bM_=self_2[1 + _bu_],
            _bN_=
             caml_call3
              (Stdlib_Printf[4],_a0_,self_2[1 + _bv_],self_2[1 + _bC_]),
            p=caml_call3(c[1],0,_bN_,_bM_);
           self_2[1 + _bB_] = [0,p,self_2[1 + _bB_]];
           self_2[1 + _bC_] = self_2[1 + _bC_] + 1 | 0;
           function _bO_(p,f){return caml_call1(f,p)}
           return caml_call3(Stdlib_List[25],_bO_,p,l)},
         _bA_,
         _bD_];
      caml_call2(CamlinternalOO[11],_bt_,_bE_);
      return function(_bK_,_bJ_,_bI_,_bH_,_bG_,_bF_)
       {var _bL_=caml_call2(CamlinternalOO[24],_bJ_,_bt_);
        _bL_[1 + _bx_] = _bF_;
        _bL_[1 + _bw_] = _bG_;
        _bL_[1 + _bv_] = _bH_;
        _bL_[1 + _bu_] = _bI_;
        _bL_[1 + _bB_] = 0;
        _bL_[1 + _bC_] = 0;
        return _bL_}}
    var c$0=caml_call2(CamlinternalOO[19],_c_,_aa_);
    function create(opt,id,target,navigate)
     {if(opt)var sth=opt[1],attrs=sth;else var attrs=cst$68;
      return caml_call5(c$0[1],0,attrs,id,target,navigate)}
    function named$0(n,v){return caml_call1(_e_,named(n,raw(v)))}
    function fields$0(v)
     {function _bs_(param){var v=param[2],n=param[1];return [0,n,raw(v)]}
      return caml_call1(_e_,fields(caml_call2(Stdlib_List[19],_bs_,v)))}
    function anchor$0(n,v){return caml_call1(_e_,anchor(n,raw(v)))}
    function ref$0(n,v){return caml_call1(_e_,ref(n,raw(v)))}
    function toHTML(s){return s}
    function toHTML$0(s){return caml_call1(_e_,raw(s))}
    var Raw=[0,toHTML$0];
    function List(T)
     {function toHTML(l)
       {var _bp_=T[1];
        function _bq_(_br_){return make(_bp_,_br_)}
        return caml_call1(_e_,list(caml_call2(Stdlib_List[19],_bq_,l)))}
      return [0,toHTML]}
    function Array(T)
     {function toHTML(a)
       {var _bm_=T[1];
        function _bn_(_bo_){return make(_bm_,_bo_)}
        return caml_call1(_e_,array(caml_call2(Stdlib_Array[15],_bn_,a)))}
      return [0,toHTML]}
    function NamedPair(N,F,S)
     {function toHTML(param)
       {var
         s=param[2],
         f=param[1],
         _bj_=make(S[1],s),
         _bk_=[0,named(N[2],_bj_),0],
         _bl_=make(F[1],f);
        return caml_call1(_e_,list([0,named(N[1],_bl_),_bk_]))}
      return [0,toHTML]}
    var _a2_=[0,first,second];
    function Pair(_bh_,_bi_){return NamedPair(_a2_,_bh_,_bi_)}
    function Set(S,V)
     {function toHTML$0(x)
       {var
         LL=List([0,toHTML]),
         _be_=caml_call1(S[23],x),
         _bf_=caml_call2(Stdlib_List[19],V[1],_be_),
         _bg_=caml_call2(Stdlib_List[56],caml_string_compare,_bf_);
        return caml_call1(LL[1],_bg_)}
      return [0,toHTML$0]}
    function Map(M,K,V)
     {function toHTML$0(x)
       {var P=NamedPair([0,first$0,second$0],K,V),LL=List([0,toHTML]),_ba_=0;
        function _bb_(x,y,acc){return [0,caml_call1(P[1],[0,x,y]),acc]}
        var
         _bc_=caml_call3(M[13],_bb_,x,_ba_),
         _bd_=caml_call2(Stdlib_List[56],caml_string_compare,_bc_);
        return caml_call1(LL[1],_bd_)}
      return [0,toHTML$0]}
    function Hashtbl(M,K,V)
     {function toHTML$0(x)
       {var P=NamedPair([0,first$1,second$1],K,V),LL=List([0,toHTML]),_a8_=0;
        function _a9_(x,y,acc){return [0,caml_call1(P[1],[0,x,y]),acc]}
        var
         _a__=caml_call3(M[14],_a9_,x,_a8_),
         _a$_=caml_call2(Stdlib_List[56],caml_string_compare,_a__);
        return caml_call1(LL[1],_a$_)}
      return [0,toHTML$0]}
    var
     _a3_=[0,toHTML,named$0,fields$0,anchor$0,ref$0],
     HTML=
      [0,
       _e_,
       escape,
       string,
       raw,
       _f_,
       _g_,
       _h_,
       _i_,
       _j_,
       _k_,
       _l_,
       anchor,
       ref,
       named,
       list,
       array,
       fields,
       br,
       tag,
       html,
       title,
       body,
       ul,
       ol,
       li,
       b,
       i,
       table,
       tr,
       td,
       th,
       form,
       input,
       checkbox,
       button,
       text,
       textarea,
       div,
       radio,
       select,
       link,
       [0,string$0,text$0,div$0,flag,combo,radio$0,create],
       function(X)
        {var hash=Stdlib_Hashtbl[28];
         function equal(_a7_,_a6_){return _a7_ === _a6_?1:0}
         var
          H=caml_call1(Stdlib_Hashtbl[26],[0,equal,hash]),
          h=caml_call1(H[1],1024),
          i=[0,0];
         function set(x){i[1]++;return caml_call3(H[5],h,x,i[1])}
         function get(x)
          {if(1 - caml_call2(H[11],h,x))set(x);
           var _a5_=caml_call2(H[7],h,x);
           return caml_call3(Stdlib_Printf[4],_a1_,X[1],_a5_)}
         function url(t)
          {var _a4_=get(t);return caml_call2(Stdlib[28],cst$69,_a4_)}
         function ref$1(t,text){return ref(url(t),text)}
         function ref$2(t,text){return ref$0(url(t),text)}
         var String=[0,ref$2];
         return [0,set,get,url,ref$1,String]},
       List,
       Array,
       Set,
       Map,
       Hashtbl,
       NamedPair,
       Pair,
       Raw,
       _a3_];
    runtime.caml_register_global(232,HTML,"HTML");
    return}
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
