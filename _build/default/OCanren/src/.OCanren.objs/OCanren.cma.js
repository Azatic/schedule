// Generated by js_of_ocaml
//# buildInfo:effects=false, use-js-string=false, version=5.0.1
(function
   (globalThis)
   {"use strict";
    var
     runtime=globalThis.jsoo_runtime,
     caml_compare=runtime.caml_compare,
     caml_equal=runtime.caml_equal,
     caml_fresh_oo_id=runtime.caml_fresh_oo_id,
     caml_get_public_method=runtime.caml_get_public_method,
     caml_obj_tag=runtime.caml_obj_tag,
     caml_register_global=runtime.caml_register_global,
     caml_string_of_jsbytes=runtime.caml_string_of_jsbytes,
     caml_trampoline=runtime.caml_trampoline,
     caml_trampoline_return=runtime.caml_trampoline_return,
     caml_update_dummy=runtime.caml_update_dummy,
     caml_wrap_exception=runtime.caml_wrap_exception;
    function caml_call1(f,a0)
     {return f.length == 1?f(a0):runtime.caml_call_gen(f,[a0])}
    function caml_call2(f,a0,a1)
     {return f.length == 2?f(a0,a1):runtime.caml_call_gen(f,[a0,a1])}
    function caml_call3(f,a0,a1,a2)
     {return f.length == 3?f(a0,a1,a2):runtime.caml_call_gen(f,[a0,a1,a2])}
    function caml_call4(f,a0,a1,a2,a3)
     {return f.length == 4
              ?f(a0,a1,a2,a3)
              :runtime.caml_call_gen(f,[a0,a1,a2,a3])}
    function caml_call5(f,a0,a1,a2,a3,a4)
     {return f.length == 5
              ?f(a0,a1,a2,a3,a4)
              :runtime.caml_call_gen(f,[a0,a1,a2,a3,a4])}
    function caml_call6(f,a0,a1,a2,a3,a4,a5)
     {return f.length == 6
              ?f(a0,a1,a2,a3,a4,a5)
              :runtime.caml_call_gen(f,[a0,a1,a2,a3,a4,a5])}
    function caml_call8(f,a0,a1,a2,a3,a4,a5,a6,a7)
     {return f.length == 8
              ?f(a0,a1,a2,a3,a4,a5,a6,a7)
              :runtime.caml_call_gen(f,[a0,a1,a2,a3,a4,a5,a6,a7])}
    var
     global_data=runtime.caml_get_global_data(),
     cst_Dynamic_pretty_printing_of=
      caml_string_of_jsbytes
       ("Dynamic pretty printing of some special tags is not supported"),
     global_anchor=[0,-8,0],
     cst_OCanren_Term_Different_sha=
      caml_string_of_jsbytes("OCanren__Term.Different_shape"),
     cst_OCanren_fatal_Env_check_wr=
      caml_string_of_jsbytes("OCanren fatal (Env.check): wrong environment"),
     cst_OCanren_Env_Open_Term=
      caml_string_of_jsbytes("OCanren__Env.Open_Term"),
     cst_OCanren_fatal_Subst_merge_=
      caml_string_of_jsbytes
       ("OCanren fatal (Subst.merge_disjoint): substitutions intersect"),
     cst_OCanren_fatal_Subst_of_lis=
      caml_string_of_jsbytes
       ("OCanren fatal (Subst.of_list): invalid substituion"),
     cst_OCanren_Subst_Occurs_check=
      caml_string_of_jsbytes("OCanren__Subst.Occurs_check"),
     cst_OCanren_Subst_Unification_=
      caml_string_of_jsbytes("OCanren__Subst.Unification_failed"),
     cst_OCanren_fatal_Conjunct_mer=
      caml_string_of_jsbytes
       ("OCanren fatal (Conjunct.merge_disjoint): conjuncts intersect"),
     cst_OCanren_Disequality_Disequ=
      caml_string_of_jsbytes("OCanren__Disequality.Disequality_violated"),
     cst_OCanren_Disequality_Disequ$0=
      caml_string_of_jsbytes("OCanren__Disequality.Disequality_fulfilled"),
     cst$18=caml_string_of_jsbytes(""),
     cst$16=caml_string_of_jsbytes("=/= "),
     cst$17=caml_string_of_jsbytes(""),
     cst$15=caml_string_of_jsbytes(""),
     cst$13=caml_string_of_jsbytes(""),
     cst$14=caml_string_of_jsbytes(""),
     cst$11=caml_string_of_jsbytes(""),
     cst$12=caml_string_of_jsbytes(""),
     cst_Var=caml_string_of_jsbytes("Var"),
     cst_Value=caml_string_of_jsbytes("Value"),
     cst$9=caml_string_of_jsbytes(""),
     cst$10=caml_string_of_jsbytes(""),
     cst$7=caml_string_of_jsbytes(""),
     cst$8=caml_string_of_jsbytes(""),
     cst$5=caml_string_of_jsbytes(""),
     cst$6=caml_string_of_jsbytes(""),
     cst$3=caml_string_of_jsbytes(""),
     cst$4=caml_string_of_jsbytes(""),
     cst$1=caml_string_of_jsbytes(""),
     cst$2=caml_string_of_jsbytes(""),
     partial=[12,41,[17,0,0]],
     partial$0=[0,caml_string_of_jsbytes("@,"),0,0],
     cst=caml_string_of_jsbytes(""),
     cst$0=caml_string_of_jsbytes(""),
     _A_=[0,caml_string_of_jsbytes("reify"),caml_string_of_jsbytes("is_open")],
     _B_=
      [0,
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("compare"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("foldr")],
     _C_=[0,caml_string_of_jsbytes("c_Value"),caml_string_of_jsbytes("c_Var")],
     _D_=[0,caml_string_of_jsbytes("c_Var"),caml_string_of_jsbytes("c_Value")],
     shared=
      [0,
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("foldr"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("compare")],
     cst_OCanren_Logic_Not_a_value=
      caml_string_of_jsbytes("OCanren__Logic.Not_a_value"),
     cst_OCanren_fatal_Stream_zip_s=
      caml_string_of_jsbytes
       ("OCanren fatal (Stream.zip): streams have different lengths"),
     cst_OCanren_fatal_Stream_hd_em=
      caml_string_of_jsbytes("OCanren fatal (Stream.hd): empty stream"),
     cst_should_not_happen=caml_string_of_jsbytes("should not happen"),
     cst_Wrong_argument_of=caml_string_of_jsbytes("Wrong argument of (?!)"),
     cst_OCanren_fatal_Answer_check=
      caml_string_of_jsbytes
       ("OCanren fatal (Answer.check_envs): answers from different environments"),
     cst_OCanren_Core_Prunes_Fail=
      caml_string_of_jsbytes("OCanren__Core.Prunes.Fail"),
     partial$1=
      [17,
       [0,caml_string_of_jsbytes("@ "),1,0],
       [15,[17,[0,caml_string_of_jsbytes("@,"),0,0],[12,41,[17,0,0]]]]],
     partial$2=[0,caml_string_of_jsbytes("@,"),0,0],
     partial$3=
      [17,
       [0,caml_string_of_jsbytes("@ "),1,0],
       [15,[17,[0,caml_string_of_jsbytes("@,"),0,0],[12,41,[17,0,0]]]]],
     partial$4=[0,caml_string_of_jsbytes("@,"),0,0],
     cst$58=caml_string_of_jsbytes(""),
     cst$59=caml_string_of_jsbytes(""),
     cst$60=caml_string_of_jsbytes(""),
     cst_c_GROUND$6=caml_string_of_jsbytes("c_GROUND"),
     cst$55=caml_string_of_jsbytes(""),
     cst$56=caml_string_of_jsbytes(""),
     cst$57=caml_string_of_jsbytes(""),
     cst_c_GROUND$5=caml_string_of_jsbytes("c_GROUND"),
     cst$52=caml_string_of_jsbytes(""),
     cst$53=caml_string_of_jsbytes(""),
     cst$54=caml_string_of_jsbytes(""),
     cst_c_GROUND$4=caml_string_of_jsbytes("c_GROUND"),
     cst$49=caml_string_of_jsbytes(""),
     cst$50=caml_string_of_jsbytes(""),
     cst$51=caml_string_of_jsbytes(""),
     cst_c_GROUND$3=caml_string_of_jsbytes("c_GROUND"),
     cst$46=caml_string_of_jsbytes(""),
     cst$47=caml_string_of_jsbytes(""),
     cst$48=caml_string_of_jsbytes(""),
     cst_c_GROUND$2=caml_string_of_jsbytes("c_GROUND"),
     cst$43=caml_string_of_jsbytes(""),
     cst$44=caml_string_of_jsbytes(""),
     cst$45=caml_string_of_jsbytes(""),
     cst_c_GROUND$1=caml_string_of_jsbytes("c_GROUND"),
     partial$5=
      [17,
       [0,caml_string_of_jsbytes("@ "),1,0],
       [15,[17,[0,caml_string_of_jsbytes("@,"),0,0],[12,41,[17,0,0]]]]],
     partial$6=[0,caml_string_of_jsbytes("@,"),0,0],
     cst$40=caml_string_of_jsbytes(""),
     cst$41=caml_string_of_jsbytes(""),
     cst$42=caml_string_of_jsbytes(""),
     cst_c_GROUND$0=caml_string_of_jsbytes("c_GROUND"),
     cst_c_GROUND=caml_string_of_jsbytes("c_GROUND"),
     cst$37=caml_string_of_jsbytes(""),
     cst$38=caml_string_of_jsbytes(""),
     cst$39=caml_string_of_jsbytes(""),
     cst_c_T$6=caml_string_of_jsbytes("c_T"),
     cst$34=caml_string_of_jsbytes(""),
     cst$35=caml_string_of_jsbytes(""),
     cst$36=caml_string_of_jsbytes(""),
     cst_c_T$5=caml_string_of_jsbytes("c_T"),
     cst$31=caml_string_of_jsbytes(""),
     cst$32=caml_string_of_jsbytes(""),
     cst$33=caml_string_of_jsbytes(""),
     cst_c_T$4=caml_string_of_jsbytes("c_T"),
     cst$28=caml_string_of_jsbytes(""),
     cst$29=caml_string_of_jsbytes(""),
     cst$30=caml_string_of_jsbytes(""),
     cst_c_T$3=caml_string_of_jsbytes("c_T"),
     cst$25=caml_string_of_jsbytes(""),
     cst$26=caml_string_of_jsbytes(""),
     cst$27=caml_string_of_jsbytes(""),
     cst_c_T$2=caml_string_of_jsbytes("c_T"),
     cst$22=caml_string_of_jsbytes(""),
     cst$23=caml_string_of_jsbytes(""),
     cst$24=caml_string_of_jsbytes(""),
     cst_c_T$1=caml_string_of_jsbytes("c_T"),
     partial$7=
      [17,
       [0,caml_string_of_jsbytes("@ "),1,0],
       [15,[17,[0,caml_string_of_jsbytes("@,"),0,0],[12,41,[17,0,0]]]]],
     partial$8=[0,caml_string_of_jsbytes("@,"),0,0],
     cst$19=caml_string_of_jsbytes(""),
     cst$20=caml_string_of_jsbytes(""),
     cst$21=caml_string_of_jsbytes(""),
     cst_c_T$0=caml_string_of_jsbytes("c_T"),
     cst_c_T=caml_string_of_jsbytes("c_T"),
     _aU_=
      [0,
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("compare"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("foldr")],
     _aV_=[0,caml_string_of_jsbytes("c_GROUND")],
     _aW_=
      [0,
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("foldr"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("compare")],
     _aX_=
      [0,caml_string_of_jsbytes("c_Value"),caml_string_of_jsbytes("c_Var")],
     _aY_=
      [0,caml_string_of_jsbytes("c_Var"),caml_string_of_jsbytes("c_Value")],
     shared$0=[0,caml_string_of_jsbytes("c_T")],
     cst_Timer_is_not_installed_Add=
      caml_string_of_jsbytes
       ("Timer is not installed. Add linkage with OCanren.install_timer"),
     empty_span=[254,0.,0.],
     cst_c_GROUND$24=caml_string_of_jsbytes("c_GROUND"),
     cst_c_GROUND$23=caml_string_of_jsbytes("c_GROUND"),
     cst_c_GROUND$22=caml_string_of_jsbytes("c_GROUND"),
     cst_c_GROUND$21=caml_string_of_jsbytes("c_GROUND"),
     cst_c_GROUND$20=caml_string_of_jsbytes("c_GROUND"),
     cst_c_GROUND$19=caml_string_of_jsbytes("c_GROUND"),
     cst_c_GROUND$18=caml_string_of_jsbytes("c_GROUND"),
     cst_c_GROUND$17=caml_string_of_jsbytes("c_GROUND"),
     cst_c_GROUND$16=caml_string_of_jsbytes("c_GROUND"),
     cst_tuple$2=caml_string_of_jsbytes("tuple"),
     cst_tuple$1=caml_string_of_jsbytes("tuple"),
     partial$9=[17,0,0],
     partial$10=[17,0,0],
     cst$91=caml_string_of_jsbytes(""),
     cst$92=caml_string_of_jsbytes(""),
     cst_c_GROUND$15=caml_string_of_jsbytes("c_GROUND"),
     cst$89=caml_string_of_jsbytes(""),
     cst$90=caml_string_of_jsbytes(""),
     cst_c_GROUND$14=caml_string_of_jsbytes("c_GROUND"),
     cst_tuple$0=caml_string_of_jsbytes("tuple"),
     cst$87=caml_string_of_jsbytes(""),
     cst$88=caml_string_of_jsbytes(""),
     cst_c_GROUND$13=caml_string_of_jsbytes("c_GROUND"),
     cst$85=caml_string_of_jsbytes(""),
     cst$86=caml_string_of_jsbytes(""),
     cst_c_GROUND$12=caml_string_of_jsbytes("c_GROUND"),
     cst$83=caml_string_of_jsbytes(""),
     cst$84=caml_string_of_jsbytes(""),
     cst_c_GROUND$11=caml_string_of_jsbytes("c_GROUND"),
     cst$81=caml_string_of_jsbytes(""),
     cst$82=caml_string_of_jsbytes(""),
     cst_c_GROUND$10=caml_string_of_jsbytes("c_GROUND"),
     cst$79=caml_string_of_jsbytes(""),
     cst$80=caml_string_of_jsbytes(""),
     cst_c_GROUND$9=caml_string_of_jsbytes("c_GROUND"),
     partial$11=[17,0,0],
     cst$77=caml_string_of_jsbytes(""),
     cst$78=caml_string_of_jsbytes(""),
     cst_c_GROUND$8=caml_string_of_jsbytes("c_GROUND"),
     cst_c_GROUND$7=caml_string_of_jsbytes("c_GROUND"),
     cst$75=caml_string_of_jsbytes(""),
     cst$76=caml_string_of_jsbytes(""),
     cst_c_T$15=caml_string_of_jsbytes("c_T"),
     cst$73=caml_string_of_jsbytes(""),
     cst$74=caml_string_of_jsbytes(""),
     cst_c_T$14=caml_string_of_jsbytes("c_T"),
     cst_tuple=caml_string_of_jsbytes("tuple"),
     cst$71=caml_string_of_jsbytes(""),
     cst$72=caml_string_of_jsbytes(""),
     cst_c_T$13=caml_string_of_jsbytes("c_T"),
     cst$69=caml_string_of_jsbytes(""),
     cst$70=caml_string_of_jsbytes(""),
     cst_c_T$12=caml_string_of_jsbytes("c_T"),
     cst$67=caml_string_of_jsbytes(""),
     cst$68=caml_string_of_jsbytes(""),
     cst_c_T$11=caml_string_of_jsbytes("c_T"),
     cst$65=caml_string_of_jsbytes(""),
     cst$66=caml_string_of_jsbytes(""),
     cst_c_T$10=caml_string_of_jsbytes("c_T"),
     cst$63=caml_string_of_jsbytes(""),
     cst$64=caml_string_of_jsbytes(""),
     cst_c_T$9=caml_string_of_jsbytes("c_T"),
     partial$12=[17,0,0],
     cst$61=caml_string_of_jsbytes(""),
     cst$62=caml_string_of_jsbytes(""),
     cst_c_T$8=caml_string_of_jsbytes("c_T"),
     cst_c_T$7=caml_string_of_jsbytes("c_T"),
     _cG_=
      [0,
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("compare"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("foldr")],
     _cH_=[0,caml_string_of_jsbytes("c_GROUND")],
     _cI_=
      [0,caml_string_of_jsbytes("c_Value"),caml_string_of_jsbytes("c_Var")],
     _cJ_=
      [0,caml_string_of_jsbytes("c_Var"),caml_string_of_jsbytes("c_Value")],
     _cK_=
      [0,
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("foldr"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("compare")],
     shared$1=[0,caml_string_of_jsbytes("c_T")],
     _f9_=
      [0,caml_string_of_jsbytes("c_None"),caml_string_of_jsbytes("c_Some")],
     _f__=
      [0,
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("compare"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("foldr")],
     _f$_=
      [0,caml_string_of_jsbytes("c_Some"),caml_string_of_jsbytes("c_None")],
     _ga_=
      [0,caml_string_of_jsbytes("c_Value"),caml_string_of_jsbytes("c_Var")],
     _gb_=
      [0,caml_string_of_jsbytes("c_Var"),caml_string_of_jsbytes("c_Value")],
     shared$2=
      [0,
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("foldr"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("compare")],
     cst_t_bool$25=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$24=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$23=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$22=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$21=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$20=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$19=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$18=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$17=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$16=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$15=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$14=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$13=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$12=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$11=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$10=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$9=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$8=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$7=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$6=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$5=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$4=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$3=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$2=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$1=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$0=caml_string_of_jsbytes("t_bool"),
     cst_t_bool=caml_string_of_jsbytes("t_bool"),
     _jr_=
      [0,
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("compare"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("foldr")],
     _js_=
      [0,caml_string_of_jsbytes("c_Value"),caml_string_of_jsbytes("c_Var")],
     _jt_=
      [0,
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("foldr"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("compare")],
     _ju_=
      [0,caml_string_of_jsbytes("c_Var"),caml_string_of_jsbytes("c_Value")],
     shared$3=[0,caml_string_of_jsbytes("t_bool")],
     cst_O$0=caml_string_of_jsbytes("O"),
     cst$100=caml_string_of_jsbytes(""),
     cst$99=caml_string_of_jsbytes(""),
     cst_O=caml_string_of_jsbytes("O"),
     cst_S=caml_string_of_jsbytes("S"),
     cst$98=caml_string_of_jsbytes(""),
     cst$97=caml_string_of_jsbytes(""),
     cst$96=caml_string_of_jsbytes(""),
     cst$95=caml_string_of_jsbytes(""),
     cst$94=caml_string_of_jsbytes(""),
     cst$93=caml_string_of_jsbytes(""),
     _mm_=[0,caml_string_of_jsbytes("c_O"),caml_string_of_jsbytes("c_S")],
     _mn_=
      [0,
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("compare"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("foldr")],
     _mo_=
      [0,caml_string_of_jsbytes("c_Value"),caml_string_of_jsbytes("c_Var")],
     _mp_=
      [0,
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("foldr"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("compare")],
     _mq_=
      [0,caml_string_of_jsbytes("c_Var"),caml_string_of_jsbytes("c_Value")],
     shared$4=[0,caml_string_of_jsbytes("c_S"),caml_string_of_jsbytes("c_O")],
     cst_List_logic_to_ground_exn_v=
      caml_string_of_jsbytes("List.logic_to_ground_exn: variables inside"),
     cst$117=caml_string_of_jsbytes(" | "),
     cst$118=caml_string_of_jsbytes(""),
     cst$120=caml_string_of_jsbytes("; "),
     cst$119=caml_string_of_jsbytes(""),
     cst$121=caml_string_of_jsbytes(""),
     cst$123=caml_string_of_jsbytes("; "),
     cst$122=caml_string_of_jsbytes(""),
     cst$124=caml_string_of_jsbytes(""),
     cst$125=caml_string_of_jsbytes("]"),
     cst$126=caml_string_of_jsbytes("["),
     cst_Nil$0=caml_string_of_jsbytes("Nil"),
     cst$115=caml_string_of_jsbytes(""),
     cst$116=caml_string_of_jsbytes(""),
     cst$113=caml_string_of_jsbytes(""),
     cst$114=caml_string_of_jsbytes(""),
     cst_Nil=caml_string_of_jsbytes("Nil"),
     cst_Cons=caml_string_of_jsbytes("Cons"),
     cst$111=caml_string_of_jsbytes(""),
     cst$112=caml_string_of_jsbytes(""),
     cst$109=caml_string_of_jsbytes(""),
     cst$110=caml_string_of_jsbytes(""),
     cst$107=caml_string_of_jsbytes(""),
     cst$108=caml_string_of_jsbytes(""),
     cst$105=caml_string_of_jsbytes(""),
     cst$106=caml_string_of_jsbytes(""),
     cst$103=caml_string_of_jsbytes(""),
     cst$104=caml_string_of_jsbytes(""),
     partial$13=[12,41,[17,0,0]],
     partial$14=[0,caml_string_of_jsbytes("@,"),0,0],
     cst$101=caml_string_of_jsbytes(""),
     cst$102=caml_string_of_jsbytes(""),
     _pl_=
      [0,
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("compare"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("foldr")],
     _pm_=[0,caml_string_of_jsbytes("c_Cons"),caml_string_of_jsbytes("c_Nil")],
     _pn_=
      [0,caml_string_of_jsbytes("c_Value"),caml_string_of_jsbytes("c_Var")],
     _po_=[0,caml_string_of_jsbytes("c_Nil"),caml_string_of_jsbytes("c_Cons")],
     _pp_=
      [0,
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("foldr"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("compare")],
     shared$5=
      [0,caml_string_of_jsbytes("c_Var"),caml_string_of_jsbytes("c_Value")],
     Stdlib_List=global_data.Stdlib__List,
     Stdlib_String=global_data.Stdlib__String,
     Stdlib_Printf=global_data.Stdlib__Printf,
     Stdlib_Obj=global_data.Stdlib__Obj,
     Assert_failure=global_data.Assert_failure,
     Stdlib_Hashtbl=global_data.Stdlib__Hashtbl,
     Stdlib_Format=global_data.Stdlib__Format,
     Stdlib=global_data.Stdlib,
     Stdlib_Set=global_data.Stdlib__Set,
     Stdlib_Map=global_data.Stdlib__Map,
     Match_failure=global_data.Match_failure,
     Stdlib_ListLabels=global_data.Stdlib__ListLabels,
     CamlinternalOO=global_data.CamlinternalOO,
     GT=global_data.GT,
     HTML=global_data.HTML,
     OCanren=[0];
    caml_register_global(343,OCanren,"OCanren__");
    var
     scope=[0,0],
     _n_=[0,[15,0],caml_string_of_jsbytes("%a")],
     _h_=[0,[11,caml_string_of_jsbytes(", "),0],caml_string_of_jsbytes(", ")],
     _f_=[0,[11,caml_string_of_jsbytes("; "),0],caml_string_of_jsbytes("; ")],
     _g_=
      [0,
       [15,[11,caml_string_of_jsbytes("{=/= "),[15,[12,125,0]]]],
       caml_string_of_jsbytes("%a{=/= %a}")],
     _i_=
      [0,
       [11,
        caml_string_of_jsbytes("boxed "),
        [4,0,0,0,[11,caml_string_of_jsbytes(" <"),0]]],
       caml_string_of_jsbytes("boxed %d <")],
     _j_=[0,[12,62,0],caml_string_of_jsbytes(">")],
     _k_=
      [0,
       [11,caml_string_of_jsbytes("int<"),[4,0,0,0,[12,62,0]]],
       caml_string_of_jsbytes("int<%d>")],
     _l_=
      [0,
       [11,caml_string_of_jsbytes("string<"),[2,0,[12,62,0]]],
       caml_string_of_jsbytes("string<%s>")],
     _m_=
      [0,
       [11,caml_string_of_jsbytes("double<"),[8,[0,0,1],0,0,[12,62,0]]],
       caml_string_of_jsbytes("double<%e>")],
     _e_=
      [0,
       [11,caml_string_of_jsbytes("_."),[4,0,0,0,0]],
       caml_string_of_jsbytes("_.%d")],
     _d_=
      [0,
       [11,
        caml_string_of_jsbytes("OCanren fatal: invalid value tag ("),
        [4,0,0,0,[12,41,0]]],
       caml_string_of_jsbytes("OCanren fatal: invalid value tag (%d)")],
     _x_=[0,1],
     _w_=[0,caml_string_of_jsbytes("OCanren/src/core/Subst.ml"),197,15],
     _t_=
      [0,
       [15,
        [11,
         caml_string_of_jsbytes(" |- "),
         [15,[11,caml_string_of_jsbytes("; "),0]]]],
       caml_string_of_jsbytes("%a |- %a; ")],
     _s_=
      [0,
       [11,caml_string_of_jsbytes("{subst| "),0],
       caml_string_of_jsbytes("{subst| ")],
     _u_=
      [0,
       [11,caml_string_of_jsbytes("|subst}"),0],
       caml_string_of_jsbytes("|subst}")],
     _q_=
      [0,
       [15,[11,caml_string_of_jsbytes(" -> "),[15,0]]],
       caml_string_of_jsbytes("%a -> %a")],
     _y_=[0,caml_string_of_jsbytes("OCanren/src/core/Disequality.ml"),180,8],
     _aF_=[0,[15,0],caml_string_of_jsbytes("%a")],
     _aG_=[0,[2,0,0],caml_string_of_jsbytes("%s")],
     _aC_=[0,[12,32,[2,0,0]],caml_string_of_jsbytes(" %s")],
     _aD_=
      [0,
       [11,caml_string_of_jsbytes("_."),[4,0,0,0,[2,0,0]]],
       caml_string_of_jsbytes("_.%d%s")],
     _V_=
      [0,
       [11,
        caml_string_of_jsbytes("Var ("),
        [2,0,[11,caml_string_of_jsbytes(", "),[2,0,[12,41,0]]]]],
       caml_string_of_jsbytes("Var (%s, %s)")],
     _U_=
      [0,
       [11,caml_string_of_jsbytes("Value ("),[2,0,[12,41,0]]],
       caml_string_of_jsbytes("Value (%s)")],
     _N_=[0,0,0],
     _M_=[1,0],
     _I_=
      [0,
       [11,
        caml_string_of_jsbytes("Var "),
        [18,
         [1,[0,0,caml_string_of_jsbytes("")]],
         [12,
          40,
          [17,
           [0,caml_string_of_jsbytes("@,"),0,0],
           [15,
            [12,
             44,
             [17,
              [0,caml_string_of_jsbytes("@,"),0,0],
              [17,
               [0,caml_string_of_jsbytes("@ "),1,0],
               [15,[17,partial$0,partial]]]]]]]]]],
       caml_string_of_jsbytes("Var @[(@,%a,@,@ %a@,)@]")],
     _H_=
      [0,
       [11,
        caml_string_of_jsbytes("Value "),
        [18,
         [1,[0,0,caml_string_of_jsbytes("")]],
         [12,
          40,
          [17,
           [0,caml_string_of_jsbytes("@,"),0,0],
           [15,[17,[0,caml_string_of_jsbytes("@,"),0,0],[12,41,[17,0,0]]]]]]]],
       caml_string_of_jsbytes("Value @[(@,%a@,)@]")],
     _aP_=[0,0,0],
     _aT_=[0,caml_string_of_jsbytes("OCanren/src/core/Core.ml"),789,28],
     _aS_=[0,caml_string_of_jsbytes("OCanren/src/core/Core.ml"),714,36],
     _aR_=[0,caml_string_of_jsbytes("OCanren/src/core/Core.ml"),478,10],
     _aQ_=[0,caml_string_of_jsbytes("OCanren/src/core/Core.ml"),226,4],
     _b9_=
      [0,
       [12,
        40,
        [2,
         0,
         [11,
          caml_string_of_jsbytes(", "),
          [2,0,[11,caml_string_of_jsbytes(", "),[2,0,[12,41,0]]]]]]],
       caml_string_of_jsbytes("(%s, %s, %s)")],
     _b7_=
      [0,
       [12,
        40,
        [2,
         0,
         [11,
          caml_string_of_jsbytes(", "),
          [2,0,[11,caml_string_of_jsbytes(", "),[2,0,[12,41,0]]]]]]],
       caml_string_of_jsbytes("(%s, %s, %s)")],
     _bZ_=
      [0,
       [18,
        [1,[0,0,caml_string_of_jsbytes("")]],
        [12,
         40,
         [17,
          [0,caml_string_of_jsbytes("@,"),0,0],
          [15,
           [12,
            44,
            [17,
             [0,caml_string_of_jsbytes("@,"),0,0],
             [17,
              [0,caml_string_of_jsbytes("@ "),1,0],
              [15,[12,44,[17,partial$2,partial$1]]]]]]]]]],
       caml_string_of_jsbytes("@[(@,%a,@,@ %a,@,@ %a@,)@]")],
     _bY_=
      [0,
       [18,
        [1,[0,0,caml_string_of_jsbytes("")]],
        [12,
         40,
         [17,
          [0,caml_string_of_jsbytes("@,"),0,0],
          [15,
           [12,
            44,
            [17,
             [0,caml_string_of_jsbytes("@,"),0,0],
             [17,
              [0,caml_string_of_jsbytes("@ "),1,0],
              [15,[12,44,[17,partial$4,partial$3]]]]]]]]]],
       caml_string_of_jsbytes("@[(@,%a,@,@ %a,@,@ %a@,)@]")],
     _bC_=
      [0,
       [12,
        40,
        [2,
         0,
         [11,
          caml_string_of_jsbytes(", "),
          [2,0,[11,caml_string_of_jsbytes(", "),[2,0,[12,41,0]]]]]]],
       caml_string_of_jsbytes("(%s, %s, %s)")],
     _bu_=
      [0,
       [18,
        [1,[0,0,caml_string_of_jsbytes("")]],
        [12,
         40,
         [17,
          [0,caml_string_of_jsbytes("@,"),0,0],
          [15,
           [12,
            44,
            [17,
             [0,caml_string_of_jsbytes("@,"),0,0],
             [17,
              [0,caml_string_of_jsbytes("@ "),1,0],
              [15,[12,44,[17,partial$6,partial$5]]]]]]]]]],
       caml_string_of_jsbytes("@[(@,%a,@,@ %a,@,@ %a@,)@]")],
     _a__=
      [0,
       [12,
        40,
        [2,
         0,
         [11,
          caml_string_of_jsbytes(", "),
          [2,0,[11,caml_string_of_jsbytes(", "),[2,0,[12,41,0]]]]]]],
       caml_string_of_jsbytes("(%s, %s, %s)")],
     _a2_=
      [0,
       [18,
        [1,[0,0,caml_string_of_jsbytes("")]],
        [12,
         40,
         [17,
          [0,caml_string_of_jsbytes("@,"),0,0],
          [15,
           [12,
            44,
            [17,
             [0,caml_string_of_jsbytes("@,"),0,0],
             [17,
              [0,caml_string_of_jsbytes("@ "),1,0],
              [15,[12,44,[17,partial$8,partial$7]]]]]]]]]],
       caml_string_of_jsbytes("@[(@,%a,@,@ %a,@,@ %a@,)@]")],
     _ev_=
      [0,
       [12,40,[2,0,[11,caml_string_of_jsbytes(", "),[2,0,[12,41,0]]]]],
       caml_string_of_jsbytes("(%s, %s)")],
     _et_=
      [0,
       [12,40,[2,0,[11,caml_string_of_jsbytes(", "),[2,0,[12,41,0]]]]],
       caml_string_of_jsbytes("(%s, %s)")],
     _ej_=
      [0,
       [18,
        [1,[0,0,caml_string_of_jsbytes("")]],
        [12,
         40,
         [17,
          [0,caml_string_of_jsbytes("@,"),0,0],
          [15,
           [12,
            44,
            [17,
             [0,caml_string_of_jsbytes("@,"),0,0],
             [17,
              [0,caml_string_of_jsbytes("@ "),1,0],
              [15,[17,[0,caml_string_of_jsbytes("@,"),0,0],[12,41,partial$9]]]]]]]]]],
       caml_string_of_jsbytes("@[(@,%a,@,@ %a@,)@]")],
     _ei_=
      [0,
       [18,
        [1,[0,0,caml_string_of_jsbytes("")]],
        [12,
         40,
         [17,
          [0,caml_string_of_jsbytes("@,"),0,0],
          [15,
           [12,
            44,
            [17,
             [0,caml_string_of_jsbytes("@,"),0,0],
             [17,
              [0,caml_string_of_jsbytes("@ "),1,0],
              [15,
               [17,[0,caml_string_of_jsbytes("@,"),0,0],[12,41,partial$10]]]]]]]]]],
       caml_string_of_jsbytes("@[(@,%a,@,@ %a@,)@]")],
     _dW_=
      [0,
       [12,40,[2,0,[11,caml_string_of_jsbytes(", "),[2,0,[12,41,0]]]]],
       caml_string_of_jsbytes("(%s, %s)")],
     _dM_=
      [0,
       [18,
        [1,[0,0,caml_string_of_jsbytes("")]],
        [12,
         40,
         [17,
          [0,caml_string_of_jsbytes("@,"),0,0],
          [15,
           [12,
            44,
            [17,
             [0,caml_string_of_jsbytes("@,"),0,0],
             [17,
              [0,caml_string_of_jsbytes("@ "),1,0],
              [15,
               [17,[0,caml_string_of_jsbytes("@,"),0,0],[12,41,partial$11]]]]]]]]]],
       caml_string_of_jsbytes("@[(@,%a,@,@ %a@,)@]")],
     _do_=
      [0,
       [12,40,[2,0,[11,caml_string_of_jsbytes(", "),[2,0,[12,41,0]]]]],
       caml_string_of_jsbytes("(%s, %s)")],
     _de_=
      [0,
       [18,
        [1,[0,0,caml_string_of_jsbytes("")]],
        [12,
         40,
         [17,
          [0,caml_string_of_jsbytes("@,"),0,0],
          [15,
           [12,
            44,
            [17,
             [0,caml_string_of_jsbytes("@,"),0,0],
             [17,
              [0,caml_string_of_jsbytes("@ "),1,0],
              [15,
               [17,[0,caml_string_of_jsbytes("@,"),0,0],[12,41,partial$12]]]]]]]]]],
       caml_string_of_jsbytes("@[(@,%a,@,@ %a@,)@]")],
     _mG_=
      [0,
       [11,caml_string_of_jsbytes("S ("),[2,0,[12,41,0]]],
       caml_string_of_jsbytes("S (%s)")],
     _mz_=[0,0],
     _mv_=[0,[12,79,0],caml_string_of_jsbytes("O")],
     _mu_=
      [0,
       [11,
        caml_string_of_jsbytes("S "),
        [18,
         [1,[0,0,caml_string_of_jsbytes("")]],
         [12,
          40,
          [17,
           [0,caml_string_of_jsbytes("@,"),0,0],
           [15,[17,[0,caml_string_of_jsbytes("@,"),0,0],[12,41,[17,0,0]]]]]]]],
       caml_string_of_jsbytes("S @[(@,%a@,)@]")],
     _so_=[1,0],
     _sd_=[0,[15,0],caml_string_of_jsbytes("%a")],
     _se_=[0,[2,0,0],caml_string_of_jsbytes("%s")],
     _sb_=[0,1],
     _pF_=
      [0,
       [11,
        caml_string_of_jsbytes("Cons ("),
        [2,0,[11,caml_string_of_jsbytes(", "),[2,0,[12,41,0]]]]],
       caml_string_of_jsbytes("Cons (%s, %s)")],
     _py_=[0,0,0],
     _pu_=
      [0,[11,caml_string_of_jsbytes("Nil"),0],caml_string_of_jsbytes("Nil")],
     _pt_=
      [0,
       [11,
        caml_string_of_jsbytes("Cons "),
        [18,
         [1,[0,0,caml_string_of_jsbytes("")]],
         [12,
          40,
          [17,
           [0,caml_string_of_jsbytes("@,"),0,0],
           [15,
            [12,
             44,
             [17,
              [0,caml_string_of_jsbytes("@,"),0,0],
              [17,
               [0,caml_string_of_jsbytes("@ "),1,0],
               [15,[17,partial$14,partial$13]]]]]]]]]],
       caml_string_of_jsbytes("Cons @[(@,%a,@,@ %a@,)@]")],
     tabling_env=-1,
     non_local_scope=-6;
    function new_scope(param){scope[1]++;return scope[1]}
    function make(env,scope,index)
     {return [0,global_anchor,env,index,0,scope,0]}
    function is_wildcard(param){var index=param[3];return -42 === index?1:0}
    function make_wc(env,scope){return make(env,scope,-42)}
    var dummy=make(0,0,0);
    function valid_anchor(anchor){return anchor === global_anchor?1:0}
    function reify(r,param)
     {var index=param[3],constraints=param[6];
      function _av3_(x){return caml_call1(r,x)}
      return [0,index,caml_call2(Stdlib_List[19],_av3_,constraints)]}
    function equal(x,y)
     {var _av1_=x[3] === y[3]?1:0,_av2_=_av1_?x[2] === y[2]?1:0:_av1_;
      return _av2_}
    function compare(x,y)
     {return x[3] !== y[3]?x[3] - y[3] | 0:x[2] - y[2] | 0}
    function hash(x){return caml_call1(Stdlib_Hashtbl[28],[0,x[2],x[3]])}
    var
     VarSet=caml_call1(Stdlib_Set[1],[0,compare]),
     VarTbl=caml_call1(Stdlib_Hashtbl[26],[0,equal,hash]),
     include=caml_call1(Stdlib_Map[1],[0,compare]),
     empty=include[1],
     is_empty=include[2],
     mem=include[3],
     add=include[4],
     singleton=include[6],
     remove=include[7],
     merge=include[8],
     union=include[9],
     compare$0=include[10],
     equal$0=include[11],
     iter=include[12],
     fold=include[13],
     for_all=include[14],
     exists=include[15],
     filter=include[16],
     filter_map=include[17],
     partition=include[18],
     cardinal=include[19],
     bindings=include[20],
     min_binding=include[21],
     min_binding_opt=include[22],
     max_binding=include[23],
     max_binding_opt=include[24],
     choose=include[25],
     choose_opt=include[26],
     split=include[27],
     find=include[28],
     find_opt=include[29],
     find_first=include[30],
     find_first_opt=include[31],
     find_last=include[32],
     find_last_opt=include[33],
     map=include[34],
     mapi=include[35],
     to_seq=include[36],
     to_rev_seq=include[37],
     to_seq_from=include[38],
     add_seq=include[39],
     of_seq=include[40];
    function update(k,f,m)
     {try
       {var _avZ_=[0,caml_call2(find,k,m)],_avY_=_avZ_}
      catch(_av0_)
       {_av0_ = caml_wrap_exception(_av0_);
        if(_av0_ !== Stdlib[8])throw _av0_;
        var _avY_=0}
      var match=caml_call1(f,_avY_);
      if(! match)return caml_call2(remove,k,m);
      var x=match[1];
      return caml_call3(add,k,x,m)}
    var
     VarMap=
      [0,
       empty,
       is_empty,
       mem,
       add,
       singleton,
       remove,
       merge,
       union,
       compare$0,
       equal$0,
       iter,
       fold,
       for_all,
       exists,
       filter,
       filter_map,
       partition,
       cardinal,
       bindings,
       min_binding,
       min_binding_opt,
       max_binding,
       max_binding_opt,
       choose,
       choose_opt,
       split,
       find,
       find_opt,
       find_first,
       find_first_opt,
       find_last,
       find_last_opt,
       map,
       mapi,
       to_seq,
       to_rev_seq,
       to_seq_from,
       add_seq,
       of_seq,
       update];
    function repr(_avX_){return _avX_}
    var var_size=dummy.length - 1,var_tag=caml_obj_tag(dummy);
    function has_var_structure(tx,sx,x)
     {if(tx === var_tag && sx === var_size)
       {var anchor=x[1],_avW_=caml_call1(Stdlib_Obj[1],anchor);
        return _avW_?valid_anchor(anchor):_avW_}
      return 0}
    function is_box(t)
     {if(t <= Stdlib_Obj[5] && Stdlib_Obj[4] <= t)return 1;return 0}
    var _a_=Stdlib_Obj[18],_b_=Stdlib_Obj[13],_c_=Stdlib_Obj[14];
    function is_valid_tag_exn(t)
     {var _avU_=_a_ === t?1:0,switch$0=0;
      if(_avU_)
       var _avR_=_avU_;
      else
       {var _avV_=_b_ === t?1:0;
        if(_avV_)var _avR_=_avV_;else{var _avS_=_c_ === t?1:0;switch$0 = 1}}
      if(! switch$0)var _avS_=_avR_;
      if(_avS_)return 0;
      var _avT_=caml_call2(Stdlib_Printf[4],_d_,t);
      return caml_call1(Stdlib[2],_avT_)}
    function var$0(x)
     {var tx=caml_obj_tag(x);
      if(! is_box(tx))return 0;
      var sx=x.length - 1;
      return has_var_structure(tx,sx,x)?[0,x]:0}
    function map$0(fvar,fval,x)
     {var tx=caml_obj_tag(x);
      if(! is_box(tx)){is_valid_tag_exn(tx);return caml_call1(fval,x)}
      var sx=x.length - 1;
      if(has_var_structure(tx,sx,x))return caml_call1(fvar,x);
      var y=x.slice(),_avP_=sx - 1 | 0,_avO_=0;
      if(_avP_ >= 0)
       {var i=_avO_;
        for(;;)
         {y[1 + i] = map$0(fvar,fval,x[1 + i]);
          var _avQ_=i + 1 | 0;
          if(_avP_ !== i){var i=_avQ_;continue}
          break}}
      return y}
    function iter$0(fvar,fval,x)
     {var tx=caml_obj_tag(x);
      if(! is_box(tx)){is_valid_tag_exn(tx);return caml_call1(fval,x)}
      var sx=x.length - 1;
      if(has_var_structure(tx,sx,x))return caml_call1(fvar,x);
      var _avM_=sx - 1 | 0,_avL_=0;
      if(_avM_ >= 0)
       {var i=_avL_;
        for(;;)
         {iter$0(fvar,fval,x[1 + i]);
          var _avN_=i + 1 | 0;
          if(_avM_ !== i){var i=_avN_;continue}
          break}}
      return 0}
    function fold$0(fvar,fval,init,x)
     {var tx=caml_obj_tag(x);
      if(! is_box(tx)){is_valid_tag_exn(tx);return caml_call2(fval,init,x)}
      var sx=x.length - 1;
      if(has_var_structure(tx,sx,x))
       return caml_call1(caml_call1(fvar,init),x);
      var i=0,acc=init;
      for(;;)
       {if(i >= sx)return acc;
        var acc$0=fold$0(fvar,fval,acc,x[1 + i]),i$0=i + 1 | 0,i=i$0,acc=acc$0}}
    var
     Different_shape=
      [248,cst_OCanren_Term_Different_sha,caml_fresh_oo_id(0)];
    function fold2(fvar,fval,fk,init,x,y)
     {var
       ty=caml_obj_tag(y),
       tx=caml_obj_tag(x),
       match=is_box(tx),
       match$0=is_box(ty);
      if(! match)
       {if(match$0)
         {is_valid_tag_exn(tx);
          var sy$0=y.length - 1;
          if(has_var_structure(ty,sy$0,y))return caml_call4(fk,init,1,y,x);
          throw [0,Different_shape,tx,ty]}
        is_valid_tag_exn(tx);
        is_valid_tag_exn(ty);
        if(tx === ty)return caml_call3(fval,init,x,y);
        throw [0,Different_shape,tx,ty]}
      if(! match$0)
       {is_valid_tag_exn(ty);
        var sx$0=x.length - 1;
        if(has_var_structure(tx,sx$0,x))return caml_call4(fk,init,0,x,y);
        throw [0,Different_shape,tx,ty]}
      var
       sy=y.length - 1,
       sx=x.length - 1,
       match$1=has_var_structure(tx,sx,x),
       match$2=has_var_structure(ty,sy,y);
      if(match$1)
       return match$2?caml_call3(fvar,init,x,y):caml_call4(fk,init,0,x,y);
      if(match$2)return caml_call4(fk,init,1,y,x);
      if(tx === ty && sx === sy)
       {var i=0,acc=init;
        for(;;)
         {if(i >= sx)return acc;
          var
           acc$0=fold2(fvar,fval,fk,acc,x[1 + i],y[1 + i]),
           i$0=i + 1 | 0,
           i=i$0,
           acc=acc$0}}
      throw [0,Different_shape,tx,ty]}
    function equal$1(x,y)
     {try
       {var
         _avy_=1,
         _avz_=function(param,_avK_,_avJ_,_avI_){return 0},
         _avA_=
          function(acc,x,y){var _avH_=acc?caml_equal(x,y):acc;return _avH_},
         _avB_=
          fold2
           (function(acc,v,u)
             {if(acc)
               {var _avD_=equal(v,u);
                if(_avD_)
                 {var
                   _avE_=caml_call1(Stdlib_List[1],u[6]),
                   _avF_=caml_call1(Stdlib_List[1],v[6]) === _avE_?1:0;
                  if(_avF_)
                   return caml_call3(Stdlib_List[34],equal$1,v[6],u[6]);
                  var _avG_=_avF_}
                else
                 var _avG_=_avD_}
              else
               var _avG_=acc;
              return _avG_},
            _avA_,
            _avz_,
            _avy_,
            x,
            y);
        return _avB_}
      catch(_avC_)
       {_avC_ = caml_wrap_exception(_avC_);
        if(_avC_[1] === Different_shape)return 0;
        throw _avC_}}
    function compare$1(x,y)
     {try
       {var
         _avn_=0,
         _avo_=function(param,_avx_,_avw_,_avv_){return -1},
         _avp_=function(acc,x,y){return 0 === acc?caml_compare(x,y):acc},
         _avq_=
          fold2
           (function(acc,v,u)
             {if(0 !== acc)return acc;
              var acc$0=compare(v,u);
              if(0 !== acc$0)return acc$0;
              var _avr_=u[6],_avs_=v[6],_avt_=0;
              function _avu_(acc,x,y){return 0 === acc?compare$1(x,y):acc}
              return caml_call4(Stdlib_List[30],_avu_,_avt_,_avs_,_avr_)},
            _avp_,
            _avo_,
            _avn_,
            x,
            y);
        return _avq_}
      catch(exn)
       {exn = caml_wrap_exception(exn);
        if(exn[1] !== Different_shape)throw exn;
        var ty=exn[3],tx=exn[2];
        return caml_compare(tx,ty)}}
    function hash$0(x)
     {var _avf_=1;
      function _avg_(acc,x)
       {var _avm_=[0,acc,caml_call1(Stdlib_Hashtbl[28],x)];
        return caml_call1(Stdlib_Hashtbl[28],_avm_)}
      return fold$0
              (function(acc,v)
                {var _avh_=v[6];
                 function _avi_(acc,x)
                  {var _avl_=[0,acc,hash$0(x)];
                   return caml_call1(Stdlib_Hashtbl[28],_avl_)}
                 var
                  _avj_=caml_call3(Stdlib_List[25],_avi_,acc,_avh_),
                  _avk_=[0,hash(v),_avj_];
                 return caml_call1(Stdlib_Hashtbl[28],_avk_)},
               _avg_,
               _avf_,
               x)}
    function describe_var(ppf,param)
     {var index=param[3];return caml_call3(Stdlib_Format[129],ppf,_e_,index)}
    function helper(ppf,x)
     {var tx=caml_obj_tag(x);
      if(! is_box(tx))
       {is_valid_tag_exn(tx);
        return tx === Stdlib_Obj[18]
                ?caml_call1(caml_call2(Stdlib_Format[129],ppf,_k_),x)
                :tx === Stdlib_Obj[13]
                  ?caml_call1(caml_call2(Stdlib_Format[129],ppf,_l_),x)
                  :tx === Stdlib_Obj[14]
                    ?caml_call1(caml_call2(Stdlib_Format[129],ppf,_m_),x)
                    :caml_call1(Stdlib[2],cst_Dynamic_pretty_printing_of)}
      var sx=x.length - 1;
      if(has_var_structure(tx,sx,x))
       {var _avc_=x[6];
        if(! _avc_)return describe_var(ppf,x);
        var
         _avd_=
          [0,
           function(ppf,param){return caml_call2(Stdlib_Format[129],ppf,_f_)}],
         _ave_=caml_call2(Stdlib_Format[123],_avd_,helper);
        return caml_call6
                (Stdlib_Format[129],ppf,_g_,describe_var,x,_ave_,_avc_)}
      caml_call3(Stdlib_Format[129],ppf,_i_,tx);
      var i=0;
      for(;;)
       {if(i >= sx)return caml_call2(Stdlib_Format[129],ppf,_j_);
        if(0 < i)caml_call2(Stdlib_Format[129],ppf,_h_);
        helper(ppf,x[1 + i]);
        var i$0=i + 1 | 0,i=i$0}}
    function pp(ppf,x){return helper(ppf,x)}
    function show(x){return caml_call3(Stdlib_Format[133],_n_,pp,x)}
    var
     _o_=
      [0,
       tabling_env,
       non_local_scope,
       new_scope,
       valid_anchor,
       dummy,
       make,
       reify,
       equal,
       compare,
       hash,
       is_wildcard,
       make_wc],
     OCanren_Term=
      [0,
       _o_,
       VarSet,
       VarTbl,
       VarMap,
       repr,
       var$0,
       map$0,
       iter$0,
       fold$0,
       Different_shape,
       fold2,
       equal$1,
       compare$1,
       hash$0,
       show,
       describe_var,
       pp];
    caml_register_global(354,OCanren_Term,"OCanren__Term");
    var last_anchor=[0,11],first_var=10;
    function empty$0(param)
     {last_anchor[1]++;return [0,last_anchor[1],first_var]}
    function create(anchor){return [0,anchor,first_var]}
    function fresh(scope,e)
     {var v=caml_call3(_o_[6],e[1],scope,e[2]);e[2] = 1 + e[2] | 0;return v}
    function wc(scope,e){return caml_call2(_o_[12],e[1],scope)}
    function check(env,v){return v[2] === env[1]?1:0}
    function check_exn(env,v)
     {return check(env,v)
              ?0
              :caml_call1(Stdlib[2],cst_OCanren_fatal_Env_check_wr)}
    function var$1(env,x)
     {var res=var$0(x);
      if(! res)return 0;
      var v=res[1];
      check_exn(env,v);
      return res}
    function is_var(env,x){return 0 !== var$1(env,x)?1:0}
    function is_wc(env,x)
     {var match=var$0(x);
      if(! match)return 0;
      var v=match[1];
      check_exn(env,v);
      return caml_call1(_o_[11],v)}
    function freevars(env,x)
     {var _ava_=VarSet[1];
      function _avb_(acc,param){return acc}
      return fold$0
              (function(acc,v){return caml_call2(VarSet[4],v,acc)},
               _avb_,
               _ava_,
               x)}
    var Open_Term=[248,cst_OCanren_Env_Open_Term,caml_fresh_oo_id(0)];
    function is_open(env,x)
     {try
       {var _au9_=function(param){return 0};
        iter$0(function(param){throw Open_Term},_au9_,x);
        var _au__=0;
        return _au__}
      catch(_au$_)
       {_au$_ = caml_wrap_exception(_au$_);
        if(_au$_ === Open_Term)return 1;
        throw _au$_}}
    function equal$2(param,_au8_)
     {var a1=param[1],a2=_au8_[1];return a1 === a2?1:0}
    function symbol(f,g,x){return caml_call1(f,caml_call1(g,x))}
    function return$0(a,param){return a}
    function fmap(f,r,env){return caml_call1(f,caml_call1(r,env))}
    function symbol$0(f,x,env){return caml_call2(f,env,caml_call1(x,env))}
    function bind(r,k,env){return caml_call2(k,caml_call1(r,env),env)}
    function chain(f,env,x)
     {return caml_call2(f,function(_au7_){return x},env)}
    function let$0(x,f){return function(_au6_){return bind(x,f,_au6_)}}
    function let$1(x,f){return function(_au5_){return fmap(f,x,_au5_)}}
    var Syntax=[0,let$0,let$1];
    function symbol$1(g,f)
     {function _au0_(_au4_){return symbol}
      function _au1_(_au3_){return symbol$0(_au0_,f,_au3_)}
      return function(_au2_){return symbol$0(_au1_,g,_au2_)}}
    function list_mapm(f)
     {function helper(param)
       {if(param)
         {var
           tl=param[2],
           h=param[1],
           _auP_=
            function(h)
             {function _auV_(tl)
               {var _auY_=[0,h,tl];return function(_auZ_){return _auY_}}
              var _auW_=helper(tl);
              return function(_auX_){return bind(_auW_,_auV_,_auX_)}},
           _auQ_=caml_call1(f,function(_auU_){return h});
          return function(_auT_){return bind(_auQ_,_auP_,_auT_)}}
        var _auR_=0;
        return function(_auS_){return _auR_}}
      return helper}
    var
     _p_=[0,return$0,fmap,bind,symbol$0,chain,symbol$1,list_mapm,Syntax],
     OCanren_Env=
      [0,
       empty$0,
       create,
       fresh,
       wc,
       check,
       check_exn,
       is_var,
       is_wc,
       var$1,
       freevars,
       is_open,
       equal$2,
       _p_];
    caml_register_global(355,OCanren_Env,"OCanren__Env");
    var data=[0,1];
    function do_occurs_check(param){return data[1]}
    function occurs_check_on(param){data[1] = 1;return 0}
    function occurs_check_off(param){data[1] = 0;return 0}
    var OCanren_Runconf=[0,do_occurs_check,occurs_check_on,occurs_check_off];
    caml_register_global(356,OCanren_Runconf,"OCanren__Runconf");
    function is_relevant(env,vs,param)
     {var term=param[2],var$0=param[1],_auN_=caml_call2(VarSet[3],var$0,vs);
      if(_auN_)
       var _auO_=_auN_;
      else
       {var match=var$1(env,term);
        if(match){var v=match[1];return caml_call2(VarSet[3],v,vs)}
        var _auO_=0}
      return _auO_}
    function equal$3(param,_auL_)
     {var
       p=_auL_[2],
       u=_auL_[1],
       t=param[2],
       v=param[1],
       _auM_=caml_call2(_o_[8],v,u);
      return _auM_?_auM_:equal$1(t,p)}
    function compare$2(param,_auK_)
     {var
       p=_auK_[2],
       u=_auK_[1],
       t=param[2],
       v=param[1],
       res=caml_call2(_o_[9],v,u);
      return 0 === res?compare$1(t,p):res}
    function hash$1(param)
     {var
       term=param[2],
       var$0=param[1],
       _auI_=hash$0(term),
       _auJ_=[0,caml_call1(_o_[10],var$0),_auI_];
      return caml_call1(Stdlib_Hashtbl[28],_auJ_)}
    function pp$0(ppf,param)
     {var term=param[2],var$0=param[1];
      return caml_call6(Stdlib_Format[129],ppf,_q_,pp,var$0,pp,term)}
    var Binding=[0,is_relevant,equal$3,compare$2,hash$1,pp$0],_r_=VarMap[1];
    function pp$1(ppf,s)
     {caml_call2(Stdlib_Format[129],ppf,_s_);
      function _auH_(var$0,term)
       {return caml_call6(Stdlib_Format[129],ppf,_t_,pp,var$0,pp,term)}
      caml_call2(VarMap[11],_auH_,s);
      return caml_call2(Stdlib_Format[129],ppf,_u_)}
    function _v_(subst,param)
     {var term=param[2],var$0=param[1];
      return caml_call2(VarMap[3],var$0,subst)
              ?caml_call1(Stdlib[1],cst_OCanren_fatal_Subst_of_lis)
              :caml_call3(VarMap[4],var$0,term,subst)}
    var of_list=caml_call2(Stdlib_ListLabels[25],_v_,_r_);
    function of_map(m){return m}
    function split$0(s)
     {var _auF_=0;
      function _auG_(var$0,term,xs){return [0,[0,var$0,term],xs]}
      return caml_call3(VarMap[12],_auG_,s,_auF_)}
    function walk(env,subst,x)
     {function walkv$0(counter,env,subst,v)
       {check_exn(env,v);
        if(caml_call1(_o_[11],v))return [2,v];
        var _auC_=v[4];
        if(! _auC_)
         try
          {var _auD_=walkt(env,subst,caml_call2(VarMap[27],v,subst));
           return _auD_}
         catch(_auE_)
          {_auE_ = caml_wrap_exception(_auE_);
           if(_auE_ === Stdlib[8])return [0,v];
           throw _auE_}
        var term=_auC_[1];
        if(counter >= 50)
         return caml_trampoline_return(walkt$0,[0,env,subst,term]);
        var counter$0=counter + 1 | 0;
        return walkt$0(counter$0,env,subst,term)}
      function walkt$0(counter,env,subst,t)
       {var match=var$1(env,t);
        if(! match)return [1,t];
        var v=match[1];
        if(caml_call1(_o_[11],v))return [2,v];
        if(counter >= 50)
         return caml_trampoline_return(walkv$0,[0,env,subst,v]);
        var counter$0=counter + 1 | 0;
        return walkv$0(counter$0,env,subst,v)}
      function walkv(env,subst,v)
       {return caml_trampoline(walkv$0(0,env,subst,v))}
      function walkt(env,subst,t)
       {return caml_trampoline(walkt$0(0,env,subst,t))}
      return walkv(env,subst,x)}
    function map$1(fvar,fval,env,subst,x)
     {function deepfvar(v)
       {check_exn(env,v);
        var match=walk(env,subst,v);
        if(1 === match[0]){var x=match[1];return map$0(deepfvar,fval,x)}
        var v$0=match[1];
        return caml_call1(fvar,v$0)}
      return map$0(deepfvar,fval,x)}
    var Occurs_check=[248,cst_OCanren_Subst_Occurs_check,caml_fresh_oo_id(0)];
    function occurs(env,subst,var$0,term)
     {function fval(x){return 0}
      function deepfvar(v)
       {check_exn(env,v);
        var match=walk(env,subst,v);
        if(1 === match[0]){var x=match[1];return iter$0(deepfvar,fval,x)}
        var v$0=match[1],_auB_=caml_call2(_o_[8],v$0,var$0);
        if(_auB_)throw Occurs_check;
        return _auB_}
      return iter$0(deepfvar,fval,term)}
    var
     Unification_failed=
      [248,cst_OCanren_Subst_Unification_,caml_fresh_oo_id(0)];
    function unify(opt,_aut_,env,subst,x,y)
     {if(opt)var sth=opt[1],subsume=sth;else var subsume=0;
      function extend(var$0,term,param)
       {var subst$0=param[2],prefix=param[1];
        if(do_occurs_check(0))occurs(env,subst$0,var$0,term);
        occurs(env,subst$0,var$0,term);
        var subst=caml_call3(VarMap[4],var$0,term,subst$0);
        return [0,[0,[0,var$0,term],prefix],subst]}
      function helper(x,y,acc)
       {function _auw_(acc,l,v,y)
         {var subst=acc[2];
          if(caml_call1(_o_[11],v))return acc;
          if(subsume && 1 === l)throw Unification_failed;
          var match=walk(env,subst,v);
          switch(match[0])
           {case 0:var v$0=match[1];return extend(v$0,y,acc);
            case 1:var x=match[1];return helper(x,y,acc);
            default:throw [0,Match_failure,_w_]}}
        function _aux_(acc,x,y)
         {if(caml_equal(x,y))return acc;throw Unification_failed}
        return fold2
                (function(acc,x,y)
                  {var
                    subst=acc[2],
                    match=walk(env,subst,x),
                    match$0=walk(env,subst,y),
                    switch$0=0;
                   switch(match[0])
                    {case 0:
                      var _auy_=match[1];
                      switch(match$0[0])
                       {case 0:
                         var y$0=match$0[1];
                         return caml_call2(_o_[8],_auy_,y$0)
                                 ?acc
                                 :extend(_auy_,y$0,acc);
                        case 1:var y$1=match$0[1];return extend(_auy_,y$1,acc);
                        default:var v=match$0[1],z=_auy_}
                      break;
                     case 1:
                      var _auz_=match[1];
                      switch(match$0[0])
                       {case 0:var y$2=match$0[1];return extend(y$2,_auz_,acc);
                        case 1:var y$3=match$0[1];return helper(_auz_,y$3,acc);
                        default:var v$0=match$0[1],z$0=_auz_;switch$0 = 1}
                      break;
                     default:
                      var _auA_=match[1];
                      switch(match$0[0])
                       {case 0:var v=_auA_,z=match$0[1];break;
                        case 1:var v$0=_auA_,z$0=match$0[1];switch$0 = 1;break;
                        default:return acc}}
                   return switch$0?extend(v$0,z$0,acc):extend(v,z,acc)},
                 _aux_,
                 _auw_,
                 acc,
                 x,
                 y)}
      try
       {var _auu_=[0,helper(x,y,[0,0,subst])];return _auu_}
      catch(_auv_)
       {_auv_ = caml_wrap_exception(_auv_);
        if
         (_auv_[1]
          !==
          Different_shape
          &&
          _auv_
          !==
          Unification_failed
          &&
          _auv_
          !==
          Occurs_check)
         throw _auv_;
        return 0}}
    function apply(env,subst,x)
     {function _aus_(x){return x}
      return map$1(function(v){return v},_aus_,env,subst,x)}
    function freevars$0(env,subst,x){return freevars(env,apply(env,subst,x))}
    var is_bound=VarMap[3];
    function merge$0(env,subst1,subst2)
     {var _auq_=[0,subst2];
      function _aur_(var$0,term,param)
       {if(! param)return 0;
        var s=param[1],match=unify(0,0,env,s,var$0,term);
        if(! match)return 0;
        var match$0=match[1],s$0=match$0[2];
        return [0,s$0]}
      return caml_call3(VarMap[12],_aur_,subst1,_auq_)}
    function merge_disjoint(env)
     {function _auo_(param,_aup_)
       {return caml_call1(Stdlib[1],cst_OCanren_fatal_Subst_merge_)}
      return caml_call1(VarMap[8],_auo_)}
    function subsumed(env,subst)
     {function _aun_(var$0,term)
       {var match=unify(0,0,env,subst,var$0,term);
        if(match && ! match[1][1])return 1;
        return 0}
      return caml_call1(VarMap[13],_aun_)}
    function subsumed$0(env,x,y)
     {var match=unify(_x_,0,env,_r_,y,x);return match?1:0}
    var Answer=[0,subsumed$0];
    function reify$0(env,subst,x)
     {function _aum_(x){return x}
      return map$1(function(v){return v},_aum_,env,subst,x)}
    var
     OCanren_Subst=
      [0,
       Binding,
       pp$1,
       _r_,
       of_list,
       of_map,
       split$0,
       apply,
       is_bound,
       freevars$0,
       unify,
       merge_disjoint,
       merge$0,
       subsumed,
       Answer,
       reify$0];
    caml_register_global(359,OCanren_Subst,"OCanren__Subst");
    var S=caml_call1(Stdlib_Set[1],[0,compare$1]),empty$1=VarMap[1];
    function add$0(env,t,var$0,term)
     {try
       {var
         _aui_=caml_call2(VarMap[27],var$0,t),
         terms=caml_call1(caml_call1(S[4],term),_aui_),
         _auj_=caml_call2(VarMap[6],var$0,t),
         _auk_=caml_call1(caml_call2(VarMap[4],var$0,terms),_auj_);
        return _auk_}
      catch(_aul_)
       {_aul_ = caml_wrap_exception(_aul_);
        if(_aul_ !== Stdlib[8])throw _aul_;
        var _auh_=caml_call1(S[5],term);
        return caml_call3(VarMap[4],var$0,_auh_,t)}}
    function mem$0(env,t,var$0,term)
     {try
       {var
         _aue_=caml_call2(VarMap[27],var$0,t),
         _auf_=caml_call1(caml_call1(S[3],term),_aue_);
        return _auf_}
      catch(_aug_)
       {_aug_ = caml_wrap_exception(_aug_);
        if(_aug_ === Stdlib[8])return 0;
        throw _aug_}}
    function extract(t,v)
     {try
       {var _aub_=caml_call2(VarMap[27],v,t),_auc_=caml_call1(S[23],_aub_);
        return _auc_}
      catch(_aud_)
       {_aud_ = caml_wrap_exception(_aud_);
        if(_aud_ === Stdlib[8])return 0;
        throw _aud_}}
    function subsumed$1(env,t$0,t)
     {function _at8_(var$0,terms)
       {try
         {var
           terms$0=caml_call2(VarMap[27],var$0,t$0),
           _at9_=
            function(term)
             {function _aua_(term$0)
               {return caml_call3(Answer[1],env,term$0,term)}
              return caml_call2(S[18],_aua_,terms$0)},
           _at__=caml_call2(S[17],_at9_,terms);
          return _at__}
        catch(_at$_)
         {_at$_ = caml_wrap_exception(_at$_);
          if(_at$_ === Stdlib[8])return 0;
          throw _at$_}}
      return caml_call2(VarMap[13],_at8_,t)}
    var
     Disequality_violated=
      [248,cst_OCanren_Disequality_Disequ,caml_fresh_oo_id(0)],
     Disequality_fulfilled=
      [248,cst_OCanren_Disequality_Disequ$0,caml_fresh_oo_id(0)];
    function update$0(init)
     {function _at7_(acc,param)
       {var term=param[2],var$0=param[1];
        if(caml_call2(VarMap[3],var$0,acc))throw Disequality_fulfilled;
        return caml_call3(VarMap[4],var$0,term,acc)}
      return caml_call2(Stdlib_ListLabels[25],_at7_,init)}
    var of_list$0=update$0(VarMap[1]);
    function refine(env,subst,x,y)
     {var match=unify(0,0,env,subst,x,y);
      if(! match)return 0;
      var match$0=match[1],prefix=match$0[1];
      function cond(param)
       {var term=param[2],var$0=param[1];
        if(! caml_call1(_o_[11],var$0) && ! is_wc(env,term))return 1;
        return 0}
      var prefix$0=caml_call2(Stdlib_List[41],cond,prefix);
      return prefix$0?[0,prefix$0]:1}
    function recheck(env,subst,t)
     {var t$0=t;
      for(;;)
       {var
         match=caml_call1(VarMap[22],t$0),
         term=match[2],
         var$0=match[1],
         unchecked=caml_call2(VarMap[6],var$0,t$0),
         match$0=refine(env,subst,var$0,term);
        if(typeof match$0 !== "number")
         {var delta=match$0[1];return caml_call1(update$0(unchecked),delta)}
        if(! match$0)throw Disequality_fulfilled;
        if(caml_call1(VarMap[2],unchecked))throw Disequality_violated;
        var t$0=unchecked}}
    function simplify(env,subst,ds)
     {try
       {var
         _at2_=0,
         _at3_=
          function(var$0,term,acc)
           {var match=refine(env,subst,var$0,term);
            if(typeof match !== "number")
             {var delta=match[1];return caml_call2(Stdlib[37],delta,acc)}
            if(match)return acc;
            throw Disequality_fulfilled},
         result=caml_call3(VarMap[12],_at3_,ds,_at2_),
         _at4_=result?1:0;
        if(! _at4_)throw [0,Assert_failure,_y_];
        var _at5_=[0,caml_call1(of_list$0,result)];
        return _at5_}
      catch(_at6_)
       {_at6_ = caml_wrap_exception(_at6_);
        if(_at6_ === Disequality_fulfilled)return 0;
        throw _at6_}}
    function subsumed$2(env,subst,t$0,t)
     {return caml_call1(subsumed(env,t),t$0)}
    var next_id=[0,0];
    function compare$3(_at1_,_at0_){return _at1_ - _at0_ | 0}
    var
     M=caml_call1(Stdlib_Map[1],[0,compare$3]),
     empty$2=M[1],
     is_empty$0=M[2];
    function make$0(env,subst,x,y)
     {var id=next_id[1];
      next_id[1] = next_id[1] + 1 | 0;
      var match=refine(env,subst,x,y);
      if(typeof match !== "number")
       {var delta=match[1],_atZ_=caml_call1(of_list$0,delta);
        return caml_call2(M[6],id,_atZ_)}
      if(match)throw Disequality_violated;
      throw Disequality_fulfilled}
    function split$1(mapa)
     {var _atW_=VarMap[1];
      function _atX_(k,t,acc)
       {var _atY_=caml_call1(VarMap[22],t)[1];
        function upd(param)
         {if(! param)return [0,caml_call2(M[6],k,t)];
          var old=param[1];
          return [0,caml_call3(M[4],k,t,old)]}
        return caml_call3(VarMap[40],_atY_,upd,acc)}
      return caml_call3(M[13],_atX_,mapa,_atW_)}
    function recheck$0(env,subst,t)
     {var _atR_=M[1];
      function _atS_(id,disj,acc)
       {try
         {var
           _atT_=recheck(env,subst,disj),
           _atU_=caml_call3(M[4],id,_atT_,acc);
          return _atU_}
        catch(_atV_)
         {_atV_ = caml_wrap_exception(_atV_);
          if(_atV_ === Disequality_fulfilled)return acc;
          throw _atV_}}
      return caml_call3(M[13],_atS_,t,_atR_)}
    function merge_disjoint$0(env,subst)
     {function _atO_(param,_atQ_,_atP_)
       {return caml_call1(Stdlib[1],cst_OCanren_fatal_Conjunct_mer)}
      return caml_call1(M[9],_atO_)}
    function project(env,subst,t,fv)
     {var fv$0=fv;
      for(;;)
       {var
         _atD_=[0,fv$0,M[1]],
         _atE_=
          function(fv)
            {return function(id,disj,param)
              {var conj=param[2],fv$0=param[1];
               function _atH_(var$0,term)
                {var _atM_=caml_call2(VarSet[3],var$0,fv);
                 if(_atM_)
                  var _atN_=_atM_;
                 else
                  {var match=var$1(env,term);
                   if(match){var u=match[1];return caml_call2(VarSet[3],u,fv)}
                   var _atN_=0}
                 return _atN_}
               if(! caml_call2(VarMap[13],_atH_,disj))return [0,fv$0,conj];
               var _atI_=VarSet[1];
               function _atJ_(param,term,acc)
                {var _atL_=freevars$0(env,subst,term);
                 return caml_call1(caml_call1(VarSet[7],acc),_atL_)}
               var
                _atK_=caml_call3(VarMap[12],_atJ_,disj,_atI_),
                fv$1=caml_call1(caml_call1(VarSet[7],fv$0),_atK_);
               return [0,fv$1,caml_call3(M[4],id,disj,conj)]}}
           (fv$0),
         match=caml_call3(M[13],_atE_,t,_atD_),
         t$0=match[2],
         fv$1=match[1];
        if(caml_call2(VarSet[12],fv$0,fv$1))
         {var
           _atB_=M[1],
           _atC_=
            function(id,disj,acc)
             {function _atF_(param,disj$0)
               {return subsumed$2(env,subst,disj$0,disj)}
              if(caml_call2(M[15],_atF_,acc))return acc;
              function _atG_(param,disj$0)
               {return 1 - subsumed$2(env,subst,disj,disj$0)}
              var acc$0=caml_call2(M[16],_atG_,acc);
              return caml_call3(M[4],id,disj,acc$0)};
          return caml_call3(M[13],_atC_,t$0,_atB_)}
        var fv$0=fv$1}}
    var empty$3=VarMap[1];
    function combine(env,subst,cstore)
     {function _atA_(param){return merge_disjoint$0(env,subst)}
      return caml_call3(VarMap[12],_atA_,cstore,empty$2)}
    function merge_disjoint$1(env,subst)
     {function _atz_(param,c1,c2)
       {var c=caml_call2(merge_disjoint$0(env,subst),c1,c2);
        return caml_call1(is_empty$0,c)?0:[0,c]}
      return caml_call1(VarMap[8],_atz_)}
    function update$1(env,subst,conj)
     {var _aty_=split$1(conj);
      return caml_call1(merge_disjoint$1(env,subst),_aty_)}
    function add$1(env,subst,cstore,x,y)
     {try
       {var
         _atw_=
          [0,caml_call1(update$1(env,subst,make$0(env,subst,x,y)),cstore)];
        return _atw_}
      catch(_atx_)
       {_atx_ = caml_wrap_exception(_atx_);
        if(_atx_ === Disequality_fulfilled)return [0,cstore];
        if(_atx_ === Disequality_violated)return 0;
        throw _atx_}}
    function recheck$1(env,subst,cstore,bs)
     {function helper(var$0,cstore)
       {try
         {var
           conj=caml_call2(VarMap[27],var$0,cstore),
           cstore$0=caml_call2(VarMap[6],var$0,cstore),
           _atu_=
            caml_call1(update$1(env,subst,recheck$0(env,subst,conj)),cstore$0);
          return _atu_}
        catch(_atv_)
         {_atv_ = caml_wrap_exception(_atv_);
          if(_atv_ === Stdlib[8])return cstore;
          throw _atv_}}
      try
       {var
         _atr_=
          function(cstore,param)
           {var
             term=param[2],
             var$0=param[1],
             cstore$0=helper(var$0,cstore),
             match=var$1(env,term);
            if(! match)return cstore$0;
            var u=match[1];
            return helper(u,cstore$0)},
         cstore$0=caml_call3(Stdlib_ListLabels[25],_atr_,cstore,bs),
         _ats_=[0,cstore$0];
        return _ats_}
      catch(_att_)
       {_att_ = caml_wrap_exception(_att_);
        if(_att_ === Disequality_violated)return 0;
        throw _att_}}
    function project$0(env,subst,cstore,fv)
     {return split$1(project(env,subst,combine(env,subst,cstore),fv))}
    function reify$1(env,subst,cstore,x)
     {var t$1=combine(env,subst,cstore),_ath_=M[1];
      function _ati_(id,disj,acc)
       {var match=simplify(env,subst,disj);
        if(! match)return acc;
        var disj$0=match[1];
        return caml_call3(M[4],id,disj$0,acc)}
      var
       t=caml_call3(M[13],_ati_,t$1,_ath_),
       fv=freevars$0(env,subst,x),
       t$0=project(env,subst,t,fv),
       _atj_=[0,empty$1,0];
      function _atk_(param,disj,acc)
       {var _atl_=0;
        function _atm_(var$0,term,xs){return [0,[0,var$0,term],xs]}
        var bs=caml_call3(VarMap[12],_atm_,disj,_atl_);
        function _atn_(answ)
         {function _atp_(param)
           {var term=param[2],var$0=param[1];
            return mem$0(env,answ,var$0,term)}
          if(caml_call2(Stdlib_List[33],_atp_,bs))return [0,answ,0];
          function _atq_(param)
           {var term=param[2],var$0=param[1];
            return add$0(env,answ,var$0,term)}
          return caml_call2(Stdlib_List[19],_atq_,bs)}
        var _ato_=caml_call2(Stdlib_ListLabels[19],_atn_,acc);
        return caml_call1(Stdlib_List[13],_ato_)}
      return caml_call3(M[13],_atk_,t$0,_atj_)}
    var
     _z_=[0,extract,subsumed$1],
     OCanren_Disequality=
      [0,empty$3,add$1,recheck$1,project$0,merge_disjoint$1,_z_,reify$1];
    caml_register_global(360,OCanren_Disequality,"OCanren__Disequality");
    var logic_t=[],_E_=0,_F_=0;
    caml_update_dummy
     (logic_t,
      [0,
       0,
       function(_ate_)
        {caml_call2(CamlinternalOO[8],_ate_,_D_);
         return function(_atg_,_atf_)
          {return caml_call2(CamlinternalOO[24],_atf_,_ate_)}},
       _F_,
       _E_]);
    function gcata_logic(tr,inh,subj)
     {if(0 === subj[0])
       {var x_002=subj[2],x_001=subj[1];
        return caml_call5
                (caml_get_public_method(tr,1069042091,1),
                 tr,
                 inh,
                 subj,
                 x_001,
                 x_002)}
      var x_003=subj[1];
      return caml_call4
              (caml_get_public_method(tr,-711318731,2),tr,inh,subj,x_003)}
    function _G_(_as0_)
     {var
       _as1_=caml_call2(CamlinternalOO[3],_as0_,cst),
       _as2_=caml_call2(CamlinternalOO[3],_as0_,cst$0),
       _as3_=caml_call2(CamlinternalOO[8],_as0_,_D_),
       _as4_=_as3_[1],
       _as5_=_as3_[2],
       _as6_=caml_call6(CamlinternalOO[18],_as0_,0,_D_,0,logic_t,1)[1];
      function _as7_(self_2,inh_012,param,x_013)
       {return caml_call4
                (Stdlib_Format[129],inh_012,_H_,self_2[1 + _as1_],x_013)}
      var
       _as8_=
        [0,
         _as4_,
         function(self_2,inh_005,param,x_006,x_007)
          {function _atc_(inh_010,subj_011)
            {return caml_call4
                     (GT[224],GT[159],self_2[1 + _as2_],inh_010,subj_011)}
           function _atd_(inh_008,subj_009)
            {return caml_call3(GT[224],GT[46],inh_008,subj_009)}
           return caml_call6
                   (Stdlib_Format[129],inh_005,_I_,_atd_,x_006,_atc_,x_007)},
         _as5_,
         _as7_];
      caml_call2(CamlinternalOO[11],_as0_,_as8_);
      return function(_ata_,_as$_,_as__,_as9_)
       {var _atb_=caml_call2(CamlinternalOO[24],_as$_,_as0_);
        _atb_[1 + _as2_] = _as9_;
        _atb_[1 + _as1_] = _as__;
        caml_call1(_as6_,_atb_);
        return caml_call3(CamlinternalOO[26],_as$_,_atb_,_as0_)}}
    var fmt_logic_t=caml_call2(CamlinternalOO[19],_C_,_G_);
    function fmt_logic(fa,inh0,subj)
     {var _asZ_=caml_call2(fmt_logic_t[1],0,fa);
      return caml_call4(GT[2],gcata_logic,_asZ_,inh0,subj)}
    function _J_(_asL_)
     {var
       _asM_=caml_call2(CamlinternalOO[3],_asL_,cst$1),
       _asN_=caml_call2(CamlinternalOO[3],_asL_,cst$2),
       _asO_=caml_call2(CamlinternalOO[8],_asL_,_D_),
       _asP_=_asO_[1],
       _asQ_=_asO_[2],
       _asR_=caml_call6(CamlinternalOO[18],_asL_,0,_D_,0,logic_t,1)[1];
      function _asS_(self_3,inh_021,param,x_022)
       {return caml_call2(self_3[1 + _asM_],inh_021,x_022)}
      var
       _asT_=
        [0,
         _asP_,
         function(self_3,inh_014,param,subj_020,x_016)
          {var
            inh_019=
             caml_call4(GT[226],GT[159],self_3[1 + _asN_],inh_014,x_016);
           return caml_call3(GT[226],GT[46],inh_019,subj_020)},
         _asQ_,
         _asS_];
      caml_call2(CamlinternalOO[11],_asL_,_asT_);
      return function(_asX_,_asW_,_asV_,_asU_)
       {var _asY_=caml_call2(CamlinternalOO[24],_asW_,_asL_);
        _asY_[1 + _asN_] = _asU_;
        _asY_[1 + _asM_] = _asV_;
        caml_call1(_asR_,_asY_);
        return caml_call3(CamlinternalOO[26],_asW_,_asY_,_asL_)}}
    var foldr_logic_t=caml_call2(CamlinternalOO[19],_C_,_J_);
    function foldr_logic(fa,inh0,subj)
     {var _asK_=caml_call2(foldr_logic_t[1],0,fa);
      return caml_call4(GT[2],gcata_logic,_asK_,inh0,subj)}
    function _K_(_asw_)
     {var
       _asx_=caml_call2(CamlinternalOO[3],_asw_,cst$3),
       _asy_=caml_call2(CamlinternalOO[3],_asw_,cst$4),
       _asz_=caml_call2(CamlinternalOO[8],_asw_,_D_),
       _asA_=_asz_[1],
       _asB_=_asz_[2],
       _asC_=caml_call6(CamlinternalOO[18],_asw_,0,_D_,0,logic_t,1)[1];
      function _asD_(self_4,inh_030,param,x_031)
       {return caml_call2(self_4[1 + _asx_],inh_030,x_031)}
      var
       _asE_=
        [0,
         _asA_,
         function(self_4,inh_023,param,x_024,subj_029)
          {var inh_028=caml_call3(GT[225],GT[46],inh_023,x_024);
           return caml_call4
                   (GT[225],GT[159],self_4[1 + _asy_],inh_028,subj_029)},
         _asB_,
         _asD_];
      caml_call2(CamlinternalOO[11],_asw_,_asE_);
      return function(_asI_,_asH_,_asG_,_asF_)
       {var _asJ_=caml_call2(CamlinternalOO[24],_asH_,_asw_);
        _asJ_[1 + _asy_] = _asF_;
        _asJ_[1 + _asx_] = _asG_;
        caml_call1(_asC_,_asJ_);
        return caml_call3(CamlinternalOO[26],_asH_,_asJ_,_asw_)}}
    var foldl_logic_t=caml_call2(CamlinternalOO[19],_C_,_K_);
    function foldl_logic(fa,inh0,subj)
     {var _asv_=caml_call2(foldl_logic_t[1],0,fa);
      return caml_call4(GT[2],gcata_logic,_asv_,inh0,subj)}
    function _L_(_asd_)
     {var
       _ase_=caml_call2(CamlinternalOO[3],_asd_,cst$5),
       _asf_=caml_call2(CamlinternalOO[3],_asd_,cst$6),
       _asg_=caml_call2(CamlinternalOO[8],_asd_,_D_),
       _ash_=_asg_[1],
       _asi_=_asg_[2],
       _asj_=caml_call6(CamlinternalOO[18],_asd_,0,_D_,0,logic_t,1)[1];
      function _ask_(self_5,inh_038,param,x_039)
       {if(0 === inh_038[0])return caml_call2(GT[12],inh_038,_M_);
        var x_040=inh_038[1];
        function _asu_(param)
         {return caml_call2(self_5[1 + _ase_],x_040,x_039)}
        return caml_call2(GT[6],1,_asu_)}
      var
       _asl_=
        [0,
         _ash_,
         function(self_5,inh_032,param,subj$0,subj)
          {if(0 !== inh_032[0])return caml_call2(GT[12],inh_032,_N_);
           var x_036=inh_032[2],x_035=inh_032[1];
           function _asr_(param)
            {return caml_call4(GT[228],GT[159],self_5[1 + _asf_],x_036,subj)}
           function _ass_(param)
            {return caml_call3(GT[228],GT[46],x_035,subj$0)}
           var _ast_=caml_call2(GT[6],1,_ass_);
           return caml_call2(GT[6],_ast_,_asr_)},
         _asi_,
         _ask_];
      caml_call2(CamlinternalOO[11],_asd_,_asl_);
      return function(_asp_,_aso_,_asn_,_asm_)
       {var _asq_=caml_call2(CamlinternalOO[24],_aso_,_asd_);
        _asq_[1 + _asf_] = _asm_;
        _asq_[1 + _ase_] = _asn_;
        caml_call1(_asj_,_asq_);
        return caml_call3(CamlinternalOO[26],_aso_,_asq_,_asd_)}}
    var compare_logic_t=caml_call2(CamlinternalOO[19],_C_,_L_);
    function compare_logic(fa,inh0,subj)
     {var _asc_=caml_call2(compare_logic_t[1],0,fa);
      return caml_call4(GT[2],gcata_logic,_asc_,inh0,subj)}
    function _O_(_arZ_)
     {var
       _ar0_=caml_call2(CamlinternalOO[3],_arZ_,cst$7),
       _ar1_=caml_call2(CamlinternalOO[3],_arZ_,cst$8),
       _ar2_=caml_call2(CamlinternalOO[8],_arZ_,_D_),
       _ar3_=_ar2_[1],
       _ar4_=_ar2_[2],
       _ar5_=caml_call6(CamlinternalOO[18],_arZ_,0,_D_,0,logic_t,1)[1];
      function _ar6_(self_6,inh_048,param,x_049)
       {if(0 === inh_048[0])return 0;
        var x_050=inh_048[1];
        return caml_call2(self_6[1 + _ar0_],x_050,x_049)}
      var
       _ar7_=
        [0,
         _ar3_,
         function(self_6,inh_042,param,x_043,subj)
          {if(0 !== inh_042[0])return 0;
           var
            x_046=inh_042[2],
            x_045=inh_042[1],
            _asb_=caml_call3(GT[227],GT[46],x_045,x_043);
           return _asb_
                   ?caml_call4(GT[227],GT[159],self_6[1 + _ar1_],x_046,subj)
                   :_asb_},
         _ar4_,
         _ar6_];
      caml_call2(CamlinternalOO[11],_arZ_,_ar7_);
      return function(_ar$_,_ar__,_ar9_,_ar8_)
       {var _asa_=caml_call2(CamlinternalOO[24],_ar__,_arZ_);
        _asa_[1 + _ar1_] = _ar8_;
        _asa_[1 + _ar0_] = _ar9_;
        caml_call1(_ar5_,_asa_);
        return caml_call3(CamlinternalOO[26],_ar__,_asa_,_arZ_)}}
    var eq_logic_t=caml_call2(CamlinternalOO[19],_C_,_O_);
    function eq_logic(fa,inh0,subj)
     {var _arY_=caml_call2(eq_logic_t[1],0,fa);
      return caml_call4(GT[2],gcata_logic,_arY_,inh0,subj)}
    function _P_(_ari_)
     {var
       _arj_=caml_call2(CamlinternalOO[3],_ari_,cst$9),
       _ark_=caml_call2(CamlinternalOO[3],_ari_,cst$10),
       _arl_=caml_call2(CamlinternalOO[8],_ari_,_D_),
       _arm_=_arl_[1],
       _arn_=_arl_[2],
       _aro_=caml_call6(CamlinternalOO[18],_ari_,0,_D_,0,logic_t,1)[1];
      function _arp_(self_7,param,_arN_,x_054)
       {var
         _arO_=caml_call2(self_7[1 + _arj_],0,x_054),
         _arP_=caml_call2(Stdlib_List[4],_arO_,0),
         _arQ_=caml_call1(HTML[10],_arP_),
         _arR_=caml_call2(HTML[25],0,_arQ_),
         _arS_=caml_call2(Stdlib_List[4],_arR_,0),
         _arT_=caml_call1(HTML[10],_arS_),
         _arU_=caml_call2(HTML[23],0,_arT_),
         _arV_=caml_call2(Stdlib_List[4],_arU_,0),
         _arW_=caml_call1(HTML[3],cst_Value),
         _arX_=caml_call2(Stdlib_List[4],_arW_,_arV_);
        return caml_call1(HTML[10],_arX_)}
      var
       _arq_=
        [0,
         _arm_,
         function(self_7,param,_arw_,x_052,x_053)
          {var
            _arx_=caml_call1(self_7[1 + _ark_],0),
            _ary_=caml_call3(GT[222],GT[159],_arx_,x_053),
            _arz_=caml_call2(Stdlib_List[4],_ary_,0),
            _arA_=caml_call1(HTML[10],_arz_),
            _arB_=caml_call2(HTML[25],0,_arA_),
            _arC_=caml_call2(Stdlib_List[4],_arB_,0),
            _arD_=caml_call2(GT[222],GT[46],x_052),
            _arE_=caml_call2(Stdlib_List[4],_arD_,0),
            _arF_=caml_call1(HTML[10],_arE_),
            _arG_=caml_call2(HTML[25],0,_arF_),
            _arH_=caml_call2(Stdlib_List[4],_arG_,_arC_),
            _arI_=caml_call1(HTML[10],_arH_),
            _arJ_=caml_call2(HTML[23],0,_arI_),
            _arK_=caml_call2(Stdlib_List[4],_arJ_,0),
            _arL_=caml_call1(HTML[3],cst_Var),
            _arM_=caml_call2(Stdlib_List[4],_arL_,_arK_);
           return caml_call1(HTML[10],_arM_)},
         _arn_,
         _arp_];
      caml_call2(CamlinternalOO[11],_ari_,_arq_);
      return function(_aru_,_art_,_ars_,_arr_)
       {var _arv_=caml_call2(CamlinternalOO[24],_art_,_ari_);
        _arv_[1 + _ark_] = _arr_;
        _arv_[1 + _arj_] = _ars_;
        caml_call1(_aro_,_arv_);
        return caml_call3(CamlinternalOO[26],_art_,_arv_,_ari_)}}
    var html_logic_t=caml_call2(CamlinternalOO[19],_C_,_P_);
    function _Q_(fa,inh0,subj)
     {var _arh_=caml_call2(html_logic_t[1],0,fa);
      return caml_call4(GT[2],gcata_logic,_arh_,inh0,subj)}
    function _R_(_aq1_)
     {var
       _aq2_=caml_call2(CamlinternalOO[3],_aq1_,cst$11),
       _aq3_=caml_call2(CamlinternalOO[3],_aq1_,cst$12),
       _aq4_=caml_call2(CamlinternalOO[8],_aq1_,_D_),
       _aq5_=_aq4_[1],
       _aq6_=_aq4_[2],
       _aq7_=caml_call6(CamlinternalOO[18],_aq1_,0,_D_,0,logic_t,1)[1];
      function _aq8_(self_8,param,_arg_,x_057)
       {return [1,caml_call2(self_8[1 + _aq2_],0,x_057)]}
      var
       _aq9_=
        [0,
         _aq5_,
         function(self_8,param,_ard_,x_055,x_056)
          {var
            _are_=caml_call1(self_8[1 + _aq3_],0),
            _arf_=caml_call3(GT[223],GT[159],_are_,x_056);
           return [0,caml_call2(GT[223],GT[46],x_055),_arf_]},
         _aq6_,
         _aq8_];
      caml_call2(CamlinternalOO[11],_aq1_,_aq9_);
      return function(_arb_,_ara_,_aq$_,_aq__)
       {var _arc_=caml_call2(CamlinternalOO[24],_ara_,_aq1_);
        _arc_[1 + _aq3_] = _aq__;
        _arc_[1 + _aq2_] = _aq$_;
        caml_call1(_aq7_,_arc_);
        return caml_call3(CamlinternalOO[26],_ara_,_arc_,_aq1_)}}
    var gmap_logic_t=caml_call2(CamlinternalOO[19],_C_,_R_);
    function _S_(fa,inh0,subj)
     {var _aq0_=caml_call2(gmap_logic_t[1],0,fa);
      return caml_call4(GT[2],gcata_logic,_aq0_,inh0,subj)}
    function _T_(_aqG_)
     {var
       _aqH_=caml_call2(CamlinternalOO[3],_aqG_,cst$13),
       _aqI_=caml_call2(CamlinternalOO[3],_aqG_,cst$14),
       _aqJ_=caml_call2(CamlinternalOO[8],_aqG_,_D_),
       _aqK_=_aqJ_[1],
       _aqL_=_aqJ_[2],
       _aqM_=caml_call6(CamlinternalOO[18],_aqG_,0,_D_,0,logic_t,1)[1];
      function _aqN_(self_9,param,_aqY_,x_060)
       {var _aqZ_=caml_call2(self_9[1 + _aqH_],0,x_060);
        return caml_call2(Stdlib_Printf[4],_U_,_aqZ_)}
      var
       _aqO_=
        [0,
         _aqK_,
         function(self_9,param,_aqU_,x_058,x_059)
          {var
            _aqV_=caml_call1(self_9[1 + _aqI_],0),
            _aqW_=caml_call3(GT[221],GT[159],_aqV_,x_059),
            _aqX_=caml_call2(GT[221],GT[46],x_058);
           return caml_call3(Stdlib_Printf[4],_V_,_aqX_,_aqW_)},
         _aqL_,
         _aqN_];
      caml_call2(CamlinternalOO[11],_aqG_,_aqO_);
      return function(_aqS_,_aqR_,_aqQ_,_aqP_)
       {var _aqT_=caml_call2(CamlinternalOO[24],_aqR_,_aqG_);
        _aqT_[1 + _aqI_] = _aqP_;
        _aqT_[1 + _aqH_] = _aqQ_;
        caml_call1(_aqM_,_aqT_);
        return caml_call3(CamlinternalOO[26],_aqR_,_aqT_,_aqG_)}}
    var show_logic_t=caml_call2(CamlinternalOO[19],_C_,_T_);
    function _W_(fa,inh0,subj)
     {var _aqF_=caml_call2(show_logic_t[1],0,fa);
      return caml_call4(GT[2],gcata_logic,_aqF_,inh0,subj)}
    function _X_(eta){return caml_call2(GT[2],gcata_logic,eta)}
    var
     _Y_=caml_call1(CamlinternalOO[16],_B_),
     _Z_=caml_call2(CamlinternalOO[8],_Y_,shared),
     ___=_Z_[1],
     _$_=_Z_[2],
     _aa_=_Z_[3],
     _ab_=_Z_[4],
     _ac_=_Z_[5],
     _ad_=_Z_[6],
     _ae_=_Z_[7],
     _af_=_Z_[8];
    function _ag_(self_10,fa,subj){return _W_(caml_call1(GT[4],fa),0,subj)}
    function _ah_(self_10,fa,subj){return _S_(caml_call1(GT[4],fa),0,subj)}
    function _ai_(self_10,fa,subj){return _Q_(caml_call1(GT[4],fa),0,subj)}
    function _aj_(self_10){return eq_logic}
    function _ak_(self_10){return compare_logic}
    function _al_(self_10){return foldl_logic}
    function _am_(self_10){return foldr_logic}
    var
     _an_=
      [0,
       _ad_,
       function(self_10){return fmt_logic},
       _ab_,
       _am_,
       _ac_,
       _al_,
       _af_,
       _ak_,
       _ae_,
       _aj_,
       _$_,
       _ai_,
       _aa_,
       _ah_,
       ___,
       _ag_];
    caml_call2(CamlinternalOO[11],_Y_,_an_);
    caml_call1(CamlinternalOO[17],_Y_);
    var _ao_=[0,gcata_logic,caml_call2(CamlinternalOO[24],0,_Y_),_X_];
    function html_logic(fa,subj){return _Q_(caml_call1(GT[4],fa),0,subj)}
    function gmap_logic(fa,subj){return _S_(caml_call1(GT[4],fa),0,subj)}
    function show_logic(fa,subj){return _W_(caml_call1(GT[4],fa),0,subj)}
    var
     _aq_=[0,0,0,0],
     _ap_=_ao_[3],
     _ar_=caml_call1(CamlinternalOO[16],_B_),
     _as_=caml_call2(CamlinternalOO[8],_ar_,shared),
     _at_=_as_[1],
     _au_=_as_[2],
     _av_=_as_[3],
     _aw_=_as_[4],
     _ax_=_as_[5],
     _ay_=_as_[6],
     _az_=_as_[7],
     _aA_=_as_[8];
    function _aB_(self_11,fa,x)
     {var _aql_=0;
      function _aqm_(fself)
       {if(! _aq_[1])
         {var
           _aqn_=caml_call1(CamlinternalOO[16],_C_),
           _aqo_=caml_call2(CamlinternalOO[3],_aqn_,cst$15),
           _aqp_=caml_call2(CamlinternalOO[8],_aqn_,_D_),
           _aqq_=_aqp_[1],
           _aqr_=_aqp_[2],
           _aqs_=
            caml_call6(CamlinternalOO[18],_aqn_,0,0,_C_,show_logic_t,0)[1],
           _aqt_=
            function(self_12,param,_aqE_,x)
             {var env=self_12[1 + _aqo_];return caml_call1(env[1],x)},
           _aqu_=
            [0,
             _aqq_,
             function(self_12,param,s,i,cs)
              {var env=self_12[1 + _aqo_];
               if(cs)
                var
                 _aqB_=
                  function(l)
                   {var _aqD_=caml_call2(env[2],0,l);
                    return caml_call2(Stdlib[28],cst$16,_aqD_)},
                 _aqC_=caml_call3(GT[221],GT[159],_aqB_,cs),
                 c=caml_call2(Stdlib_Printf[4],_aC_,_aqC_);
               else
                var c=cst$17;
               return caml_call3(Stdlib_Printf[4],_aD_,i,c)},
             _aqr_,
             _aqt_];
          caml_call2(CamlinternalOO[11],_aqn_,_aqu_);
          var
           _aqv_=
            function(_aqw_)
             {var
               _aqx_=_aqw_[1],
               _aqy_=_aqx_[1],
               self=caml_call2(CamlinternalOO[24],0,_aqn_),
               _aqz_=_aqx_[3],
               _aqA_=caml_call1(GT[4],_aqx_[2]);
              caml_call4(_aqs_,_aqw_[2],self,_aqA_,_aqz_);
              self[1 + _aqo_] = _aqy_;
              return caml_call3(CamlinternalOO[26],0,self,_aqn_)};
          caml_call1(CamlinternalOO[17],_aqn_);
          _aq_[1] = _aqv_}
        return caml_call1
                (_aq_[1],[0,[0,[0,fa,fself],fa,fself],show_logic_t[4]])}
      return caml_call4(GT[3],_ao_,_aqm_,_aql_,x)}
    function _aE_(self_11,fa,fmt,l)
     {var
       _aqj_=caml_call2(Stdlib_Format[133],_aF_,fa),
       _aqk_=caml_call3(self_11[1][1 + _at_],self_11,_aqj_,l);
      return caml_call3(Stdlib_Format[129],fmt,_aG_,_aqk_)}
    function _aH_(self_11)
     {var _aqi_=_ao_[2];
      return caml_call1(caml_get_public_method(_aqi_,76555601,3),_aqi_)}
    function _aI_(self_11)
     {var _aqh_=_ao_[2];
      return caml_call1(caml_get_public_method(_aqh_,76555595,4),_aqh_)}
    function _aJ_(self_11)
     {var _aqg_=_ao_[2];
      return caml_call1(caml_get_public_method(_aqg_,57219237,5),_aqg_)}
    function _aK_(self_11)
     {var _aqf_=_ao_[2];
      return caml_call1(caml_get_public_method(_aqf_,22636,6),_aqf_)}
    function _aL_(self_11)
     {var _aqe_=_ao_[2];
      return caml_call1(caml_get_public_method(_aqe_,-988375701,7),_aqe_)}
    var
     _aM_=
      [0,
       _av_,
       function(self_11)
        {var _aqd_=_ao_[2];
         return caml_call1(caml_get_public_method(_aqd_,-999816043,8),_aqd_)},
       _au_,
       _aL_,
       _az_,
       _aK_,
       _aA_,
       _aJ_,
       _ax_,
       _aI_,
       _aw_,
       _aH_,
       _ay_,
       _aE_,
       _at_,
       _aB_];
    caml_call2(CamlinternalOO[11],_ar_,_aM_);
    caml_call1(CamlinternalOO[17],_ar_);
    var
     _aN_=caml_call2(CamlinternalOO[24],0,_ar_),
     logic=[0,_ao_[1],_aN_,_ap_],
     Not_a_value=[248,cst_OCanren_Logic_Not_a_value,caml_fresh_oo_id(0)];
    function to_logic(x){return [1,x]}
    function from_logic(param)
     {if(0 === param[0])throw Not_a_value;var x=param[1];return x}
    function symbol$2(_aqc_){return _aqc_}
    function reify$2(env,t)
     {var match=var$0(t);
      if(! match)return [1,t];
      var v=match[1];
      function _aqa_(_aqb_){return reify$2(env,_aqb_)}
      var match$0=caml_call2(_o_[7],_aqa_,v),cs=match$0[2],i=match$0[1];
      return [0,i,cs]}
    function prj_exn(env,t)
     {var match=var$0(t);if(match)throw Not_a_value;return t}
    function prj(onvar,env,t)
     {var match=reify$2(env,t);
      if(0 === match[0]){var v=match[1];return caml_call1(onvar,v)}
      var x=match[1];
      return x}
    function compose(r$0,r,env,a)
     {return caml_call2(r,env,caml_call2(r$0,env,a))}
    function fmap$0(f,r,env,a){return caml_call1(f,caml_call2(r,env,a))}
    function fcomap(f,r,env,a){return caml_call2(r,env,caml_call1(f,a))}
    function fix(f,env,eta)
     {return caml_call3
              (f,function(_ap__,_ap$_){return fix(f,_ap__,_ap$_)},env,eta)}
    function rework(fv,fdeq,x)
     {function _ap5_(x)
       {if(0 === x[0])
         {var
           xs=x[2],
           v=x[1],
           _ap6_=function(diseq){return [0,v,diseq]},
           _ap7_=caml_call2(_p_[7],fdeq,xs);
          return caml_call2(_p_[8][2],_ap7_,_ap6_)}
        var t=x[1];
        function _ap8_(inner){return [1,inner]}
        var _ap9_=caml_call1(fv,caml_call1(_p_[1],t));
        return caml_call2(_p_[8][2],_ap9_,_ap8_)}
      return caml_call2(_p_[8][1],x,_ap5_)}
    function zed(f,x)
     {return caml_call2(f,function(_ap4_){return zed(f,_ap4_)},x)}
    var _aO_=[0,0,0,0];
    function make_rr(env,x)
     {if(! _aO_[1])
       {var
         _apU_=caml_call1(CamlinternalOO[16],_A_),
         _apV_=caml_call2(CamlinternalOO[3],_apU_,cst$18),
         _apW_=caml_call2(CamlinternalOO[8],_apU_,_A_),
         _apX_=_apW_[1],
         _apY_=_apW_[2],
         _apZ_=
          function(self_13,reifier)
           {var env=self_13[1 + _apV_],a=env[2],env$0=env[1];
            return caml_call2(reifier,env$0,a)},
         _ap0_=
          [0,
           _apY_,
           function(self_13)
            {var env=self_13[1 + _apV_];return is_open(env[1],env[2])},
           _apX_,
           _apZ_];
        caml_call2(CamlinternalOO[11],_apU_,_ap0_);
        var
         _ap1_=
          function(_ap2_)
           {var _ap3_=caml_call2(CamlinternalOO[24],0,_apU_);
            _ap3_[1 + _apV_] = _ap2_;
            return _ap3_};
        caml_call1(CamlinternalOO[17],_apU_);
        _aO_[1] = _ap1_}
      return caml_call1(_aO_[1],[0,env,x])}
    function inji(_apT_){return _apT_}
    var
     Reifier=[0,reify$2,prj_exn,prj,compose,fmap$0,fcomap,fix,rework,zed],
     OCanren_Logic=
      [0,
       logic_t,
       gcata_logic,
       fmt_logic_t,
       fmt_logic,
       foldr_logic_t,
       foldr_logic,
       foldl_logic_t,
       foldl_logic,
       compare_logic_t,
       compare_logic,
       eq_logic_t,
       eq_logic,
       html_logic_t,
       html_logic,
       gmap_logic_t,
       gmap_logic,
       show_logic_t,
       show_logic,
       logic,
       to_logic,
       from_logic,
       Reifier,
       symbol$2,
       inji,
       symbol$2,
       prj_exn,
       reify$2,
       Not_a_value,
       make_rr];
    caml_register_global(364,OCanren_Logic,"OCanren__Logic");
    var nil=0;
    function single(x){return [0,x,0]}
    function cons(x,s){return [0,x,s]}
    function from_fun(zz){return [1,zz]}
    function suspend(is_ready,f){return [2,[0,[0,is_ready,f],0]]}
    function of_list$1(param)
     {if(! param)return 0;
      var xs=param[2],x=param[1];
      return [0,x,of_list$1(xs)]}
    function force(x)
     {if(typeof x !== "number" && 1 === x[0])
       {var zz=x[1];return caml_call1(zz,0)}
      return x}
    function mplus(xs,ys)
     {var xs$0=xs,ys$0=ys;
      for(;;)
       {if(typeof xs$0 === "number")return force(ys$0);
        switch(xs$0[0])
         {case 0:
           var xs$1=xs$0[2],x=xs$0[1];
           return [0,x,[1,function(param){return mplus(force(ys$0),xs$1)}]];
          case 1:return [1,function(param){return mplus(force(ys$0),xs$0)}];
          default:
           var ss=xs$0[1],xs$2=force(ys$0),match=unwrap_suspended(ss);
           if(typeof match !== "number" && 2 === match[0])
            {var _apS_=match[1];
             if(typeof xs$2 !== "number" && 2 === xs$2[0])
              {var ss$0=xs$2[1];return [2,caml_call2(Stdlib[37],_apS_,ss$0)]}
             var
              ys$1=[1,function(xs){return function(param){return xs}}(xs$0)],
              xs$0=xs$2,
              ys$0=ys$1;
             continue}
           var xs$0=match,ys$0=xs$2;
           continue}}}
    function unwrap_suspended(ss)
     {var prefix=0,param=ss;
      for(;;)
       {if(param)
         {var ss$0=param[2],s=param[1],zz=s[2],is_ready=s[1];
          if(! caml_call1(is_ready,0))
           {var prefix$0=[0,s,prefix],prefix=prefix$0,param=ss$0;continue}
          var
           _apO_=caml_call1(Stdlib_List[9],prefix),
           _apP_=[0,[0,[1,zz]],caml_call2(Stdlib[37],_apO_,ss$0)]}
        else
         var _apP_=[0,0,caml_call1(Stdlib_List[9],prefix)];
        var _apQ_=_apP_[1];
        if(! _apQ_){var ss$2=_apP_[2];return [2,ss$2]}
        var _apR_=_apQ_[1];
        if(! _apP_[2])return _apR_;
        var ss$1=_apP_[2];
        return mplus(force(_apR_),[2,ss$1])}}
    function bind$0(s,f)
     {var s$0=s;
      for(;;)
       {if(typeof s$0 === "number")return 0;
        switch(s$0[0])
         {case 0:
           var
            s$1=s$0[2],
            x=s$0[1],
            _apM_=[1,function(param){return bind$0(force(s$1),f)}];
           return mplus(caml_call1(f,x),_apM_);
          case 1:
           var zz=s$0[1];
           return [1,function(param){return bind$0(caml_call1(zz,0),f)}];
          default:
           var ss=s$0[1],s$2=unwrap_suspended(ss);
           if(typeof s$2 !== "number" && 2 === s$2[0])
            {var
              ss$0=s$2[1],
              helper=
               function(s)
                {var zz=s[2];
                 function _apN_(param){return bind$0(caml_call1(zz,0),f)}
                 return [0,s[1],_apN_]};
             return [2,caml_call2(Stdlib_List[19],helper,ss$0)]}
           var s$0=s$2;
           continue}}}
    function msplit(param)
     {var param$0=param;
      for(;;)
       {if(typeof param$0 === "number")return 0;
        switch(param$0[0])
         {case 0:var xs=param$0[2],x=param$0[1];return [0,[0,x,xs]];
          case 1:
           var zz=param$0[1],param$1=caml_call1(zz,0),param$0=param$1;
           continue;
          default:
           var ss=param$0[1],xs$0=unwrap_suspended(ss);
           if(typeof xs$0 !== "number" && 2 === xs$0[0])return 0;
           var param$0=xs$0;
           continue}}}
    function is_empty$1(s){var match=msplit(s);return match?0:1}
    function map$2(f,param)
     {if(typeof param === "number")return 0;
      switch(param[0])
       {case 0:
         var xs=param[2],x=param[1],_apK_=map$2(f,xs);
         return [0,caml_call1(f,x),_apK_];
        case 1:
         var zzz=param[1];
         return [1,function(param){return map$2(f,caml_call1(zzz,0))}];
        default:
         var
          ss=param[1],
          helper=
           function(s)
            {var zz=s[2];
             function _apL_(param){return map$2(f,caml_call1(zz,0))}
             return [0,s[1],_apL_]};
         return [2,caml_call2(Stdlib_List[19],helper,ss)]}}
    function mapi$0(f)
     {function helper(i,xs)
       {var match=msplit(xs);
        if(! match)return 0;
        var
         match$0=match[1],
         tl=match$0[2],
         h=match$0[1],
         _apJ_=[1,function(param){return helper(1 + i | 0,tl)}];
        return [0,caml_call2(f,i,h),_apJ_]}
      var _apH_=0;
      return function(_apI_){return helper(_apH_,_apI_)}}
    function iter$1(f,s)
     {var s$0=s;
      for(;;)
       {var match=msplit(s$0);
        if(! match)return 0;
        var match$0=match[1],s$1=match$0[2],x=match$0[1];
        caml_call1(f,x);
        var s$0=s$1}}
    function filter$0(p,s)
     {var match=msplit(s);
      if(! match)return 0;
      var match$0=match[1],x=match$0[1],s$0=match$0[2];
      if(caml_call1(p,x))
       return [0,x,[1,function(param){return filter$0(p,s$0)}]];
      var s$1=match$0[2];
      return [1,function(param){return filter$0(p,s$1)}]}
    function fold$1(f,acc,s)
     {var acc$0=acc,s$0=s;
      for(;;)
       {var match=msplit(s$0);
        if(! match)return acc$0;
        var
         match$0=match[1],
         s$1=match$0[2],
         x=match$0[1],
         acc$1=caml_call2(f,acc$0,x),
         acc$0=acc$1,
         s$0=s$1}}
    function zip(xs,ys)
     {var match=msplit(xs),match$0=msplit(ys);
      if(match)
       {if(match$0)
         {var
           _apG_=match$0[1],
           ys$0=_apG_[2],
           y=_apG_[1],
           match$1=match[1],
           xs$0=match$1[2],
           x=match$1[1];
          return [0,[0,x,y],zip(xs$0,ys$0)]}}
      else
       if(! match$0)return 0;
      return caml_call1(Stdlib[1],cst_OCanren_fatal_Stream_zip_s)}
    function hd(s)
     {var match=msplit(s);
      if(! match)return caml_call1(Stdlib[1],cst_OCanren_fatal_Stream_hd_em);
      var match$0=match[1],x=match$0[1];
      return x}
    function tl(s)
     {var match=msplit(s);
      if(! match)return 0;
      var match$0=match[1],xs=match$0[2];
      return xs}
    function retrieve(opt,s)
     {if(opt)var sth=opt[1],n=sth;else var n=-1;
      if(0 === n)return [0,0,s];
      var match=msplit(s);
      if(! match)return _aP_;
      var
       match$0=match[1],
       s$0=match$0[2],
       x=match$0[1],
       match$1=retrieve([0,n - 1 | 0],s$0),
       s$1=match$1[2],
       xs=match$1[1];
      return [0,[0,x,xs],s$1]}
    function take(n,s){return retrieve(n,s)[1]}
    var
     OCanren_Stream=
      [0,
       nil,
       single,
       cons,
       from_fun,
       suspend,
       of_list$1,
       is_empty$1,
       map$2,
       mapi$0,
       iter$1,
       filter$0,
       fold$1,
       zip,
       mplus,
       bind$0,
       retrieve,
       take,
       hd,
       tl];
    caml_register_global(365,OCanren_Stream,"OCanren__Stream");
    function unctr_term(param)
     {var t=param[2];
      function _apF_(x){return x}
      return map$0(function(v){return [0,v[1],v[2],v[3],v[4],v[5],0]},_apF_,t)}
    function lift(env,param)
     {var t=param[2],vartbl=caml_call1(VarTbl[1],31);
      function helper(x)
       {function _apx_(x){return x}
        return map$0
                (function(v)
                  {try
                    {var _apD_=caml_call2(VarTbl[7],vartbl,v),_apC_=_apD_}
                   catch(_apE_)
                    {_apE_ = caml_wrap_exception(_apE_);
                     if(_apE_ !== Stdlib[8])throw _apE_;
                     var init=fresh(_o_[2],env);
                     caml_call3(VarTbl[5],vartbl,v,init);
                     var
                      _apy_=v[6],
                      _apz_=function(x){return helper(x)},
                      _apA_=caml_call2(Stdlib_List[19],_apz_,_apy_),
                      _apB_=
                       caml_call1(caml_call1(Stdlib_List[56],compare$1),_apA_),
                      _apC_=[0,init[1],init[2],init[3],init[4],init[5],_apB_]}
                   return _apC_},
                 _apx_,
                 x)}
      return [0,env,helper(t)]}
    function equal$4(param,_apw_)
     {var t=_apw_[2],env=_apw_[1],t$0=param[2],env$0=param[1];
      if(! equal$2(env$0,env))
       caml_call1(Stdlib[2],cst_OCanren_fatal_Answer_check);
      return equal$1(t$0,t)}
    function hash$2(param){var t=param[2];return hash$0(t)}
    var Fail=[248,cst_OCanren_Core_Prunes_Fail,caml_fresh_oo_id(0)],empty$4=0;
    function check_last(map,env,subst)
     {try
       {var
         _apt_=caml_call1(Stdlib_List[5],map),
         match=_apt_[2],
         checker=match[2],
         reifier=match[1],
         term=_apt_[1],
         reified=caml_call2(reifier,env,apply(env,subst,term));
        if(1 - caml_call1(checker,reified))throw Fail;
        var _apu_=1;
        return _apu_}
      catch(_apv_)
       {_apv_ = caml_wrap_exception(_apv_);
        if(_apv_ === Stdlib[8])return 1;
        if(_apv_ === Fail)return 0;
        throw _apv_}}
    function recheck$2(ps,env,s)
     {try
       {var
         _app_=
          function(param)
           {var
             match=param[2],
             checker=match[2],
             reifier=match[1],
             k=param[1],
             reified=caml_call2(reifier,env,apply(env,s,k)),
             _aps_=1 - caml_call1(checker,reified);
            if(_aps_)throw Fail;
            return _aps_};
        caml_call1(caml_call1(Stdlib_List[17],_app_),ps);
        var _apq_=1;
        return _apq_}
      catch(_apr_)
       {_apr_ = caml_wrap_exception(_apr_);
        if(_apr_ === Fail)return 0;
        throw _apr_}}
    var prunes_control=[0,0,10,11,0];
    function enable_skips(on){prunes_control[1] = on;return 0}
    function is_enabled(param){return prunes_control[1]}
    function reset_cur_counter(param){prunes_control[2] = 0;return 0}
    function reset(param){reset_cur_counter(0);prunes_control[4] = 0;return 0}
    function set_max_skips(n)
     {if(0 >= n)throw [0,Assert_failure,_aQ_];
      prunes_control[3] = n;
      return reset(0)}
    function skipped_prunes(param){return prunes_control[4]}
    function incr(param)
     {var
       _apn_=is_enabled(0),
       _apo_=
        _apn_
         ?(prunes_control[2]
           =
           1
           +
           prunes_control[2]
           |
           0,
           prunes_control[4]
           =
           1
           +
           prunes_control[4]
           |
           0,
           0)
         :_apn_;
      return _apo_}
    function is_exceeded(param)
     {var _apl_=1 - is_enabled(0);
      if(_apl_)
       var _apm_=_apl_;
      else
       var ans=prunes_control[3] <= prunes_control[2]?1:0,_apm_=ans;
      return _apm_}
    function new_scope$0(init)
     {var _apk_=caml_call1(_o_[3],0);
      return [0,init[1],init[2],init[3],init[4],_apk_]}
    function unify$0(x,y,st)
     {var
       scope=st[5],
       ctrs=st[3],
       subst=st[2],
       env=st[1],
       match=unify(0,[0,scope],env,subst,x,y);
      if(! match)return 0;
      var
       match$0=match[1],
       subst$0=match$0[2],
       prefix=match$0[1],
       match$1=recheck$1(env,subst$0,ctrs,prefix);
      if(! match$1)return 0;
      var ctrs$0=match$1[1],next_state=[0,st[1],subst$0,ctrs$0,st[4],st[5]];
      if(is_exceeded(0))
       {reset_cur_counter(0);
        var match$2=recheck$2(next_state[4],env,subst$0);
        return match$2?[0,next_state]:0}
      incr(0);
      return [0,next_state]}
    function reify$3(x,param)
     {var
       ctrs=param[3],
       subst=param[2],
       env=param[1],
       answ=reify$0(env,subst,x),
       diseqs=reify$1(env,subst,ctrs,x);
      if(! diseqs)return [0,[0,env,answ],0];
      function _apc_(diseq)
       {function helper(forbidden,t)
         {function _apd_(x){return x}
          return map$0
                  (function(init)
                    {if(caml_call2(Stdlib_List[36],init[3],forbidden))
                      var v=init;
                     else
                      var
                       _ape_=caml_call2(_z_[1],diseq,init),
                       _apf_=
                        function(dt)
                         {var match=var$1(env,dt);
                          if(! match)return 1;
                          var u=match[1];
                          return 1 - caml_call2(Stdlib_List[36],u[3],forbidden)},
                       _apg_=caml_call1(caml_call1(Stdlib_List[41],_apf_),_ape_),
                       _aph_=function(x){return helper([0,init[3],forbidden],x)},
                       _api_=caml_call1(caml_call1(Stdlib_List[19],_aph_),_apg_),
                       _apj_=
                        caml_call1(caml_call1(Stdlib_List[56],compare$1),_api_),
                       v=[0,init[1],init[2],init[3],init[4],init[5],_apj_];
                     return v},
                   _apd_,
                   t)}
        return [0,env,helper(0,answ)]}
      return caml_call2(Stdlib_ListLabels[19],_apc_,diseqs)}
    function success(st){return single(st)}
    function failure(param){return nil}
    function only_head(g,st)
     {var stream=caml_call1(g,st);
      try
       {var _apa_=single(hd(stream));return _apa_}
      catch(_apb_)
       {_apb_ = caml_wrap_exception(_apb_);
        if(_apb_[1] === Stdlib[7])return nil;
        throw _apb_}}
    function unify$1(x,y,st)
     {var match=unify$0(x,y,st);
      if(! match)return failure(st);
      var st$0=match[1];
      return success(st$0)}
    function diseq(x,y,st)
     {var ctrs=st[3],subst=st[2],env=st[1],match=add$1(env,subst,ctrs,x,y);
      if(match)
       var
        ctrs$0=match[1],
        match$0=recheck$2(st[4],env,subst),
        match$1=match$0?[0,[0,st[1],st[2],ctrs$0,st[4],st[5]]]:0;
      else
       var match$1=0;
      if(! match$1)return failure(st);
      var st$0=match$1[1];
      return success(st$0)}
    function delay(g,st)
     {return [1,function(param){return caml_call2(g,0,st)}]}
    function symbol$3(f,g,st){return bind$0(caml_call1(f,st),g)}
    function debug_var(v,reifier,call,st)
     {var _ao__=reify$3(v,st);
      function _ao$_(answ){return caml_call2(reifier,answ[2],answ[1])}
      var xs=caml_call2(Stdlib_List[19],_ao$_,_ao__);
      return caml_call2(call,xs,st)}
    function structural(term,rr,k,st)
     {var
       new_item=[0,rr,k],
       new_constraints=[0,[0,term,new_item],st[4]],
       match=check_last(new_constraints,st[1],st[2]);
      return match
              ?success([0,st[1],st[2],st[3],new_constraints,st[5]])
              :failure(st)}
    function symbol$4(gs,st)
     {if(! gs)throw [0,Assert_failure,_aR_];
      var _ao7_=gs[1];
      if(! gs[2])return caml_call1(_ao7_,st);
      var tl=gs[2],_ao8_=caml_call1(_ao7_,st);
      function _ao9_(acc,x){return bind$0(acc,x)}
      return caml_call3(Stdlib_List[25],_ao9_,_ao8_,tl)}
    function disj_base(f,g,st)
     {var _ao6_=[1,function(param){return caml_call1(g,st)}];
      return mplus(caml_call1(f,st),_ao6_)}
    function symbol$5(f,g,st)
     {var st$0=new_scope$0(st);
      return [1,function(param){return disj_base(f,g,st$0)}]}
    function conde(gs,st)
     {var st$0=new_scope$0(st);
      function inner(param)
       {if(! param)return caml_call1(Stdlib[2],cst_Wrong_argument_of);
        var _ao3_=param[1];
        if(! param[2])return _ao3_;
        var gs=param[2],_ao4_=inner(gs);
        return function(_ao5_){return disj_base(_ao3_,_ao4_,_ao5_)}}
      var g=inner(gs);
      return [1,function(param){return caml_call1(g,st$0)}]}
    function call_fresh(f,st)
     {var scope=st[5],env=st[1],x=fresh(scope,env);return caml_call2(f,x,st)}
    function wc$0(f,st)
     {var scope=st[5],env=st[1],x=wc(scope,env);return caml_call2(f,x,st)}
    function succ(prev,f)
     {function _ao1_(x){return caml_call1(prev,caml_call1(f,x))}
      return function(_ao2_){return call_fresh(_ao1_,_ao2_)}}
    function zero(f){return f}
    function one(f){return succ(zero,f)}
    function two(f){return succ(one,f)}
    function three(f){return succ(two,f)}
    function four(f){return succ(three,f)}
    function five(f){return succ(four,f)}
    var Fresh=[0,succ,zero,one,two,three,four,five,one,two,three,four,five];
    function ext2(x){return x}
    function one$0(_ao0_,_aoZ_){return caml_call1(_ao0_,_aoZ_)}
    function one$1(_aoY_,_aoX_){return caml_call1(_aoY_,_aoX_)}
    function succ$0(k,f,param)
     {var y=param[2],x=param[1];return caml_call2(k,caml_call1(f,x),y)}
    function zero$0(f){return f}
    function succ$1(prev,f)
     {function _aoV_(logic,st)
       {return [0,logic,caml_call2(prev,caml_call1(f,logic),st)]}
      return function(_aoW_){return call_fresh(_aoV_,_aoW_)}}
    function one$2(x,env){return make_rr(env,x)}
    var NUMERAL_TYPS=[0];
    function succ$2(n,param)
     {var
       match=caml_call1(n,0),
       uncurr=match[4],
       ext=match[3],
       app=match[2],
       adder=match[1];
      function _aoO_(_aoT_,_aoU_){return succ$0(uncurr,_aoT_,_aoU_)}
      function _aoP_(param)
       {var
         z=param[2],
         a=param[1],
         match=caml_call1(ext,z),
         base=match[2],
         foo=match[1];
        return [0,[0,a,foo],base]}
      function _aoQ_(param,env)
       {var xs=param[2],x=param[1],_aoS_=caml_call2(app,xs,env);
        return [0,make_rr(env,x),_aoS_]}
      return [0,function(_aoR_){return succ$1(adder,_aoR_)},_aoQ_,_aoP_,_aoO_]}
    function q(param)
     {return [0,function(_aoN_){return succ$1(zero$0,_aoN_)},one$2,ext2,one$1]}
    function qr(param){return succ$2(q,0)}
    function qrs(param){return succ$2(qr,0)}
    function qrst(param){return succ$2(qrs,0)}
    function run(n,g,h)
     {var
       match=caml_call1(n,0),
       uncurr=match[4],
       ext=match[3],
       reifier=match[2],
       adder=match[1],
       _aoJ_=caml_call1(_o_[3],0),
       _aoK_=[0,empty$0(0),_r_,empty$3,empty$4,_aoJ_],
       match$0=caml_call1(ext,caml_call1(caml_call1(adder,g),_aoK_)),
       stream=match$0[2],
       args=match$0[1],
       _aoL_=bind$0(stream,function(st){return of_list$1(reify$3(args,st))});
      return map$2
              (function(answ)
                {var _aoM_=caml_call2(reifier,answ[2],answ[1]);
                 return caml_call1(caml_call1(uncurr,h),_aoM_)},
               _aoL_)}
    var H=caml_call1(Stdlib_Hashtbl[26],[0,equal$4,hash$2]);
    function create$0(param){return [0,[0,0],caml_call1(H[1],11)]}
    function contains(param,answ)
     {var tbl=param[2];
      try
       {caml_call2(H[7],tbl,answ);var _aoH_=1;return _aoH_}
      catch(_aoI_)
       {_aoI_ = caml_wrap_exception(_aoI_);
        if(_aoI_ === Stdlib[8])return 0;
        throw _aoI_}}
    function consume(param,args)
     {var cache=param[1];
      return function(st)
       {var env=st[1],st$0=new_scope$0(st);
        function helper(start,curr,seen)
         {var curr$0=curr;
          for(;;)
           {if(curr$0 === seen)
             {var is_ready=function(param){return start !== cache[1]?1:0};
              return suspend
                      (is_ready,
                       function(param){return helper(cache[1],cache[1],start)})}
            var
             curr$1=caml_call1(Stdlib_List[6],curr$0),
             answ=lift(env,caml_call1(Stdlib_List[5],curr$0)),
             match=unify$0(args,unctr_term(answ),st$0);
            if(! match){var curr$0=curr$1;continue}
            var
             st=match[1],
             ctrs=st[3],
             subst=st[2],
             t=answ[2],
             env$0=answ[1],
             helper$1=
              function(env)
               {function helper(acc,x)
                 {function _aoE_(acc,param){return acc}
                  return fold$0
                          (function(acc,var$0)
                            {var _aoF_=var$0[6];
                             function _aoG_(acc,ctr_term)
                              {var
                                var$1=[0,var$0[1],var$0[2],var$0[3],var$0[4],var$0[5],0],
                                term=unctr_term([0,env,ctr_term]),
                                acc$0=[0,[0,var$1,term],acc];
                               return helper(acc$0,ctr_term)}
                             return caml_call3(Stdlib_ListLabels[25],_aoG_,acc,_aoF_)},
                           _aoE_,
                           acc,
                           x)}
                return helper},
             helper$0=helper$1(env$0),
             _aoz_=helper$0(0,t),
             _aoA_=
              function(acc,param)
               {var
                 term=param[2],
                 var$0=param[1],
                 match=add$1(env,_r_,acc,var$0,term);
                if(! match)throw [0,Assert_failure,_aS_];
                var acc$0=match[1];
                return acc$0},
             ctrs$0=caml_call3(Stdlib_ListLabels[25],_aoA_,empty$3,_aoz_),
             match$0=recheck$1(env,subst,ctrs$0,split$0(subst));
            if(match$0)
             {var
               ctrs$1=match$0[1],
               _aoB_=st[5],
               _aoC_=st[4],
               _aoD_=caml_call2(merge_disjoint$1(env,subst),ctrs,ctrs$1),
               st$1=[0,st[1],st[2],_aoD_,_aoC_,_aoB_];
              return [0,
                      st$1,
                      [1,function(param){return helper(start,curr$1,seen)}]]}
            var curr$0=curr$1}}
        return helper(cache[1],cache[1],0)}}
    function make_answ(args,st)
     {var match=reify$3(args,st);
      if(match && ! match[2])
       {var answ=match[1],env=create(_o_[1]);return lift(env,answ)}
      return caml_call1(Stdlib[2],cst_should_not_happen)}
    function create$1(param){return caml_call1(H[1],1031)}
    function call(tbl,g,args)
     {return function(st)
       {var
         ctrs=st[3],
         env=st[1],
         abs_st=[0,st[1],st[2],empty$3,st[4],st[5]],
         key=make_answ(args,abs_st);
        try
         {var _aou_=caml_call1(consume(caml_call2(H[7],tbl,key),args),st);
          return _aou_}
        catch(_aov_)
         {_aov_ = caml_wrap_exception(_aov_);
          if(_aov_ !== Stdlib[8])throw _aov_;
          var param=create$0(0);
          caml_call3(H[5],tbl,key,param);
          var
           hook=
            function(init)
             {var ctrs$0=init[3],subst=init[2],answ=make_answ(args,init);
              if(contains(param,answ))return failure(0);
              var tbl=param[2],cache=param[1];
              cache[1] = caml_call2(Stdlib_List[4],answ,cache[1]);
              caml_call3(H[5],tbl,answ,0);
              var match=recheck$1(env,subst,ctrs,split$0(subst));
              if(! match)return failure(0);
              var
               ctrs$1=match[1],
               _aow_=init[5],
               _aox_=init[4],
               _aoy_=caml_call2(merge_disjoint$1(env,subst),ctrs$1,ctrs$0);
              return success([0,init[1],init[2],_aoy_,_aox_,_aow_])};
          return symbol$3(caml_call1(g,args),hook,abs_st)}}}
    function succ$3(n,param)
     {var match=caml_call1(n,0),uncurrier=match[2],currier=match[1];
      function _aor_(_aos_,_aot_){return succ$0(uncurrier,_aos_,_aot_)}
      return [0,
              function(f,x)
               {return caml_call1
                        (currier,function(tup){return caml_call1(f,[0,x,tup])})},
              _aor_]}
    function one$3(param){return [0,one$0,one$1]}
    function two$0(param){return succ$3(one$3,0)}
    function three$0(param){return succ$3(two$0,0)}
    function four$0(param){return succ$3(three$0,0)}
    function five$0(param){return succ$3(four$0,0)}
    function tabled(n,g)
     {var
       tbl=create$1(0),
       match=caml_call1(n,0),
       uncurrier=match[2],
       currier=match[1],
       _aop_=caml_call1(uncurrier,g);
      return caml_call1(currier,function(_aoq_){return call(tbl,_aop_,_aoq_)})}
    function tabledrec(n,g_norec)
     {var
       tbl=create$1(0),
       match=caml_call1(n,0),
       uncurrier=match[2],
       currier=match[1],
       g=[0,function(param){throw [0,Assert_failure,_aT_]}];
      function g_rec(args)
       {return caml_call2(uncurrier,caml_call1(g_norec,g[1]),args)}
      function g_tabled(_aoo_){return call(tbl,g_rec,_aoo_)}
      g[1] = caml_call1(currier,g_tabled);
      return g[1]}
    var
     Tabling=[0,succ$3,one$3,two$0,three$0,four$0,five$0,tabled,tabledrec],
     PrunesControl=
      [0,reset,enable_skips,set_max_skips,incr,is_exceeded,skipped_prunes],
     State=[0],
     include$0=
      [0,
       State,
       call_fresh,
       wc$0,
       unify$1,
       unify$1,
       diseq,
       diseq,
       structural,
       symbol$3,
       symbol$3,
       symbol$5,
       symbol$5,
       conde,
       conde,
       symbol$4,
       success,
       failure,
       Fresh,
       delay,
       run,
       succ$2,
       NUMERAL_TYPS,
       q,
       qr,
       qrs,
       qrst,
       q,
       qr,
       qrs,
       qrst,
       Tabling,
       debug_var,
       only_head,
       PrunesControl];
    caml_register_global(366,include$0,"OCanren__Core");
    var t_t=[],_aZ_=0,_a0_=0;
    caml_update_dummy
     (t_t,
      [0,
       0,
       function(_aol_)
        {caml_call2(CamlinternalOO[7],_aol_,cst_c_T);
         return function(_aon_,_aom_)
          {return caml_call2(CamlinternalOO[24],_aom_,_aol_)}},
       _a0_,
       _aZ_]);
    function gcata_t(tr,inh,subj)
     {return caml_call3(caml_get_public_method(tr,4944440,9),tr,inh,subj)}
    function _a1_(_an9_)
     {var
       _an__=caml_call2(CamlinternalOO[3],_an9_,cst$19),
       _an$_=caml_call2(CamlinternalOO[3],_an9_,cst$20),
       _aoa_=caml_call2(CamlinternalOO[3],_an9_,cst$21),
       _aob_=caml_call2(CamlinternalOO[7],_an9_,cst_c_T$0),
       _aoc_=caml_call6(CamlinternalOO[18],_an9_,0,shared$0,0,t_t,1)[1];
      function _aod_(self_2,inh_004,param)
       {var x_007=param[3],x_006=param[2],x_005=param[1];
        return caml_call8
                (Stdlib_Format[129],
                 inh_004,
                 _a2_,
                 self_2[1 + _an__],
                 x_005,
                 self_2[1 + _an$_],
                 x_006,
                 self_2[1 + _aoa_],
                 x_007)}
      caml_call3(CamlinternalOO[10],_an9_,_aob_,_aod_);
      return function(_aoj_,_aoi_,_aoh_,_aog_,_aof_,_aoe_)
       {var _aok_=caml_call2(CamlinternalOO[24],_aoi_,_an9_);
        _aok_[1 + _aoa_] = _aof_;
        _aok_[1 + _an$_] = _aog_;
        _aok_[1 + _an__] = _aoh_;
        caml_call1(_aoc_,_aok_);
        return caml_call3(CamlinternalOO[26],_aoi_,_aok_,_an9_)}}
    var fmt_t_t=caml_call2(CamlinternalOO[19],shared$0,_a1_);
    function fmt_t(fa,fb,fc,inh0,subj)
     {var _an8_=caml_call4(fmt_t_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_t,_an8_,inh0,subj)}
    function _a3_(_anS_)
     {var
       _anT_=caml_call2(CamlinternalOO[3],_anS_,cst$22),
       _anU_=caml_call2(CamlinternalOO[3],_anS_,cst$23),
       _anV_=caml_call2(CamlinternalOO[3],_anS_,cst$24),
       _anW_=caml_call2(CamlinternalOO[7],_anS_,cst_c_T$1),
       _anX_=caml_call6(CamlinternalOO[18],_anS_,0,shared$0,0,t_t,1)[1];
      function _anY_(self_3,inh_008,param)
       {var
         x_011=param[3],
         x_010=param[2],
         x_009=param[1],
         _an6_=caml_call2(self_3[1 + _anV_],inh_008,x_011),
         _an7_=caml_call2(self_3[1 + _anU_],_an6_,x_010);
        return caml_call2(self_3[1 + _anT_],_an7_,x_009)}
      caml_call3(CamlinternalOO[10],_anS_,_anW_,_anY_);
      return function(_an4_,_an3_,_an2_,_an1_,_an0_,_anZ_)
       {var _an5_=caml_call2(CamlinternalOO[24],_an3_,_anS_);
        _an5_[1 + _anV_] = _an0_;
        _an5_[1 + _anU_] = _an1_;
        _an5_[1 + _anT_] = _an2_;
        caml_call1(_anX_,_an5_);
        return caml_call3(CamlinternalOO[26],_an3_,_an5_,_anS_)}}
    var foldr_t_t=caml_call2(CamlinternalOO[19],shared$0,_a3_);
    function foldr_t(fa,fb,fc,inh0,subj)
     {var _anR_=caml_call4(foldr_t_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_t,_anR_,inh0,subj)}
    function _a4_(_anB_)
     {var
       _anC_=caml_call2(CamlinternalOO[3],_anB_,cst$25),
       _anD_=caml_call2(CamlinternalOO[3],_anB_,cst$26),
       _anE_=caml_call2(CamlinternalOO[3],_anB_,cst$27),
       _anF_=caml_call2(CamlinternalOO[7],_anB_,cst_c_T$2),
       _anG_=caml_call6(CamlinternalOO[18],_anB_,0,shared$0,0,t_t,1)[1];
      function _anH_(self_4,inh_012,param)
       {var
         x_015=param[3],
         x_014=param[2],
         x_013=param[1],
         _anP_=caml_call2(self_4[1 + _anC_],inh_012,x_013),
         _anQ_=caml_call2(self_4[1 + _anD_],_anP_,x_014);
        return caml_call2(self_4[1 + _anE_],_anQ_,x_015)}
      caml_call3(CamlinternalOO[10],_anB_,_anF_,_anH_);
      return function(_anN_,_anM_,_anL_,_anK_,_anJ_,_anI_)
       {var _anO_=caml_call2(CamlinternalOO[24],_anM_,_anB_);
        _anO_[1 + _anE_] = _anJ_;
        _anO_[1 + _anD_] = _anK_;
        _anO_[1 + _anC_] = _anL_;
        caml_call1(_anG_,_anO_);
        return caml_call3(CamlinternalOO[26],_anM_,_anO_,_anB_)}}
    var foldl_t_t=caml_call2(CamlinternalOO[19],shared$0,_a4_);
    function foldl_t(fa,fb,fc,inh0,subj)
     {var _anA_=caml_call4(foldl_t_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_t,_anA_,inh0,subj)}
    function _a5_(_anh_)
     {var
       _ani_=caml_call2(CamlinternalOO[3],_anh_,cst$28),
       _anj_=caml_call2(CamlinternalOO[3],_anh_,cst$29),
       _ank_=caml_call2(CamlinternalOO[3],_anh_,cst$30),
       _anl_=caml_call2(CamlinternalOO[7],_anh_,cst_c_T$3),
       _anm_=caml_call6(CamlinternalOO[18],_anh_,0,shared$0,0,t_t,1)[1];
      function _ann_(self_5,inh_016,param)
       {var
         x_019=param[3],
         x_018=param[2],
         x_017=param[1],
         x_022=inh_016[3],
         x_021=inh_016[2],
         x_020=inh_016[1];
        function _anv_(param)
         {return caml_call2(self_5[1 + _ank_],x_022,x_019)}
        function _anw_(param)
         {return caml_call2(self_5[1 + _anj_],x_021,x_018)}
        function _anx_(param)
         {return caml_call2(self_5[1 + _ani_],x_020,x_017)}
        var
         _any_=caml_call2(GT[6],1,_anx_),
         _anz_=caml_call2(GT[6],_any_,_anw_);
        return caml_call2(GT[6],_anz_,_anv_)}
      caml_call3(CamlinternalOO[10],_anh_,_anl_,_ann_);
      return function(_ant_,_ans_,_anr_,_anq_,_anp_,_ano_)
       {var _anu_=caml_call2(CamlinternalOO[24],_ans_,_anh_);
        _anu_[1 + _ank_] = _anp_;
        _anu_[1 + _anj_] = _anq_;
        _anu_[1 + _ani_] = _anr_;
        caml_call1(_anm_,_anu_);
        return caml_call3(CamlinternalOO[26],_ans_,_anu_,_anh_)}}
    var compare_t_t=caml_call2(CamlinternalOO[19],shared$0,_a5_);
    function compare_t(fa,fb,fc,inh0,subj)
     {var _ang_=caml_call4(compare_t_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_t,_ang_,inh0,subj)}
    function _a6_(_am2_)
     {var
       _am3_=caml_call2(CamlinternalOO[3],_am2_,cst$31),
       _am4_=caml_call2(CamlinternalOO[3],_am2_,cst$32),
       _am5_=caml_call2(CamlinternalOO[3],_am2_,cst$33),
       _am6_=caml_call2(CamlinternalOO[7],_am2_,cst_c_T$4),
       _am7_=caml_call6(CamlinternalOO[18],_am2_,0,shared$0,0,t_t,1)[1];
      function _am8_(self_6,inh_023,param)
       {var
         x_026=param[3],
         x_025=param[2],
         x_024=param[1],
         x_029=inh_023[3],
         x_028=inh_023[2],
         x_027=inh_023[1],
         _ane_=caml_call2(self_6[1 + _am3_],x_027,x_024),
         _anf_=_ane_?caml_call2(self_6[1 + _am4_],x_028,x_025):_ane_;
        return _anf_?caml_call2(self_6[1 + _am5_],x_029,x_026):_anf_}
      caml_call3(CamlinternalOO[10],_am2_,_am6_,_am8_);
      return function(_anc_,_anb_,_ana_,_am$_,_am__,_am9_)
       {var _and_=caml_call2(CamlinternalOO[24],_anb_,_am2_);
        _and_[1 + _am5_] = _am__;
        _and_[1 + _am4_] = _am$_;
        _and_[1 + _am3_] = _ana_;
        caml_call1(_am7_,_and_);
        return caml_call3(CamlinternalOO[26],_anb_,_and_,_am2_)}}
    var eq_t_t=caml_call2(CamlinternalOO[19],shared$0,_a6_);
    function eq_t(fa,fb,fc,inh0,subj)
     {var _am1_=caml_call4(eq_t_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_t,_am1_,inh0,subj)}
    function _a7_(_amK_)
     {var
       _amL_=caml_call2(CamlinternalOO[3],_amK_,cst$34),
       _amM_=caml_call2(CamlinternalOO[3],_amK_,cst$35),
       _amN_=caml_call2(CamlinternalOO[3],_amK_,cst$36),
       _amO_=caml_call2(CamlinternalOO[7],_amK_,cst_c_T$5),
       _amP_=caml_call6(CamlinternalOO[18],_amK_,0,shared$0,0,t_t,1)[1];
      function _amQ_(self_7,param,_amY_)
       {var
         x_032=_amY_[3],
         x_031=_amY_[2],
         x_030=_amY_[1],
         _amZ_=caml_call2(self_7[1 + _amN_],0,x_032),
         _am0_=caml_call2(self_7[1 + _amM_],0,x_031);
        return [0,caml_call2(self_7[1 + _amL_],0,x_030),_am0_,_amZ_]}
      caml_call3(CamlinternalOO[10],_amK_,_amO_,_amQ_);
      return function(_amW_,_amV_,_amU_,_amT_,_amS_,_amR_)
       {var _amX_=caml_call2(CamlinternalOO[24],_amV_,_amK_);
        _amX_[1 + _amN_] = _amS_;
        _amX_[1 + _amM_] = _amT_;
        _amX_[1 + _amL_] = _amU_;
        caml_call1(_amP_,_amX_);
        return caml_call3(CamlinternalOO[26],_amV_,_amX_,_amK_)}}
    var gmap_t_t=caml_call2(CamlinternalOO[19],shared$0,_a7_);
    function _a8_(fa,fb,fc,inh0,subj)
     {var _amJ_=caml_call4(gmap_t_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_t,_amJ_,inh0,subj)}
    function _a9_(_amr_)
     {var
       _ams_=caml_call2(CamlinternalOO[3],_amr_,cst$37),
       _amt_=caml_call2(CamlinternalOO[3],_amr_,cst$38),
       _amu_=caml_call2(CamlinternalOO[3],_amr_,cst$39),
       _amv_=caml_call2(CamlinternalOO[7],_amr_,cst_c_T$6),
       _amw_=caml_call6(CamlinternalOO[18],_amr_,0,shared$0,0,t_t,1)[1];
      function _amx_(self_8,param,_amF_)
       {var
         x_035=_amF_[3],
         x_034=_amF_[2],
         x_033=_amF_[1],
         _amG_=caml_call2(self_8[1 + _amu_],0,x_035),
         _amH_=caml_call2(self_8[1 + _amt_],0,x_034),
         _amI_=caml_call2(self_8[1 + _ams_],0,x_033);
        return caml_call4(Stdlib_Printf[4],_a__,_amI_,_amH_,_amG_)}
      caml_call3(CamlinternalOO[10],_amr_,_amv_,_amx_);
      return function(_amD_,_amC_,_amB_,_amA_,_amz_,_amy_)
       {var _amE_=caml_call2(CamlinternalOO[24],_amC_,_amr_);
        _amE_[1 + _amu_] = _amz_;
        _amE_[1 + _amt_] = _amA_;
        _amE_[1 + _ams_] = _amB_;
        caml_call1(_amw_,_amE_);
        return caml_call3(CamlinternalOO[26],_amC_,_amE_,_amr_)}}
    var show_t_t=caml_call2(CamlinternalOO[19],shared$0,_a9_);
    function _a$_(fa,fb,fc,inh0,subj)
     {var _amq_=caml_call4(show_t_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_t,_amq_,inh0,subj)}
    function _ba_(eta){return caml_call2(GT[2],gcata_t,eta)}
    var
     _bb_=caml_call1(CamlinternalOO[16],_aU_),
     _bc_=caml_call2(CamlinternalOO[8],_bb_,_aW_),
     _bd_=_bc_[1],
     _be_=_bc_[2],
     _bf_=_bc_[3],
     _bg_=_bc_[4],
     _bh_=_bc_[5],
     _bi_=_bc_[6],
     _bj_=_bc_[7];
    function _bk_(self_9,fa,fb,fc,subj)
     {var _amo_=caml_call1(GT[4],fc),_amp_=caml_call1(GT[4],fb);
      return _a$_(caml_call1(GT[4],fa),_amp_,_amo_,0,subj)}
    function _bl_(self_9,fa,fb,fc,subj)
     {var _amm_=caml_call1(GT[4],fc),_amn_=caml_call1(GT[4],fb);
      return _a8_(caml_call1(GT[4],fa),_amn_,_amm_,0,subj)}
    function _bm_(self_9){return eq_t}
    function _bn_(self_9){return compare_t}
    function _bo_(self_9){return foldl_t}
    function _bp_(self_9){return foldr_t}
    var
     _bq_=
      [0,
       _bh_,
       function(self_9){return fmt_t},
       _bf_,
       _bp_,
       _bg_,
       _bo_,
       _bj_,
       _bn_,
       _bi_,
       _bm_,
       _be_,
       _bl_,
       _bd_,
       _bk_];
    caml_call2(CamlinternalOO[11],_bb_,_bq_);
    caml_call1(CamlinternalOO[17],_bb_);
    var t=[0,gcata_t,caml_call2(CamlinternalOO[24],0,_bb_),_ba_];
    function gmap_t(fa,fb,fc,subj)
     {var _amk_=caml_call1(GT[4],fc),_aml_=caml_call1(GT[4],fb);
      return _a8_(caml_call1(GT[4],fa),_aml_,_amk_,0,subj)}
    function show_t(fa,fb,fc,subj)
     {var _ami_=caml_call1(GT[4],fc),_amj_=caml_call1(GT[4],fb);
      return _a$_(caml_call1(GT[4],fa),_amj_,_ami_,0,subj)}
    var ground_t=[],_br_=0,_bs_=0;
    caml_update_dummy
     (ground_t,
      [0,
       0,
       function(_amf_)
        {caml_call2(CamlinternalOO[7],_amf_,cst_c_GROUND);
         return function(_amh_,_amg_)
          {return caml_call2(CamlinternalOO[24],_amg_,_amf_)}},
       _bs_,
       _br_]);
    function gcata_ground(tr,inh,subj)
     {return caml_call3(caml_get_public_method(tr,-610008541,10),tr,inh,subj)}
    function _bt_(_al3_)
     {var
       _al4_=caml_call2(CamlinternalOO[3],_al3_,cst$40),
       _al5_=caml_call2(CamlinternalOO[3],_al3_,cst$41),
       _al6_=caml_call2(CamlinternalOO[3],_al3_,cst$42),
       _al7_=caml_call2(CamlinternalOO[7],_al3_,cst_c_GROUND$0),
       _al8_=caml_call6(CamlinternalOO[18],_al3_,0,_aV_,0,ground_t,1)[1];
      function _al9_(self_11,inh_039,param)
       {var x_042=param[3],x_041=param[2],x_040=param[1];
        return caml_call8
                (Stdlib_Format[129],
                 inh_039,
                 _bu_,
                 self_11[1 + _al4_],
                 x_040,
                 self_11[1 + _al5_],
                 x_041,
                 self_11[1 + _al6_],
                 x_042)}
      caml_call3(CamlinternalOO[10],_al3_,_al7_,_al9_);
      return function(_amd_,_amc_,_amb_,_ama_,_al$_,_al__)
       {var _ame_=caml_call2(CamlinternalOO[24],_amc_,_al3_);
        _ame_[1 + _al6_] = _al$_;
        _ame_[1 + _al5_] = _ama_;
        _ame_[1 + _al4_] = _amb_;
        caml_call1(_al8_,_ame_);
        return caml_call3(CamlinternalOO[26],_amc_,_ame_,_al3_)}}
    var fmt_ground_t=caml_call2(CamlinternalOO[19],_aV_,_bt_);
    function fmt_ground(fa,fb,fc,inh0,subj)
     {var _al2_=caml_call4(fmt_ground_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_ground,_al2_,inh0,subj)}
    function _bv_(_alM_)
     {var
       _alN_=caml_call2(CamlinternalOO[3],_alM_,cst$43),
       _alO_=caml_call2(CamlinternalOO[3],_alM_,cst$44),
       _alP_=caml_call2(CamlinternalOO[3],_alM_,cst$45),
       _alQ_=caml_call2(CamlinternalOO[7],_alM_,cst_c_GROUND$1),
       _alR_=caml_call6(CamlinternalOO[18],_alM_,0,_aV_,0,ground_t,1)[1];
      function _alS_(self_12,inh_043,param)
       {var
         x_046=param[3],
         x_045=param[2],
         x_044=param[1],
         _al0_=caml_call2(self_12[1 + _alP_],inh_043,x_046),
         _al1_=caml_call2(self_12[1 + _alO_],_al0_,x_045);
        return caml_call2(self_12[1 + _alN_],_al1_,x_044)}
      caml_call3(CamlinternalOO[10],_alM_,_alQ_,_alS_);
      return function(_alY_,_alX_,_alW_,_alV_,_alU_,_alT_)
       {var _alZ_=caml_call2(CamlinternalOO[24],_alX_,_alM_);
        _alZ_[1 + _alP_] = _alU_;
        _alZ_[1 + _alO_] = _alV_;
        _alZ_[1 + _alN_] = _alW_;
        caml_call1(_alR_,_alZ_);
        return caml_call3(CamlinternalOO[26],_alX_,_alZ_,_alM_)}}
    var foldr_ground_t=caml_call2(CamlinternalOO[19],_aV_,_bv_);
    function foldr_ground(fa,fb,fc,inh0,subj)
     {var _alL_=caml_call4(foldr_ground_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_ground,_alL_,inh0,subj)}
    function _bw_(_alv_)
     {var
       _alw_=caml_call2(CamlinternalOO[3],_alv_,cst$46),
       _alx_=caml_call2(CamlinternalOO[3],_alv_,cst$47),
       _aly_=caml_call2(CamlinternalOO[3],_alv_,cst$48),
       _alz_=caml_call2(CamlinternalOO[7],_alv_,cst_c_GROUND$2),
       _alA_=caml_call6(CamlinternalOO[18],_alv_,0,_aV_,0,ground_t,1)[1];
      function _alB_(self_13,inh_047,param)
       {var
         x_050=param[3],
         x_049=param[2],
         x_048=param[1],
         _alJ_=caml_call2(self_13[1 + _alw_],inh_047,x_048),
         _alK_=caml_call2(self_13[1 + _alx_],_alJ_,x_049);
        return caml_call2(self_13[1 + _aly_],_alK_,x_050)}
      caml_call3(CamlinternalOO[10],_alv_,_alz_,_alB_);
      return function(_alH_,_alG_,_alF_,_alE_,_alD_,_alC_)
       {var _alI_=caml_call2(CamlinternalOO[24],_alG_,_alv_);
        _alI_[1 + _aly_] = _alD_;
        _alI_[1 + _alx_] = _alE_;
        _alI_[1 + _alw_] = _alF_;
        caml_call1(_alA_,_alI_);
        return caml_call3(CamlinternalOO[26],_alG_,_alI_,_alv_)}}
    var foldl_ground_t=caml_call2(CamlinternalOO[19],_aV_,_bw_);
    function foldl_ground(fa,fb,fc,inh0,subj)
     {var _alu_=caml_call4(foldl_ground_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_ground,_alu_,inh0,subj)}
    function _bx_(_alb_)
     {var
       _alc_=caml_call2(CamlinternalOO[3],_alb_,cst$49),
       _ald_=caml_call2(CamlinternalOO[3],_alb_,cst$50),
       _ale_=caml_call2(CamlinternalOO[3],_alb_,cst$51),
       _alf_=caml_call2(CamlinternalOO[7],_alb_,cst_c_GROUND$3),
       _alg_=caml_call6(CamlinternalOO[18],_alb_,0,_aV_,0,ground_t,1)[1];
      function _alh_(self_14,inh_051,param)
       {var
         x_054=param[3],
         x_053=param[2],
         x_052=param[1],
         x_057=inh_051[3],
         x_056=inh_051[2],
         x_055=inh_051[1];
        function _alp_(param)
         {return caml_call2(self_14[1 + _ale_],x_057,x_054)}
        function _alq_(param)
         {return caml_call2(self_14[1 + _ald_],x_056,x_053)}
        function _alr_(param)
         {return caml_call2(self_14[1 + _alc_],x_055,x_052)}
        var
         _als_=caml_call2(GT[6],1,_alr_),
         _alt_=caml_call2(GT[6],_als_,_alq_);
        return caml_call2(GT[6],_alt_,_alp_)}
      caml_call3(CamlinternalOO[10],_alb_,_alf_,_alh_);
      return function(_aln_,_alm_,_all_,_alk_,_alj_,_ali_)
       {var _alo_=caml_call2(CamlinternalOO[24],_alm_,_alb_);
        _alo_[1 + _ale_] = _alj_;
        _alo_[1 + _ald_] = _alk_;
        _alo_[1 + _alc_] = _all_;
        caml_call1(_alg_,_alo_);
        return caml_call3(CamlinternalOO[26],_alm_,_alo_,_alb_)}}
    var compare_ground_t=caml_call2(CamlinternalOO[19],_aV_,_bx_);
    function compare_ground(fa,fb,fc,inh0,subj)
     {var _ala_=caml_call4(compare_ground_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_ground,_ala_,inh0,subj)}
    function _by_(_akW_)
     {var
       _akX_=caml_call2(CamlinternalOO[3],_akW_,cst$52),
       _akY_=caml_call2(CamlinternalOO[3],_akW_,cst$53),
       _akZ_=caml_call2(CamlinternalOO[3],_akW_,cst$54),
       _ak0_=caml_call2(CamlinternalOO[7],_akW_,cst_c_GROUND$4),
       _ak1_=caml_call6(CamlinternalOO[18],_akW_,0,_aV_,0,ground_t,1)[1];
      function _ak2_(self_15,inh_058,param)
       {var
         x_061=param[3],
         x_060=param[2],
         x_059=param[1],
         x_064=inh_058[3],
         x_063=inh_058[2],
         x_062=inh_058[1],
         _ak__=caml_call2(self_15[1 + _akX_],x_062,x_059),
         _ak$_=_ak__?caml_call2(self_15[1 + _akY_],x_063,x_060):_ak__;
        return _ak$_?caml_call2(self_15[1 + _akZ_],x_064,x_061):_ak$_}
      caml_call3(CamlinternalOO[10],_akW_,_ak0_,_ak2_);
      return function(_ak8_,_ak7_,_ak6_,_ak5_,_ak4_,_ak3_)
       {var _ak9_=caml_call2(CamlinternalOO[24],_ak7_,_akW_);
        _ak9_[1 + _akZ_] = _ak4_;
        _ak9_[1 + _akY_] = _ak5_;
        _ak9_[1 + _akX_] = _ak6_;
        caml_call1(_ak1_,_ak9_);
        return caml_call3(CamlinternalOO[26],_ak7_,_ak9_,_akW_)}}
    var eq_ground_t=caml_call2(CamlinternalOO[19],_aV_,_by_);
    function eq_ground(fa,fb,fc,inh0,subj)
     {var _akV_=caml_call4(eq_ground_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_ground,_akV_,inh0,subj)}
    function _bz_(_akE_)
     {var
       _akF_=caml_call2(CamlinternalOO[3],_akE_,cst$55),
       _akG_=caml_call2(CamlinternalOO[3],_akE_,cst$56),
       _akH_=caml_call2(CamlinternalOO[3],_akE_,cst$57),
       _akI_=caml_call2(CamlinternalOO[7],_akE_,cst_c_GROUND$5),
       _akJ_=caml_call6(CamlinternalOO[18],_akE_,0,_aV_,0,ground_t,1)[1];
      function _akK_(self_16,param,_akS_)
       {var
         x_067=_akS_[3],
         x_066=_akS_[2],
         x_065=_akS_[1],
         _akT_=caml_call2(self_16[1 + _akH_],0,x_067),
         _akU_=caml_call2(self_16[1 + _akG_],0,x_066);
        return [0,caml_call2(self_16[1 + _akF_],0,x_065),_akU_,_akT_]}
      caml_call3(CamlinternalOO[10],_akE_,_akI_,_akK_);
      return function(_akQ_,_akP_,_akO_,_akN_,_akM_,_akL_)
       {var _akR_=caml_call2(CamlinternalOO[24],_akP_,_akE_);
        _akR_[1 + _akH_] = _akM_;
        _akR_[1 + _akG_] = _akN_;
        _akR_[1 + _akF_] = _akO_;
        caml_call1(_akJ_,_akR_);
        return caml_call3(CamlinternalOO[26],_akP_,_akR_,_akE_)}}
    var gmap_ground_t=caml_call2(CamlinternalOO[19],_aV_,_bz_);
    function _bA_(fa,fb,fc,inh0,subj)
     {var _akD_=caml_call4(gmap_ground_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_ground,_akD_,inh0,subj)}
    function _bB_(_akl_)
     {var
       _akm_=caml_call2(CamlinternalOO[3],_akl_,cst$58),
       _akn_=caml_call2(CamlinternalOO[3],_akl_,cst$59),
       _ako_=caml_call2(CamlinternalOO[3],_akl_,cst$60),
       _akp_=caml_call2(CamlinternalOO[7],_akl_,cst_c_GROUND$6),
       _akq_=caml_call6(CamlinternalOO[18],_akl_,0,_aV_,0,ground_t,1)[1];
      function _akr_(self_17,param,_akz_)
       {var
         x_070=_akz_[3],
         x_069=_akz_[2],
         x_068=_akz_[1],
         _akA_=caml_call2(self_17[1 + _ako_],0,x_070),
         _akB_=caml_call2(self_17[1 + _akn_],0,x_069),
         _akC_=caml_call2(self_17[1 + _akm_],0,x_068);
        return caml_call4(Stdlib_Printf[4],_bC_,_akC_,_akB_,_akA_)}
      caml_call3(CamlinternalOO[10],_akl_,_akp_,_akr_);
      return function(_akx_,_akw_,_akv_,_aku_,_akt_,_aks_)
       {var _aky_=caml_call2(CamlinternalOO[24],_akw_,_akl_);
        _aky_[1 + _ako_] = _akt_;
        _aky_[1 + _akn_] = _aku_;
        _aky_[1 + _akm_] = _akv_;
        caml_call1(_akq_,_aky_);
        return caml_call3(CamlinternalOO[26],_akw_,_aky_,_akl_)}}
    var show_ground_t=caml_call2(CamlinternalOO[19],_aV_,_bB_);
    function _bD_(fa,fb,fc,inh0,subj)
     {var _akk_=caml_call4(show_ground_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_ground,_akk_,inh0,subj)}
    function _bE_(eta){return caml_call2(GT[2],gcata_ground,eta)}
    var
     _bF_=caml_call1(CamlinternalOO[16],_aU_),
     _bG_=caml_call2(CamlinternalOO[8],_bF_,_aW_),
     _bH_=_bG_[1],
     _bI_=_bG_[2],
     _bJ_=_bG_[3],
     _bK_=_bG_[4],
     _bL_=_bG_[5],
     _bM_=_bG_[6],
     _bN_=_bG_[7];
    function _bO_(self_18,fa,fb,fc,subj)
     {var _aki_=caml_call1(GT[4],fc),_akj_=caml_call1(GT[4],fb);
      return _bD_(caml_call1(GT[4],fa),_akj_,_aki_,0,subj)}
    function _bP_(self_18,fa,fb,fc,subj)
     {var _akg_=caml_call1(GT[4],fc),_akh_=caml_call1(GT[4],fb);
      return _bA_(caml_call1(GT[4],fa),_akh_,_akg_,0,subj)}
    function _bQ_(self_18){return eq_ground}
    function _bR_(self_18){return compare_ground}
    function _bS_(self_18){return foldl_ground}
    function _bT_(self_18){return foldr_ground}
    var
     _bU_=
      [0,
       _bL_,
       function(self_18){return fmt_ground},
       _bJ_,
       _bT_,
       _bK_,
       _bS_,
       _bN_,
       _bR_,
       _bM_,
       _bQ_,
       _bI_,
       _bP_,
       _bH_,
       _bO_];
    caml_call2(CamlinternalOO[11],_bF_,_bU_);
    caml_call1(CamlinternalOO[17],_bF_);
    var ground=[0,gcata_ground,caml_call2(CamlinternalOO[24],0,_bF_),_bE_];
    function gmap_ground(fa,fb,fc,subj)
     {var _ake_=caml_call1(GT[4],fc),_akf_=caml_call1(GT[4],fb);
      return _bA_(caml_call1(GT[4],fa),_akf_,_ake_,0,subj)}
    function show_ground(fa,fb,fc,subj)
     {var _akc_=caml_call1(GT[4],fc),_akd_=caml_call1(GT[4],fb);
      return _bD_(caml_call1(GT[4],fa),_akd_,_akc_,0,subj)}
    var logic_t$0=[],_bV_=0,_bW_=0;
    caml_update_dummy
     (logic_t$0,
      [0,
       0,
       function(_aj9_)
        {caml_call2(CamlinternalOO[8],_aj9_,_aY_);
         var _aj__=caml_call6(CamlinternalOO[18],_aj9_,0,_aY_,0,logic_t,1)[1];
         return function(_aka_,_aj$_)
          {var _akb_=caml_call2(CamlinternalOO[24],_aj$_,_aj9_);
           caml_call1(_aj__,_akb_);
           return caml_call3(CamlinternalOO[26],_aj$_,_akb_,_aj9_)}},
       _bW_,
       _bV_]);
    function _bX_(_ajZ_)
     {caml_call2(CamlinternalOO[8],_ajZ_,_aY_);
      var
       _aj0_=caml_call6(CamlinternalOO[18],_ajZ_,0,_aY_,0,logic_t$0,1)[1],
       _aj1_=caml_call6(CamlinternalOO[18],_ajZ_,0,0,_aX_,fmt_logic_t,1)[1];
      return function(_aj7_,_aj6_,_aj5_,_aj4_,_aj3_,_aj2_)
       {var _aj8_=caml_call2(CamlinternalOO[24],_aj6_,_ajZ_);
        caml_call1(_aj0_,_aj8_);
        caml_call3
         (_aj1_,
          _aj8_,
          function(x_077,param)
           {var x_080=param[3],x_079=param[2],x_078=param[1];
            return caml_call8
                    (Stdlib_Format[129],
                     x_077,
                     _bY_,
                     _aj5_,
                     x_078,
                     _aj4_,
                     x_079,
                     _aj3_,
                     x_080)},
          _aj2_);
        return caml_call3(CamlinternalOO[26],_aj6_,_aj8_,_ajZ_)}}
    var fmt_logic_t$0=caml_call2(CamlinternalOO[19],_aX_,_bX_);
    function fmt_logic$0(fa,fb,fc,inh_071,subj_072)
     {function _ajY_(x_073,param)
       {var x_076=param[3],x_075=param[2],x_074=param[1];
        return caml_call8
                (Stdlib_Format[129],x_073,_bZ_,fa,x_074,fb,x_075,fc,x_076)}
      return caml_call4(GT[224],logic,_ajY_,inh_071,subj_072)}
    function _b0_(_ajO_)
     {caml_call2(CamlinternalOO[8],_ajO_,_aY_);
      var
       _ajP_=caml_call6(CamlinternalOO[18],_ajO_,0,_aY_,0,logic_t$0,1)[1],
       _ajQ_=caml_call6(CamlinternalOO[18],_ajO_,0,0,_aX_,foldr_logic_t,1)[1];
      return function(_ajW_,_ajV_,_ajU_,_ajT_,_ajS_,_ajR_)
       {var _ajX_=caml_call2(CamlinternalOO[24],_ajV_,_ajO_);
        caml_call1(_ajP_,_ajX_);
        caml_call3
         (_ajQ_,
          _ajX_,
          function(x_087,param)
           {var x_090=param[3],x_089=param[2],x_088=param[1];
            return caml_call2
                    (_ajU_,
                     caml_call2(_ajT_,caml_call2(_ajS_,x_087,x_090),x_089),
                     x_088)},
          _ajR_);
        return caml_call3(CamlinternalOO[26],_ajV_,_ajX_,_ajO_)}}
    var foldr_logic_t$0=caml_call2(CamlinternalOO[19],_aX_,_b0_);
    function foldr_logic$0(fa,fb,fc,inh_081,subj_082)
     {function _ajN_(x_083,param)
       {var x_086=param[3],x_085=param[2],x_084=param[1];
        return caml_call2
                (fa,caml_call2(fb,caml_call2(fc,x_083,x_086),x_085),x_084)}
      return caml_call4(GT[226],logic,_ajN_,inh_081,subj_082)}
    function _b1_(_ajD_)
     {caml_call2(CamlinternalOO[8],_ajD_,_aY_);
      var
       _ajE_=caml_call6(CamlinternalOO[18],_ajD_,0,_aY_,0,logic_t$0,1)[1],
       _ajF_=caml_call6(CamlinternalOO[18],_ajD_,0,0,_aX_,foldl_logic_t,1)[1];
      return function(_ajL_,_ajK_,_ajJ_,_ajI_,_ajH_,_ajG_)
       {var _ajM_=caml_call2(CamlinternalOO[24],_ajK_,_ajD_);
        caml_call1(_ajE_,_ajM_);
        caml_call3
         (_ajF_,
          _ajM_,
          function(x_097,param)
           {var x_100=param[3],x_099=param[2],x_098=param[1];
            return caml_call2
                    (_ajH_,
                     caml_call2(_ajI_,caml_call2(_ajJ_,x_097,x_098),x_099),
                     x_100)},
          _ajG_);
        return caml_call3(CamlinternalOO[26],_ajK_,_ajM_,_ajD_)}}
    var foldl_logic_t$0=caml_call2(CamlinternalOO[19],_aX_,_b1_);
    function foldl_logic$0(fa,fb,fc,inh_091,subj_092)
     {function _ajC_(x_093,param)
       {var x_096=param[3],x_095=param[2],x_094=param[1];
        return caml_call2
                (fc,caml_call2(fb,caml_call2(fa,x_093,x_094),x_095),x_096)}
      return caml_call4(GT[225],logic,_ajC_,inh_091,subj_092)}
    function _b2_(_ajn_)
     {caml_call2(CamlinternalOO[8],_ajn_,_aY_);
      var
       _ajo_=caml_call6(CamlinternalOO[18],_ajn_,0,_aY_,0,logic_t$0,1)[1],
       _ajp_=
        caml_call6(CamlinternalOO[18],_ajn_,0,0,_aX_,compare_logic_t,1)[1];
      return function(_ajv_,_aju_,_ajt_,_ajs_,_ajr_,_ajq_)
       {var _ajw_=caml_call2(CamlinternalOO[24],_aju_,_ajn_);
        caml_call1(_ajo_,_ajw_);
        caml_call3
         (_ajp_,
          _ajw_,
          function(x_108,param)
           {var
             x_111=param[3],
             x_110=param[2],
             x_109=param[1],
             x_114=x_108[3],
             x_113=x_108[2],
             x_112=x_108[1];
            function _ajx_(param){return caml_call2(_ajr_,x_114,x_111)}
            function _ajy_(param){return caml_call2(_ajs_,x_113,x_110)}
            function _ajz_(param){return caml_call2(_ajt_,x_112,x_109)}
            var
             _ajA_=caml_call2(GT[6],1,_ajz_),
             _ajB_=caml_call2(GT[6],_ajA_,_ajy_);
            return caml_call2(GT[6],_ajB_,_ajx_)},
          _ajq_);
        return caml_call3(CamlinternalOO[26],_aju_,_ajw_,_ajn_)}}
    var compare_logic_t$0=caml_call2(CamlinternalOO[19],_aX_,_b2_);
    function compare_logic$0(fa,fb,fc,inh,subj)
     {function _ajh_(x_101,param)
       {var
         x_104=param[3],
         x_103=param[2],
         x_102=param[1],
         x_107=x_101[3],
         x_106=x_101[2],
         x_105=x_101[1];
        function _aji_(param){return caml_call2(fc,x_107,x_104)}
        function _ajj_(param){return caml_call2(fb,x_106,x_103)}
        function _ajk_(param){return caml_call2(fa,x_105,x_102)}
        var
         _ajl_=caml_call2(GT[6],1,_ajk_),
         _ajm_=caml_call2(GT[6],_ajl_,_ajj_);
        return caml_call2(GT[6],_ajm_,_aji_)}
      return caml_call4(GT[228],logic,_ajh_,inh,subj)}
    function _b3_(_ai7_)
     {caml_call2(CamlinternalOO[8],_ai7_,_aY_);
      var
       _ai8_=caml_call6(CamlinternalOO[18],_ai7_,0,_aY_,0,logic_t$0,1)[1],
       _ai9_=caml_call6(CamlinternalOO[18],_ai7_,0,0,_aX_,eq_logic_t,1)[1];
      return function(_ajd_,_ajc_,_ajb_,_aja_,_ai$_,_ai__)
       {var _aje_=caml_call2(CamlinternalOO[24],_ajc_,_ai7_);
        caml_call1(_ai8_,_aje_);
        caml_call3
         (_ai9_,
          _aje_,
          function(x_122,param)
           {var
             x_125=param[3],
             x_124=param[2],
             x_123=param[1],
             x_128=x_122[3],
             x_127=x_122[2],
             x_126=x_122[1],
             _ajf_=caml_call2(_ajb_,x_126,x_123),
             _ajg_=_ajf_?caml_call2(_aja_,x_127,x_124):_ajf_;
            return _ajg_?caml_call2(_ai$_,x_128,x_125):_ajg_},
          _ai__);
        return caml_call3(CamlinternalOO[26],_ajc_,_aje_,_ai7_)}}
    var eq_logic_t$0=caml_call2(CamlinternalOO[19],_aX_,_b3_);
    function eq_logic$0(fa,fb,fc,inh,subj)
     {function _ai4_(x_115,param)
       {var
         x_118=param[3],
         x_117=param[2],
         x_116=param[1],
         x_121=x_115[3],
         x_120=x_115[2],
         x_119=x_115[1],
         _ai5_=caml_call2(fa,x_119,x_116),
         _ai6_=_ai5_?caml_call2(fb,x_120,x_117):_ai5_;
        return _ai6_?caml_call2(fc,x_121,x_118):_ai6_}
      return caml_call4(GT[227],logic,_ai4_,inh,subj)}
    function _b4_(_aiS_)
     {caml_call2(CamlinternalOO[8],_aiS_,_aY_);
      var
       _aiT_=caml_call6(CamlinternalOO[18],_aiS_,0,_aY_,0,logic_t$0,1)[1],
       _aiU_=caml_call6(CamlinternalOO[18],_aiS_,0,0,_aX_,gmap_logic_t,1)[1];
      return function(_ai0_,_aiZ_,_aiY_,_aiX_,_aiW_,_aiV_)
       {var _ai1_=caml_call2(CamlinternalOO[24],_aiZ_,_aiS_);
        caml_call1(_aiT_,_ai1_);
        caml_call3
         (_aiU_,
          _ai1_,
          function(x_133,param)
           {var
             x_136=param[3],
             x_135=param[2],
             x_134=param[1],
             _ai2_=caml_call2(_aiW_,x_133,x_136),
             _ai3_=caml_call2(_aiX_,x_133,x_135);
            return [0,caml_call2(_aiY_,x_133,x_134),_ai3_,_ai2_]},
          _aiV_);
        return caml_call3(CamlinternalOO[26],_aiZ_,_ai1_,_aiS_)}}
    var gmap_logic_t$0=caml_call2(CamlinternalOO[19],_aX_,_b4_);
    function _b5_(fa,fb,fc,param,subj)
     {var x_129=0;
      function _aiP_(param)
       {var
         x_132=param[3],
         x_131=param[2],
         x_130=param[1],
         _aiQ_=caml_call2(fc,x_129,x_132),
         _aiR_=caml_call2(fb,x_129,x_131);
        return [0,caml_call2(fa,x_129,x_130),_aiR_,_aiQ_]}
      return caml_call3(GT[223],logic,_aiP_,subj)}
    function _b6_(_aiC_)
     {caml_call2(CamlinternalOO[8],_aiC_,_aY_);
      var
       _aiD_=caml_call6(CamlinternalOO[18],_aiC_,0,_aY_,0,logic_t$0,1)[1],
       _aiE_=caml_call6(CamlinternalOO[18],_aiC_,0,0,_aX_,show_logic_t,1)[1];
      return function(_aiK_,_aiJ_,_aiI_,_aiH_,_aiG_,_aiF_)
       {var _aiL_=caml_call2(CamlinternalOO[24],_aiJ_,_aiC_);
        caml_call1(_aiD_,_aiL_);
        caml_call3
         (_aiE_,
          _aiL_,
          function(x_141,param)
           {var
             x_144=param[3],
             x_143=param[2],
             x_142=param[1],
             _aiM_=caml_call2(_aiG_,0,x_144),
             _aiN_=caml_call2(_aiH_,0,x_143),
             _aiO_=caml_call2(_aiI_,0,x_142);
            return caml_call4(Stdlib_Printf[4],_b7_,_aiO_,_aiN_,_aiM_)},
          _aiF_);
        return caml_call3(CamlinternalOO[26],_aiJ_,_aiL_,_aiC_)}}
    var show_logic_t$0=caml_call2(CamlinternalOO[19],_aX_,_b6_);
    function _b8_(fa,fb,fc,param,subj)
     {function _aiy_(param)
       {var
         x_140=param[3],
         x_139=param[2],
         x_138=param[1],
         _aiz_=caml_call2(fc,0,x_140),
         _aiA_=caml_call2(fb,0,x_139),
         _aiB_=caml_call2(fa,0,x_138);
        return caml_call4(Stdlib_Printf[4],_b9_,_aiB_,_aiA_,_aiz_)}
      return caml_call3(GT[221],logic,_aiy_,subj)}
    function _b__(eta){return caml_call2(GT[2],gcata_logic,eta)}
    var
     _b$_=caml_call1(CamlinternalOO[16],_aU_),
     _ca_=caml_call2(CamlinternalOO[8],_b$_,_aW_),
     _cb_=_ca_[1],
     _cc_=_ca_[2],
     _cd_=_ca_[3],
     _ce_=_ca_[4],
     _cf_=_ca_[5],
     _cg_=_ca_[6],
     _ch_=_ca_[7];
    function _ci_(self_27,fa,fb,fc,subj)
     {var _aiw_=caml_call1(GT[4],fc),_aix_=caml_call1(GT[4],fb);
      return _b8_(caml_call1(GT[4],fa),_aix_,_aiw_,0,subj)}
    function _cj_(self_27,fa,fb,fc,subj)
     {var _aiu_=caml_call1(GT[4],fc),_aiv_=caml_call1(GT[4],fb);
      return _b5_(caml_call1(GT[4],fa),_aiv_,_aiu_,0,subj)}
    function _ck_(self_27){return eq_logic$0}
    function _cl_(self_27){return compare_logic$0}
    function _cm_(self_27){return foldl_logic$0}
    function _cn_(self_27){return foldr_logic$0}
    var
     _co_=
      [0,
       _cf_,
       function(self_27){return fmt_logic$0},
       _cd_,
       _cn_,
       _ce_,
       _cm_,
       _ch_,
       _cl_,
       _cg_,
       _ck_,
       _cc_,
       _cj_,
       _cb_,
       _ci_];
    caml_call2(CamlinternalOO[11],_b$_,_co_);
    caml_call1(CamlinternalOO[17],_b$_);
    var _cp_=caml_call2(CamlinternalOO[24],0,_b$_);
    function gmap_logic$0(fa,fb,fc,subj)
     {var _ais_=caml_call1(GT[4],fc),_ait_=caml_call1(GT[4],fb);
      return _b5_(caml_call1(GT[4],fa),_ait_,_ais_,0,subj)}
    function show_logic$0(fa,fb,fc,subj)
     {var _aiq_=caml_call1(GT[4],fc),_air_=caml_call1(GT[4],fb);
      return _b8_(caml_call1(GT[4],fa),_air_,_aiq_,0,subj)}
    var
     _cq_=caml_call1(CamlinternalOO[16],_aU_),
     _cr_=caml_call2(CamlinternalOO[8],_cq_,_aW_),
     _cs_=_cr_[1],
     _ct_=_cr_[2],
     _cu_=_cr_[3],
     _cv_=_cr_[4],
     _cw_=_cr_[5],
     _cx_=_cr_[6],
     _cy_=_cr_[7];
    function _cz_(self_28,fa,fb,fc)
     {function _aip_(l){return caml_call5(GT[221],ground,fa,fb,fc,l)}
      return caml_call2(GT[221],logic,_aip_)}
    function _cA_(self_28)
     {return caml_call1(caml_get_public_method(_cp_,5096781,11),_cp_)}
    function _cB_(self_28)
     {return caml_call1(caml_get_public_method(_cp_,76555601,12),_cp_)}
    function _cC_(self_28)
     {return caml_call1(caml_get_public_method(_cp_,76555595,13),_cp_)}
    function _cD_(self_28)
     {return caml_call1(caml_get_public_method(_cp_,22636,14),_cp_)}
    function _cE_(self_28)
     {return caml_call1(caml_get_public_method(_cp_,-999816043,15),_cp_)}
    var
     _cF_=
      [0,
       _cy_,
       function(self_28)
        {return caml_call1(caml_get_public_method(_cp_,57219237,16),_cp_)},
       _ct_,
       _cE_,
       _cx_,
       _cD_,
       _cv_,
       _cC_,
       _cu_,
       _cB_,
       _cw_,
       _cA_,
       _cs_,
       _cz_];
    caml_call2(CamlinternalOO[11],_cq_,_cF_);
    caml_call1(CamlinternalOO[17],_cq_);
    var logic$0=[0,gcata_logic,caml_call2(CamlinternalOO[24],0,_cq_),_b__];
    function inj(f,g,h,p){return [1,caml_call5(GT[223],ground,f,g,h,p)]}
    function triple(x,y,z){return [0,x,y,z]}
    function reify$4(ra,rb,rc)
     {var symbol_bind=_p_[3];
      function _ain_(self)
       {var
         _aio_=
          caml_call2
           (symbol_bind,
            ra,
            function(fa)
             {return caml_call2
                      (symbol_bind,
                       rb,
                       function(fb)
                        {return caml_call2
                                 (symbol_bind,
                                  rc,
                                  function(fc)
                                   {function foo(param)
                                     {if(0 === param[0])
                                       {var xs=param[2],v=param[1];
                                        return [0,v,caml_call2(Stdlib_List[19],foo,xs)]}
                                      var x=param[1];
                                      return [1,caml_call5(GT[223],t,fa,fb,fc,x)]}
                                    return caml_call1(_p_[1],foo)})})});
        return caml_call2(Reifier[4],Reifier[1],_aio_)}
      return caml_call1(Reifier[7],_ain_)}
    function prj_exn$0(ra,rb,rc)
     {var
       symbol_bind=_p_[3],
       _ail_=
        caml_call2
         (symbol_bind,
          ra,
          function(fa)
           {return caml_call2
                    (symbol_bind,
                     rb,
                     function(fb)
                      {return caml_call2
                               (symbol_bind,
                                rc,
                                function(fc)
                                 {function _aim_(x){return caml_call5(GT[223],t,fa,fb,fc,x)}
                                  return caml_call1(_p_[1],_aim_)})})});
      return caml_call2(Reifier[4],Reifier[2],_ail_)}
    var
     OCanren_Triple=
      [0,
       t_t,
       gcata_t,
       fmt_t_t,
       fmt_t,
       foldr_t_t,
       foldr_t,
       foldl_t_t,
       foldl_t,
       compare_t_t,
       compare_t,
       eq_t_t,
       eq_t,
       gmap_t_t,
       gmap_t,
       show_t_t,
       show_t,
       t,
       ground_t,
       gcata_ground,
       fmt_ground_t,
       fmt_ground,
       foldr_ground_t,
       foldr_ground,
       foldl_ground_t,
       foldl_ground,
       compare_ground_t,
       compare_ground,
       eq_ground_t,
       eq_ground,
       gmap_ground_t,
       gmap_ground,
       show_ground_t,
       show_ground,
       ground,
       logic_t$0,
       gcata_logic,
       fmt_logic_t$0,
       fmt_logic$0,
       foldr_logic_t$0,
       foldr_logic$0,
       foldl_logic_t$0,
       foldl_logic$0,
       compare_logic_t$0,
       compare_logic$0,
       eq_logic_t$0,
       eq_logic$0,
       gmap_logic_t$0,
       gmap_logic$0,
       show_logic_t$0,
       show_logic$0,
       logic$0,
       inj,
       triple,
       triple,
       reify$4,
       prj_exn$0];
    caml_register_global(367,OCanren_Triple,"OCanren__Triple");
    function add_span(param,_aik_)
     {var s2=_aik_[2],ms2=_aik_[1],s=param[2],ms=param[1];
      return [254,ms + ms2,s + s2]}
    var timer=[0,0];
    function install_timer(t){timer[1] = [0,t];return 0}
    function make$1(param)
     {var _aij_=timer[1];
      if(! _aij_)return caml_call1(Stdlib[2],cst_Timer_is_not_installed_Add);
      var Timer=_aij_[1],origin=caml_call1(Timer[1],0);
      return function(param)
       {var next=caml_call1(Timer[1],0);
        return caml_call2(Timer[2],next,origin)}}
    var OCanren_Timer=[0,empty_span,add_span,install_timer,make$1];
    caml_register_global(368,OCanren_Timer,"OCanren__Timer");
    var OCanren_Peep=[0];
    caml_register_global(369,OCanren_Peep,"OCanren__Peep");
    var logic_t$1=[],_cL_=0,_cM_=0;
    caml_update_dummy
     (logic_t$1,
      [0,
       0,
       function(_aie_)
        {caml_call2(CamlinternalOO[8],_aie_,_cJ_);
         var _aif_=caml_call6(CamlinternalOO[18],_aie_,0,_cJ_,0,logic_t,1)[1];
         return function(_aih_,_aig_)
          {var _aii_=caml_call2(CamlinternalOO[24],_aig_,_aie_);
           caml_call1(_aif_,_aii_);
           return caml_call3(CamlinternalOO[26],_aig_,_aii_,_aie_)}},
       _cM_,
       _cL_]);
    function _cN_(_ah8_)
     {caml_call2(CamlinternalOO[8],_ah8_,_cJ_);
      var
       _ah9_=caml_call6(CamlinternalOO[18],_ah8_,0,_cJ_,0,logic_t$1,1)[1],
       _ah__=caml_call6(CamlinternalOO[18],_ah8_,0,0,_cI_,fmt_logic_t,1)[1];
      return function(_aic_,_aib_,_aia_,_ah$_)
       {var _aid_=caml_call2(CamlinternalOO[24],_aib_,_ah8_);
        caml_call1(_ah9_,_aid_);
        caml_call3(_ah__,_aid_,_aia_,_ah$_);
        return caml_call3(CamlinternalOO[26],_aib_,_aid_,_ah8_)}}
    var fmt_logic_t$1=caml_call2(CamlinternalOO[19],_cI_,_cN_);
    function fmt_logic$1(fa,inh_001,subj_002)
     {return caml_call4(GT[224],logic,fa,inh_001,subj_002)}
    function _cO_(_ah0_)
     {caml_call2(CamlinternalOO[8],_ah0_,_cJ_);
      var
       _ah1_=caml_call6(CamlinternalOO[18],_ah0_,0,_cJ_,0,logic_t$1,1)[1],
       _ah2_=caml_call6(CamlinternalOO[18],_ah0_,0,0,_cI_,foldr_logic_t,1)[1];
      return function(_ah6_,_ah5_,_ah4_,_ah3_)
       {var _ah7_=caml_call2(CamlinternalOO[24],_ah5_,_ah0_);
        caml_call1(_ah1_,_ah7_);
        caml_call3(_ah2_,_ah7_,_ah4_,_ah3_);
        return caml_call3(CamlinternalOO[26],_ah5_,_ah7_,_ah0_)}}
    var foldr_logic_t$1=caml_call2(CamlinternalOO[19],_cI_,_cO_);
    function foldr_logic$1(fa,inh_003,subj_004)
     {return caml_call4(GT[226],logic,fa,inh_003,subj_004)}
    function _cP_(_ahS_)
     {caml_call2(CamlinternalOO[8],_ahS_,_cJ_);
      var
       _ahT_=caml_call6(CamlinternalOO[18],_ahS_,0,_cJ_,0,logic_t$1,1)[1],
       _ahU_=caml_call6(CamlinternalOO[18],_ahS_,0,0,_cI_,foldl_logic_t,1)[1];
      return function(_ahY_,_ahX_,_ahW_,_ahV_)
       {var _ahZ_=caml_call2(CamlinternalOO[24],_ahX_,_ahS_);
        caml_call1(_ahT_,_ahZ_);
        caml_call3(_ahU_,_ahZ_,_ahW_,_ahV_);
        return caml_call3(CamlinternalOO[26],_ahX_,_ahZ_,_ahS_)}}
    var foldl_logic_t$1=caml_call2(CamlinternalOO[19],_cI_,_cP_);
    function foldl_logic$1(fa,inh_005,subj_006)
     {return caml_call4(GT[225],logic,fa,inh_005,subj_006)}
    function _cQ_(_ahK_)
     {caml_call2(CamlinternalOO[8],_ahK_,_cJ_);
      var
       _ahL_=caml_call6(CamlinternalOO[18],_ahK_,0,_cJ_,0,logic_t$1,1)[1],
       _ahM_=
        caml_call6(CamlinternalOO[18],_ahK_,0,0,_cI_,compare_logic_t,1)[1];
      return function(_ahQ_,_ahP_,_ahO_,_ahN_)
       {var _ahR_=caml_call2(CamlinternalOO[24],_ahP_,_ahK_);
        caml_call1(_ahL_,_ahR_);
        caml_call3(_ahM_,_ahR_,_ahO_,_ahN_);
        return caml_call3(CamlinternalOO[26],_ahP_,_ahR_,_ahK_)}}
    var compare_logic_t$1=caml_call2(CamlinternalOO[19],_cI_,_cQ_);
    function compare_logic$1(fa,inh,subj)
     {return caml_call4(GT[228],logic,fa,inh,subj)}
    function _cR_(_ahC_)
     {caml_call2(CamlinternalOO[8],_ahC_,_cJ_);
      var
       _ahD_=caml_call6(CamlinternalOO[18],_ahC_,0,_cJ_,0,logic_t$1,1)[1],
       _ahE_=caml_call6(CamlinternalOO[18],_ahC_,0,0,_cI_,eq_logic_t,1)[1];
      return function(_ahI_,_ahH_,_ahG_,_ahF_)
       {var _ahJ_=caml_call2(CamlinternalOO[24],_ahH_,_ahC_);
        caml_call1(_ahD_,_ahJ_);
        caml_call3(_ahE_,_ahJ_,_ahG_,_ahF_);
        return caml_call3(CamlinternalOO[26],_ahH_,_ahJ_,_ahC_)}}
    var eq_logic_t$1=caml_call2(CamlinternalOO[19],_cI_,_cR_);
    function eq_logic$1(fa,inh,subj)
     {return caml_call4(GT[227],logic,fa,inh,subj)}
    function _cS_(_ahu_)
     {caml_call2(CamlinternalOO[8],_ahu_,_cJ_);
      var
       _ahv_=caml_call6(CamlinternalOO[18],_ahu_,0,_cJ_,0,logic_t$1,1)[1],
       _ahw_=caml_call6(CamlinternalOO[18],_ahu_,0,0,_cI_,html_logic_t,1)[1];
      return function(_ahA_,_ahz_,_ahy_,_ahx_)
       {var _ahB_=caml_call2(CamlinternalOO[24],_ahz_,_ahu_);
        caml_call1(_ahv_,_ahB_);
        caml_call3(_ahw_,_ahB_,_ahy_,_ahx_);
        return caml_call3(CamlinternalOO[26],_ahz_,_ahB_,_ahu_)}}
    var html_logic_t$0=caml_call2(CamlinternalOO[19],_cI_,_cS_);
    function _cT_(_ahm_)
     {caml_call2(CamlinternalOO[8],_ahm_,_cJ_);
      var
       _ahn_=caml_call6(CamlinternalOO[18],_ahm_,0,_cJ_,0,logic_t$1,1)[1],
       _aho_=caml_call6(CamlinternalOO[18],_ahm_,0,0,_cI_,gmap_logic_t,1)[1];
      return function(_ahs_,_ahr_,_ahq_,_ahp_)
       {var _aht_=caml_call2(CamlinternalOO[24],_ahr_,_ahm_);
        caml_call1(_ahn_,_aht_);
        caml_call3(_aho_,_aht_,_ahq_,_ahp_);
        return caml_call3(CamlinternalOO[26],_ahr_,_aht_,_ahm_)}}
    var gmap_logic_t$1=caml_call2(CamlinternalOO[19],_cI_,_cT_);
    function _cU_(_ahe_)
     {caml_call2(CamlinternalOO[8],_ahe_,_cJ_);
      var
       _ahf_=caml_call6(CamlinternalOO[18],_ahe_,0,_cJ_,0,logic_t$1,1)[1],
       _ahg_=caml_call6(CamlinternalOO[18],_ahe_,0,0,_cI_,show_logic_t,1)[1];
      return function(_ahk_,_ahj_,_ahi_,_ahh_)
       {var _ahl_=caml_call2(CamlinternalOO[24],_ahj_,_ahe_);
        caml_call1(_ahf_,_ahl_);
        caml_call3(_ahg_,_ahl_,_ahi_,_ahh_);
        return caml_call3(CamlinternalOO[26],_ahj_,_ahl_,_ahe_)}}
    var
     show_logic_t$1=caml_call2(CamlinternalOO[19],_cI_,_cU_),
     _cV_=caml_call1(CamlinternalOO[16],_cG_),
     _cW_=caml_call2(CamlinternalOO[8],_cV_,_cK_),
     _cX_=_cW_[1],
     _cY_=_cW_[2],
     _cZ_=_cW_[3],
     _c0_=_cW_[4],
     _c1_=_cW_[5],
     _c2_=_cW_[6],
     _c3_=_cW_[7],
     _c4_=_cW_[8];
    function _c5_(self_10,fa,subj)
     {var fa$0=caml_call1(GT[4],fa),_ahd_=caml_call1(fa$0,0);
      return caml_call3(GT[221],logic,_ahd_,subj)}
    function _c6_(self_10,fa,subj)
     {var fa$0=caml_call1(GT[4],fa),_ahc_=caml_call1(fa$0,0);
      return caml_call3(GT[223],logic,_ahc_,subj)}
    function _c7_(self_10,fa,subj)
     {var fa$0=caml_call1(GT[4],fa),_ahb_=caml_call1(fa$0,0);
      return caml_call3(GT[222],logic,_ahb_,subj)}
    function _c8_(self_10){return eq_logic$1}
    function _c9_(self_10){return compare_logic$1}
    function _c__(self_10){return foldl_logic$1}
    function _c$_(self_10){return foldr_logic$1}
    var
     _da_=
      [0,
       _c2_,
       function(self_10){return fmt_logic$1},
       _c0_,
       _c$_,
       _c1_,
       _c__,
       _c4_,
       _c9_,
       _c3_,
       _c8_,
       _cY_,
       _c7_,
       _cZ_,
       _c6_,
       _cX_,
       _c5_];
    caml_call2(CamlinternalOO[11],_cV_,_da_);
    caml_call1(CamlinternalOO[17],_cV_);
    caml_call2(CamlinternalOO[24],0,_cV_);
    var t_t$0=[],_db_=0,_dc_=0;
    caml_update_dummy
     (t_t$0,
      [0,
       0,
       function(_ag__)
        {caml_call2(CamlinternalOO[7],_ag__,cst_c_T$7);
         return function(_aha_,_ag$_)
          {return caml_call2(CamlinternalOO[24],_ag$_,_ag__)}},
       _dc_,
       _db_]);
    function gcata_t$0(tr,inh,subj)
     {return caml_call3(caml_get_public_method(tr,4944440,17),tr,inh,subj)}
    function _dd_(_agY_)
     {var
       _agZ_=caml_call2(CamlinternalOO[3],_agY_,cst$61),
       _ag0_=caml_call2(CamlinternalOO[3],_agY_,cst$62),
       _ag1_=caml_call2(CamlinternalOO[7],_agY_,cst_c_T$8),
       _ag2_=caml_call6(CamlinternalOO[18],_agY_,0,shared$1,0,t_t$0,1)[1];
      function _ag3_(self_12,inh_009,param)
       {var x_011=param[2],x_010=param[1];
        return caml_call6
                (Stdlib_Format[129],
                 inh_009,
                 _de_,
                 self_12[1 + _agZ_],
                 x_010,
                 self_12[1 + _ag0_],
                 x_011)}
      caml_call3(CamlinternalOO[10],_agY_,_ag1_,_ag3_);
      return function(_ag8_,_ag7_,_ag6_,_ag5_,_ag4_)
       {var _ag9_=caml_call2(CamlinternalOO[24],_ag7_,_agY_);
        _ag9_[1 + _ag0_] = _ag5_;
        _ag9_[1 + _agZ_] = _ag6_;
        caml_call1(_ag2_,_ag9_);
        return caml_call3(CamlinternalOO[26],_ag7_,_ag9_,_agY_)}}
    var fmt_t_t$0=caml_call2(CamlinternalOO[19],shared$1,_dd_);
    function fmt_t$0(fa,fb,inh0,subj)
     {var _agX_=caml_call3(fmt_t_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_t$0,_agX_,inh0,subj)}
    function _df_(_agK_)
     {var
       _agL_=caml_call2(CamlinternalOO[3],_agK_,cst$63),
       _agM_=caml_call2(CamlinternalOO[3],_agK_,cst$64),
       _agN_=caml_call2(CamlinternalOO[7],_agK_,cst_c_T$9),
       _agO_=caml_call6(CamlinternalOO[18],_agK_,0,shared$1,0,t_t$0,1)[1];
      function _agP_(self_13,inh_012,param)
       {var
         x_014=param[2],
         x_013=param[1],
         _agW_=caml_call2(self_13[1 + _agM_],inh_012,x_014);
        return caml_call2(self_13[1 + _agL_],_agW_,x_013)}
      caml_call3(CamlinternalOO[10],_agK_,_agN_,_agP_);
      return function(_agU_,_agT_,_agS_,_agR_,_agQ_)
       {var _agV_=caml_call2(CamlinternalOO[24],_agT_,_agK_);
        _agV_[1 + _agM_] = _agR_;
        _agV_[1 + _agL_] = _agS_;
        caml_call1(_agO_,_agV_);
        return caml_call3(CamlinternalOO[26],_agT_,_agV_,_agK_)}}
    var foldr_t_t$0=caml_call2(CamlinternalOO[19],shared$1,_df_);
    function foldr_t$0(fa,fb,inh0,subj)
     {var _agJ_=caml_call3(foldr_t_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_t$0,_agJ_,inh0,subj)}
    function _dg_(_agw_)
     {var
       _agx_=caml_call2(CamlinternalOO[3],_agw_,cst$65),
       _agy_=caml_call2(CamlinternalOO[3],_agw_,cst$66),
       _agz_=caml_call2(CamlinternalOO[7],_agw_,cst_c_T$10),
       _agA_=caml_call6(CamlinternalOO[18],_agw_,0,shared$1,0,t_t$0,1)[1];
      function _agB_(self_14,inh_015,param)
       {var
         x_017=param[2],
         x_016=param[1],
         _agI_=caml_call2(self_14[1 + _agx_],inh_015,x_016);
        return caml_call2(self_14[1 + _agy_],_agI_,x_017)}
      caml_call3(CamlinternalOO[10],_agw_,_agz_,_agB_);
      return function(_agG_,_agF_,_agE_,_agD_,_agC_)
       {var _agH_=caml_call2(CamlinternalOO[24],_agF_,_agw_);
        _agH_[1 + _agy_] = _agD_;
        _agH_[1 + _agx_] = _agE_;
        caml_call1(_agA_,_agH_);
        return caml_call3(CamlinternalOO[26],_agF_,_agH_,_agw_)}}
    var foldl_t_t$0=caml_call2(CamlinternalOO[19],shared$1,_dg_);
    function foldl_t$0(fa,fb,inh0,subj)
     {var _agv_=caml_call3(foldl_t_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_t$0,_agv_,inh0,subj)}
    function _dh_(_agg_)
     {var
       _agh_=caml_call2(CamlinternalOO[3],_agg_,cst$67),
       _agi_=caml_call2(CamlinternalOO[3],_agg_,cst$68),
       _agj_=caml_call2(CamlinternalOO[7],_agg_,cst_c_T$11),
       _agk_=caml_call6(CamlinternalOO[18],_agg_,0,shared$1,0,t_t$0,1)[1];
      function _agl_(self_15,inh_018,param)
       {var x_020=param[2],x_019=param[1],x_022=inh_018[2],x_021=inh_018[1];
        function _ags_(param)
         {return caml_call2(self_15[1 + _agi_],x_022,x_020)}
        function _agt_(param)
         {return caml_call2(self_15[1 + _agh_],x_021,x_019)}
        var _agu_=caml_call2(GT[6],1,_agt_);
        return caml_call2(GT[6],_agu_,_ags_)}
      caml_call3(CamlinternalOO[10],_agg_,_agj_,_agl_);
      return function(_agq_,_agp_,_ago_,_agn_,_agm_)
       {var _agr_=caml_call2(CamlinternalOO[24],_agp_,_agg_);
        _agr_[1 + _agi_] = _agn_;
        _agr_[1 + _agh_] = _ago_;
        caml_call1(_agk_,_agr_);
        return caml_call3(CamlinternalOO[26],_agp_,_agr_,_agg_)}}
    var compare_t_t$0=caml_call2(CamlinternalOO[19],shared$1,_dh_);
    function compare_t$0(fa,fb,inh0,subj)
     {var _agf_=caml_call3(compare_t_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_t$0,_agf_,inh0,subj)}
    function _di_(_af4_)
     {var
       _af5_=caml_call2(CamlinternalOO[3],_af4_,cst$69),
       _af6_=caml_call2(CamlinternalOO[3],_af4_,cst$70),
       _af7_=caml_call2(CamlinternalOO[7],_af4_,cst_c_T$12),
       _af8_=caml_call6(CamlinternalOO[18],_af4_,0,shared$1,0,t_t$0,1)[1];
      function _af9_(self_16,inh_023,param)
       {var
         x_025=param[2],
         x_024=param[1],
         x_027=inh_023[2],
         x_026=inh_023[1],
         _age_=caml_call2(self_16[1 + _af5_],x_026,x_024);
        return _age_?caml_call2(self_16[1 + _af6_],x_027,x_025):_age_}
      caml_call3(CamlinternalOO[10],_af4_,_af7_,_af9_);
      return function(_agc_,_agb_,_aga_,_af$_,_af__)
       {var _agd_=caml_call2(CamlinternalOO[24],_agb_,_af4_);
        _agd_[1 + _af6_] = _af$_;
        _agd_[1 + _af5_] = _aga_;
        caml_call1(_af8_,_agd_);
        return caml_call3(CamlinternalOO[26],_agb_,_agd_,_af4_)}}
    var eq_t_t$0=caml_call2(CamlinternalOO[19],shared$1,_di_);
    function eq_t$0(fa,fb,inh0,subj)
     {var _af3_=caml_call3(eq_t_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_t$0,_af3_,inh0,subj)}
    function _dj_(_afB_)
     {var
       _afC_=caml_call2(CamlinternalOO[3],_afB_,cst$71),
       _afD_=caml_call2(CamlinternalOO[3],_afB_,cst$72),
       _afE_=caml_call2(CamlinternalOO[7],_afB_,cst_c_T$13),
       _afF_=caml_call6(CamlinternalOO[18],_afB_,0,shared$1,0,t_t$0,1)[1];
      function _afG_(self_17,param,_afN_)
       {var
         x_029=_afN_[2],
         x_028=_afN_[1],
         _afO_=caml_call2(self_17[1 + _afD_],0,x_029),
         _afP_=caml_call2(Stdlib_List[4],_afO_,0),
         _afQ_=caml_call1(HTML[10],_afP_),
         _afR_=caml_call2(HTML[25],0,_afQ_),
         _afS_=caml_call2(Stdlib_List[4],_afR_,0),
         _afT_=caml_call2(self_17[1 + _afC_],0,x_028),
         _afU_=caml_call2(Stdlib_List[4],_afT_,0),
         _afV_=caml_call1(HTML[10],_afU_),
         _afW_=caml_call2(HTML[25],0,_afV_),
         _afX_=caml_call2(Stdlib_List[4],_afW_,_afS_),
         _afY_=caml_call1(HTML[10],_afX_),
         _afZ_=caml_call2(HTML[23],0,_afY_),
         _af0_=caml_call2(Stdlib_List[4],_afZ_,0),
         _af1_=caml_call1(HTML[3],cst_tuple),
         _af2_=caml_call2(Stdlib_List[4],_af1_,_af0_);
        return caml_call1(HTML[10],_af2_)}
      caml_call3(CamlinternalOO[10],_afB_,_afE_,_afG_);
      return function(_afL_,_afK_,_afJ_,_afI_,_afH_)
       {var _afM_=caml_call2(CamlinternalOO[24],_afK_,_afB_);
        _afM_[1 + _afD_] = _afI_;
        _afM_[1 + _afC_] = _afJ_;
        caml_call1(_afF_,_afM_);
        return caml_call3(CamlinternalOO[26],_afK_,_afM_,_afB_)}}
    var html_t_t=caml_call2(CamlinternalOO[19],shared$1,_dj_);
    function _dk_(fa,fb,inh0,subj)
     {var _afA_=caml_call3(html_t_t[1],0,fa,fb);
      return caml_call4(GT[2],gcata_t$0,_afA_,inh0,subj)}
    function _dl_(_afm_)
     {var
       _afn_=caml_call2(CamlinternalOO[3],_afm_,cst$73),
       _afo_=caml_call2(CamlinternalOO[3],_afm_,cst$74),
       _afp_=caml_call2(CamlinternalOO[7],_afm_,cst_c_T$14),
       _afq_=caml_call6(CamlinternalOO[18],_afm_,0,shared$1,0,t_t$0,1)[1];
      function _afr_(self_18,param,_afy_)
       {var
         x_031=_afy_[2],
         x_030=_afy_[1],
         _afz_=caml_call2(self_18[1 + _afo_],0,x_031);
        return [0,caml_call2(self_18[1 + _afn_],0,x_030),_afz_]}
      caml_call3(CamlinternalOO[10],_afm_,_afp_,_afr_);
      return function(_afw_,_afv_,_afu_,_aft_,_afs_)
       {var _afx_=caml_call2(CamlinternalOO[24],_afv_,_afm_);
        _afx_[1 + _afo_] = _aft_;
        _afx_[1 + _afn_] = _afu_;
        caml_call1(_afq_,_afx_);
        return caml_call3(CamlinternalOO[26],_afv_,_afx_,_afm_)}}
    var gmap_t_t$0=caml_call2(CamlinternalOO[19],shared$1,_dl_);
    function _dm_(fa,fb,inh0,subj)
     {var _afl_=caml_call3(gmap_t_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_t$0,_afl_,inh0,subj)}
    function _dn_(_ae8_)
     {var
       _ae9_=caml_call2(CamlinternalOO[3],_ae8_,cst$75),
       _ae__=caml_call2(CamlinternalOO[3],_ae8_,cst$76),
       _ae$_=caml_call2(CamlinternalOO[7],_ae8_,cst_c_T$15),
       _afa_=caml_call6(CamlinternalOO[18],_ae8_,0,shared$1,0,t_t$0,1)[1];
      function _afb_(self_19,param,_afi_)
       {var
         x_033=_afi_[2],
         x_032=_afi_[1],
         _afj_=caml_call2(self_19[1 + _ae__],0,x_033),
         _afk_=caml_call2(self_19[1 + _ae9_],0,x_032);
        return caml_call3(Stdlib_Printf[4],_do_,_afk_,_afj_)}
      caml_call3(CamlinternalOO[10],_ae8_,_ae$_,_afb_);
      return function(_afg_,_aff_,_afe_,_afd_,_afc_)
       {var _afh_=caml_call2(CamlinternalOO[24],_aff_,_ae8_);
        _afh_[1 + _ae__] = _afd_;
        _afh_[1 + _ae9_] = _afe_;
        caml_call1(_afa_,_afh_);
        return caml_call3(CamlinternalOO[26],_aff_,_afh_,_ae8_)}}
    var show_t_t$0=caml_call2(CamlinternalOO[19],shared$1,_dn_);
    function _dp_(fa,fb,inh0,subj)
     {var _ae7_=caml_call3(show_t_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_t$0,_ae7_,inh0,subj)}
    function _dq_(eta){return caml_call2(GT[2],gcata_t$0,eta)}
    var
     _dr_=caml_call1(CamlinternalOO[16],_cG_),
     _ds_=caml_call2(CamlinternalOO[8],_dr_,_cK_),
     _dt_=_ds_[1],
     _du_=_ds_[2],
     _dv_=_ds_[3],
     _dw_=_ds_[4],
     _dx_=_ds_[5],
     _dy_=_ds_[6],
     _dz_=_ds_[7],
     _dA_=_ds_[8];
    function _dB_(self_20,fa,fb,subj)
     {var _ae6_=caml_call1(GT[4],fb);
      return _dp_(caml_call1(GT[4],fa),_ae6_,0,subj)}
    function _dC_(self_20,fa,fb,subj)
     {var _ae5_=caml_call1(GT[4],fb);
      return _dm_(caml_call1(GT[4],fa),_ae5_,0,subj)}
    function _dD_(self_20,fa,fb,subj)
     {var _ae4_=caml_call1(GT[4],fb);
      return _dk_(caml_call1(GT[4],fa),_ae4_,0,subj)}
    function _dE_(self_20){return eq_t$0}
    function _dF_(self_20){return compare_t$0}
    function _dG_(self_20){return foldl_t$0}
    function _dH_(self_20){return foldr_t$0}
    var
     _dI_=
      [0,
       _dy_,
       function(self_20){return fmt_t$0},
       _dw_,
       _dH_,
       _dx_,
       _dG_,
       _dA_,
       _dF_,
       _dz_,
       _dE_,
       _du_,
       _dD_,
       _dv_,
       _dC_,
       _dt_,
       _dB_];
    caml_call2(CamlinternalOO[11],_dr_,_dI_);
    caml_call1(CamlinternalOO[17],_dr_);
    var t$0=[0,gcata_t$0,caml_call2(CamlinternalOO[24],0,_dr_),_dq_];
    function html_t(fa,fb,subj)
     {var _ae3_=caml_call1(GT[4],fb);
      return _dk_(caml_call1(GT[4],fa),_ae3_,0,subj)}
    function gmap_t$0(fa,fb,subj)
     {var _ae2_=caml_call1(GT[4],fb);
      return _dm_(caml_call1(GT[4],fa),_ae2_,0,subj)}
    function show_t$0(fa,fb,subj)
     {var _ae1_=caml_call1(GT[4],fb);
      return _dp_(caml_call1(GT[4],fa),_ae1_,0,subj)}
    var ground_t$0=[],_dJ_=0,_dK_=0;
    caml_update_dummy
     (ground_t$0,
      [0,
       0,
       function(_aeY_)
        {caml_call2(CamlinternalOO[7],_aeY_,cst_c_GROUND$7);
         return function(_ae0_,_aeZ_)
          {return caml_call2(CamlinternalOO[24],_aeZ_,_aeY_)}},
       _dK_,
       _dJ_]);
    function gcata_ground$0(tr,inh,subj)
     {return caml_call3(caml_get_public_method(tr,-610008541,18),tr,inh,subj)}
    function _dL_(_aeM_)
     {var
       _aeN_=caml_call2(CamlinternalOO[3],_aeM_,cst$77),
       _aeO_=caml_call2(CamlinternalOO[3],_aeM_,cst$78),
       _aeP_=caml_call2(CamlinternalOO[7],_aeM_,cst_c_GROUND$8),
       _aeQ_=caml_call6(CamlinternalOO[18],_aeM_,0,_cH_,0,ground_t$0,1)[1];
      function _aeR_(self_22,inh_036,param)
       {var x_038=param[2],x_037=param[1];
        return caml_call6
                (Stdlib_Format[129],
                 inh_036,
                 _dM_,
                 self_22[1 + _aeN_],
                 x_037,
                 self_22[1 + _aeO_],
                 x_038)}
      caml_call3(CamlinternalOO[10],_aeM_,_aeP_,_aeR_);
      return function(_aeW_,_aeV_,_aeU_,_aeT_,_aeS_)
       {var _aeX_=caml_call2(CamlinternalOO[24],_aeV_,_aeM_);
        _aeX_[1 + _aeO_] = _aeT_;
        _aeX_[1 + _aeN_] = _aeU_;
        caml_call1(_aeQ_,_aeX_);
        return caml_call3(CamlinternalOO[26],_aeV_,_aeX_,_aeM_)}}
    var fmt_ground_t$0=caml_call2(CamlinternalOO[19],_cH_,_dL_);
    function fmt_ground$0(fa,fb,inh0,subj)
     {var _aeL_=caml_call3(fmt_ground_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_ground$0,_aeL_,inh0,subj)}
    function _dN_(_aey_)
     {var
       _aez_=caml_call2(CamlinternalOO[3],_aey_,cst$79),
       _aeA_=caml_call2(CamlinternalOO[3],_aey_,cst$80),
       _aeB_=caml_call2(CamlinternalOO[7],_aey_,cst_c_GROUND$9),
       _aeC_=caml_call6(CamlinternalOO[18],_aey_,0,_cH_,0,ground_t$0,1)[1];
      function _aeD_(self_23,inh_039,param)
       {var
         x_041=param[2],
         x_040=param[1],
         _aeK_=caml_call2(self_23[1 + _aeA_],inh_039,x_041);
        return caml_call2(self_23[1 + _aez_],_aeK_,x_040)}
      caml_call3(CamlinternalOO[10],_aey_,_aeB_,_aeD_);
      return function(_aeI_,_aeH_,_aeG_,_aeF_,_aeE_)
       {var _aeJ_=caml_call2(CamlinternalOO[24],_aeH_,_aey_);
        _aeJ_[1 + _aeA_] = _aeF_;
        _aeJ_[1 + _aez_] = _aeG_;
        caml_call1(_aeC_,_aeJ_);
        return caml_call3(CamlinternalOO[26],_aeH_,_aeJ_,_aey_)}}
    var foldr_ground_t$0=caml_call2(CamlinternalOO[19],_cH_,_dN_);
    function foldr_ground$0(fa,fb,inh0,subj)
     {var _aex_=caml_call3(foldr_ground_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_ground$0,_aex_,inh0,subj)}
    function _dO_(_aek_)
     {var
       _ael_=caml_call2(CamlinternalOO[3],_aek_,cst$81),
       _aem_=caml_call2(CamlinternalOO[3],_aek_,cst$82),
       _aen_=caml_call2(CamlinternalOO[7],_aek_,cst_c_GROUND$10),
       _aeo_=caml_call6(CamlinternalOO[18],_aek_,0,_cH_,0,ground_t$0,1)[1];
      function _aep_(self_24,inh_042,param)
       {var
         x_044=param[2],
         x_043=param[1],
         _aew_=caml_call2(self_24[1 + _ael_],inh_042,x_043);
        return caml_call2(self_24[1 + _aem_],_aew_,x_044)}
      caml_call3(CamlinternalOO[10],_aek_,_aen_,_aep_);
      return function(_aeu_,_aet_,_aes_,_aer_,_aeq_)
       {var _aev_=caml_call2(CamlinternalOO[24],_aet_,_aek_);
        _aev_[1 + _aem_] = _aer_;
        _aev_[1 + _ael_] = _aes_;
        caml_call1(_aeo_,_aev_);
        return caml_call3(CamlinternalOO[26],_aet_,_aev_,_aek_)}}
    var foldl_ground_t$0=caml_call2(CamlinternalOO[19],_cH_,_dO_);
    function foldl_ground$0(fa,fb,inh0,subj)
     {var _aej_=caml_call3(foldl_ground_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_ground$0,_aej_,inh0,subj)}
    function _dP_(_ad6_)
     {var
       _ad7_=caml_call2(CamlinternalOO[3],_ad6_,cst$83),
       _ad8_=caml_call2(CamlinternalOO[3],_ad6_,cst$84),
       _ad9_=caml_call2(CamlinternalOO[7],_ad6_,cst_c_GROUND$11),
       _ad__=caml_call6(CamlinternalOO[18],_ad6_,0,_cH_,0,ground_t$0,1)[1];
      function _ad$_(self_25,inh_045,param)
       {var x_047=param[2],x_046=param[1],x_049=inh_045[2],x_048=inh_045[1];
        function _aeg_(param)
         {return caml_call2(self_25[1 + _ad8_],x_049,x_047)}
        function _aeh_(param)
         {return caml_call2(self_25[1 + _ad7_],x_048,x_046)}
        var _aei_=caml_call2(GT[6],1,_aeh_);
        return caml_call2(GT[6],_aei_,_aeg_)}
      caml_call3(CamlinternalOO[10],_ad6_,_ad9_,_ad$_);
      return function(_aee_,_aed_,_aec_,_aeb_,_aea_)
       {var _aef_=caml_call2(CamlinternalOO[24],_aed_,_ad6_);
        _aef_[1 + _ad8_] = _aeb_;
        _aef_[1 + _ad7_] = _aec_;
        caml_call1(_ad__,_aef_);
        return caml_call3(CamlinternalOO[26],_aed_,_aef_,_ad6_)}}
    var compare_ground_t$0=caml_call2(CamlinternalOO[19],_cH_,_dP_);
    function compare_ground$0(fa,fb,inh0,subj)
     {var _ad5_=caml_call3(compare_ground_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_ground$0,_ad5_,inh0,subj)}
    function _dQ_(_adS_)
     {var
       _adT_=caml_call2(CamlinternalOO[3],_adS_,cst$85),
       _adU_=caml_call2(CamlinternalOO[3],_adS_,cst$86),
       _adV_=caml_call2(CamlinternalOO[7],_adS_,cst_c_GROUND$12),
       _adW_=caml_call6(CamlinternalOO[18],_adS_,0,_cH_,0,ground_t$0,1)[1];
      function _adX_(self_26,inh_050,param)
       {var
         x_052=param[2],
         x_051=param[1],
         x_054=inh_050[2],
         x_053=inh_050[1],
         _ad4_=caml_call2(self_26[1 + _adT_],x_053,x_051);
        return _ad4_?caml_call2(self_26[1 + _adU_],x_054,x_052):_ad4_}
      caml_call3(CamlinternalOO[10],_adS_,_adV_,_adX_);
      return function(_ad2_,_ad1_,_ad0_,_adZ_,_adY_)
       {var _ad3_=caml_call2(CamlinternalOO[24],_ad1_,_adS_);
        _ad3_[1 + _adU_] = _adZ_;
        _ad3_[1 + _adT_] = _ad0_;
        caml_call1(_adW_,_ad3_);
        return caml_call3(CamlinternalOO[26],_ad1_,_ad3_,_adS_)}}
    var eq_ground_t$0=caml_call2(CamlinternalOO[19],_cH_,_dQ_);
    function eq_ground$0(fa,fb,inh0,subj)
     {var _adR_=caml_call3(eq_ground_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_ground$0,_adR_,inh0,subj)}
    function _dR_(_adp_)
     {var
       _adq_=caml_call2(CamlinternalOO[3],_adp_,cst$87),
       _adr_=caml_call2(CamlinternalOO[3],_adp_,cst$88),
       _ads_=caml_call2(CamlinternalOO[7],_adp_,cst_c_GROUND$13),
       _adt_=caml_call6(CamlinternalOO[18],_adp_,0,_cH_,0,ground_t$0,1)[1];
      function _adu_(self_27,param,_adB_)
       {var
         x_056=_adB_[2],
         x_055=_adB_[1],
         _adC_=caml_call2(self_27[1 + _adr_],0,x_056),
         _adD_=caml_call2(Stdlib_List[4],_adC_,0),
         _adE_=caml_call1(HTML[10],_adD_),
         _adF_=caml_call2(HTML[25],0,_adE_),
         _adG_=caml_call2(Stdlib_List[4],_adF_,0),
         _adH_=caml_call2(self_27[1 + _adq_],0,x_055),
         _adI_=caml_call2(Stdlib_List[4],_adH_,0),
         _adJ_=caml_call1(HTML[10],_adI_),
         _adK_=caml_call2(HTML[25],0,_adJ_),
         _adL_=caml_call2(Stdlib_List[4],_adK_,_adG_),
         _adM_=caml_call1(HTML[10],_adL_),
         _adN_=caml_call2(HTML[23],0,_adM_),
         _adO_=caml_call2(Stdlib_List[4],_adN_,0),
         _adP_=caml_call1(HTML[3],cst_tuple$0),
         _adQ_=caml_call2(Stdlib_List[4],_adP_,_adO_);
        return caml_call1(HTML[10],_adQ_)}
      caml_call3(CamlinternalOO[10],_adp_,_ads_,_adu_);
      return function(_adz_,_ady_,_adx_,_adw_,_adv_)
       {var _adA_=caml_call2(CamlinternalOO[24],_ady_,_adp_);
        _adA_[1 + _adr_] = _adw_;
        _adA_[1 + _adq_] = _adx_;
        caml_call1(_adt_,_adA_);
        return caml_call3(CamlinternalOO[26],_ady_,_adA_,_adp_)}}
    var html_ground_t=caml_call2(CamlinternalOO[19],_cH_,_dR_);
    function _dS_(fa,fb,inh0,subj)
     {var _ado_=caml_call3(html_ground_t[1],0,fa,fb);
      return caml_call4(GT[2],gcata_ground$0,_ado_,inh0,subj)}
    function _dT_(_ada_)
     {var
       _adb_=caml_call2(CamlinternalOO[3],_ada_,cst$89),
       _adc_=caml_call2(CamlinternalOO[3],_ada_,cst$90),
       _add_=caml_call2(CamlinternalOO[7],_ada_,cst_c_GROUND$14),
       _ade_=caml_call6(CamlinternalOO[18],_ada_,0,_cH_,0,ground_t$0,1)[1];
      function _adf_(self_28,param,_adm_)
       {var
         x_058=_adm_[2],
         x_057=_adm_[1],
         _adn_=caml_call2(self_28[1 + _adc_],0,x_058);
        return [0,caml_call2(self_28[1 + _adb_],0,x_057),_adn_]}
      caml_call3(CamlinternalOO[10],_ada_,_add_,_adf_);
      return function(_adk_,_adj_,_adi_,_adh_,_adg_)
       {var _adl_=caml_call2(CamlinternalOO[24],_adj_,_ada_);
        _adl_[1 + _adc_] = _adh_;
        _adl_[1 + _adb_] = _adi_;
        caml_call1(_ade_,_adl_);
        return caml_call3(CamlinternalOO[26],_adj_,_adl_,_ada_)}}
    var gmap_ground_t$0=caml_call2(CamlinternalOO[19],_cH_,_dT_);
    function _dU_(fa,fb,inh0,subj)
     {var _ac$_=caml_call3(gmap_ground_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_ground$0,_ac$_,inh0,subj)}
    function _dV_(_acW_)
     {var
       _acX_=caml_call2(CamlinternalOO[3],_acW_,cst$91),
       _acY_=caml_call2(CamlinternalOO[3],_acW_,cst$92),
       _acZ_=caml_call2(CamlinternalOO[7],_acW_,cst_c_GROUND$15),
       _ac0_=caml_call6(CamlinternalOO[18],_acW_,0,_cH_,0,ground_t$0,1)[1];
      function _ac1_(self_29,param,_ac8_)
       {var
         x_060=_ac8_[2],
         x_059=_ac8_[1],
         _ac9_=caml_call2(self_29[1 + _acY_],0,x_060),
         _ac__=caml_call2(self_29[1 + _acX_],0,x_059);
        return caml_call3(Stdlib_Printf[4],_dW_,_ac__,_ac9_)}
      caml_call3(CamlinternalOO[10],_acW_,_acZ_,_ac1_);
      return function(_ac6_,_ac5_,_ac4_,_ac3_,_ac2_)
       {var _ac7_=caml_call2(CamlinternalOO[24],_ac5_,_acW_);
        _ac7_[1 + _acY_] = _ac3_;
        _ac7_[1 + _acX_] = _ac4_;
        caml_call1(_ac0_,_ac7_);
        return caml_call3(CamlinternalOO[26],_ac5_,_ac7_,_acW_)}}
    var show_ground_t$0=caml_call2(CamlinternalOO[19],_cH_,_dV_);
    function _dX_(fa,fb,inh0,subj)
     {var _acV_=caml_call3(show_ground_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_ground$0,_acV_,inh0,subj)}
    function _dY_(eta){return caml_call2(GT[2],gcata_ground$0,eta)}
    var
     _dZ_=caml_call1(CamlinternalOO[16],_cG_),
     _d0_=caml_call2(CamlinternalOO[8],_dZ_,_cK_),
     _d1_=_d0_[1],
     _d2_=_d0_[2],
     _d3_=_d0_[3],
     _d4_=_d0_[4],
     _d5_=_d0_[5],
     _d6_=_d0_[6],
     _d7_=_d0_[7],
     _d8_=_d0_[8];
    function _d9_(self_30,fa,fb,subj)
     {var _acU_=caml_call1(GT[4],fb);
      return _dX_(caml_call1(GT[4],fa),_acU_,0,subj)}
    function _d__(self_30,fa,fb,subj)
     {var _acT_=caml_call1(GT[4],fb);
      return _dU_(caml_call1(GT[4],fa),_acT_,0,subj)}
    function _d$_(self_30,fa,fb,subj)
     {var _acS_=caml_call1(GT[4],fb);
      return _dS_(caml_call1(GT[4],fa),_acS_,0,subj)}
    function _ea_(self_30){return eq_ground$0}
    function _eb_(self_30){return compare_ground$0}
    function _ec_(self_30){return foldl_ground$0}
    function _ed_(self_30){return foldr_ground$0}
    var
     _ee_=
      [0,
       _d6_,
       function(self_30){return fmt_ground$0},
       _d4_,
       _ed_,
       _d5_,
       _ec_,
       _d8_,
       _eb_,
       _d7_,
       _ea_,
       _d2_,
       _d$_,
       _d3_,
       _d__,
       _d1_,
       _d9_];
    caml_call2(CamlinternalOO[11],_dZ_,_ee_);
    caml_call1(CamlinternalOO[17],_dZ_);
    var
     ground$0=
      [0,gcata_ground$0,caml_call2(CamlinternalOO[24],0,_dZ_),_dY_];
    function html_ground(fa,fb,subj)
     {var _acR_=caml_call1(GT[4],fb);
      return _dS_(caml_call1(GT[4],fa),_acR_,0,subj)}
    function gmap_ground$0(fa,fb,subj)
     {var _acQ_=caml_call1(GT[4],fb);
      return _dU_(caml_call1(GT[4],fa),_acQ_,0,subj)}
    function show_ground$0(fa,fb,subj)
     {var _acP_=caml_call1(GT[4],fb);
      return _dX_(caml_call1(GT[4],fa),_acP_,0,subj)}
    var logic_t$2=[],_ef_=0,_eg_=0;
    caml_update_dummy
     (logic_t$2,
      [0,
       0,
       function(_acK_)
        {caml_call2(CamlinternalOO[8],_acK_,_cJ_);
         var
          _acL_=
           caml_call6(CamlinternalOO[18],_acK_,0,_cJ_,0,logic_t$1,1)[1];
         return function(_acN_,_acM_)
          {var _acO_=caml_call2(CamlinternalOO[24],_acM_,_acK_);
           caml_call1(_acL_,_acO_);
           return caml_call3(CamlinternalOO[26],_acM_,_acO_,_acK_)}},
       _eg_,
       _ef_]);
    function _eh_(_acB_)
     {caml_call2(CamlinternalOO[8],_acB_,_cJ_);
      var
       _acC_=caml_call6(CamlinternalOO[18],_acB_,0,_cJ_,0,logic_t$2,1)[1],
       _acD_=caml_call6(CamlinternalOO[18],_acB_,0,0,_cI_,fmt_logic_t$1,1)[1];
      return function(_acI_,_acH_,_acG_,_acF_,_acE_)
       {var _acJ_=caml_call2(CamlinternalOO[24],_acH_,_acB_);
        caml_call1(_acC_,_acJ_);
        caml_call3
         (_acD_,
          _acJ_,
          function(x_066,param)
           {var x_068=param[2],x_067=param[1];
            return caml_call6
                    (Stdlib_Format[129],x_066,_ei_,_acG_,x_067,_acF_,x_068)},
          _acE_);
        return caml_call3(CamlinternalOO[26],_acH_,_acJ_,_acB_)}}
    var fmt_logic_t$2=caml_call2(CamlinternalOO[19],_cI_,_eh_);
    function fmt_logic$2(fa,fb,inh_061,subj_062)
     {function _acA_(x_063,param)
       {var x_065=param[2],x_064=param[1];
        return caml_call6(Stdlib_Format[129],x_063,_ej_,fa,x_064,fb,x_065)}
      return caml_call4(GT[224],logic,_acA_,inh_061,subj_062)}
    function _ek_(_acr_)
     {caml_call2(CamlinternalOO[8],_acr_,_cJ_);
      var
       _acs_=caml_call6(CamlinternalOO[18],_acr_,0,_cJ_,0,logic_t$2,1)[1],
       _act_=
        caml_call6(CamlinternalOO[18],_acr_,0,0,_cI_,foldr_logic_t$1,1)[1];
      return function(_acy_,_acx_,_acw_,_acv_,_acu_)
       {var _acz_=caml_call2(CamlinternalOO[24],_acx_,_acr_);
        caml_call1(_acs_,_acz_);
        caml_call3
         (_act_,
          _acz_,
          function(x_074,param)
           {var x_076=param[2],x_075=param[1];
            return caml_call2(_acw_,caml_call2(_acv_,x_074,x_076),x_075)},
          _acu_);
        return caml_call3(CamlinternalOO[26],_acx_,_acz_,_acr_)}}
    var foldr_logic_t$2=caml_call2(CamlinternalOO[19],_cI_,_ek_);
    function foldr_logic$2(fa,fb,inh_069,subj_070)
     {function _acq_(x_071,param)
       {var x_073=param[2],x_072=param[1];
        return caml_call2(fa,caml_call2(fb,x_071,x_073),x_072)}
      return caml_call4(GT[226],logic,_acq_,inh_069,subj_070)}
    function _el_(_ach_)
     {caml_call2(CamlinternalOO[8],_ach_,_cJ_);
      var
       _aci_=caml_call6(CamlinternalOO[18],_ach_,0,_cJ_,0,logic_t$2,1)[1],
       _acj_=
        caml_call6(CamlinternalOO[18],_ach_,0,0,_cI_,foldl_logic_t$1,1)[1];
      return function(_aco_,_acn_,_acm_,_acl_,_ack_)
       {var _acp_=caml_call2(CamlinternalOO[24],_acn_,_ach_);
        caml_call1(_aci_,_acp_);
        caml_call3
         (_acj_,
          _acp_,
          function(x_082,param)
           {var x_084=param[2],x_083=param[1];
            return caml_call2(_acl_,caml_call2(_acm_,x_082,x_083),x_084)},
          _ack_);
        return caml_call3(CamlinternalOO[26],_acn_,_acp_,_ach_)}}
    var foldl_logic_t$2=caml_call2(CamlinternalOO[19],_cI_,_el_);
    function foldl_logic$2(fa,fb,inh_077,subj_078)
     {function _acg_(x_079,param)
       {var x_081=param[2],x_080=param[1];
        return caml_call2(fb,caml_call2(fa,x_079,x_080),x_081)}
      return caml_call4(GT[225],logic,_acg_,inh_077,subj_078)}
    function _em_(_ab6_)
     {caml_call2(CamlinternalOO[8],_ab6_,_cJ_);
      var
       _ab7_=caml_call6(CamlinternalOO[18],_ab6_,0,_cJ_,0,logic_t$2,1)[1],
       _ab8_=
        caml_call6(CamlinternalOO[18],_ab6_,0,0,_cI_,compare_logic_t$1,1)[1];
      return function(_acb_,_aca_,_ab$_,_ab__,_ab9_)
       {var _acc_=caml_call2(CamlinternalOO[24],_aca_,_ab6_);
        caml_call1(_ab7_,_acc_);
        caml_call3
         (_ab8_,
          _acc_,
          function(x_090,param)
           {var x_092=param[2],x_091=param[1],x_094=x_090[2],x_093=x_090[1];
            function _acd_(param){return caml_call2(_ab__,x_094,x_092)}
            function _ace_(param){return caml_call2(_ab$_,x_093,x_091)}
            var _acf_=caml_call2(GT[6],1,_ace_);
            return caml_call2(GT[6],_acf_,_acd_)},
          _ab9_);
        return caml_call3(CamlinternalOO[26],_aca_,_acc_,_ab6_)}}
    var compare_logic_t$2=caml_call2(CamlinternalOO[19],_cI_,_em_);
    function compare_logic$2(fa,fb,inh,subj)
     {function _ab2_(x_085,param)
       {var x_087=param[2],x_086=param[1],x_089=x_085[2],x_088=x_085[1];
        function _ab3_(param){return caml_call2(fb,x_089,x_087)}
        function _ab4_(param){return caml_call2(fa,x_088,x_086)}
        var _ab5_=caml_call2(GT[6],1,_ab4_);
        return caml_call2(GT[6],_ab5_,_ab3_)}
      return caml_call4(GT[228],logic,_ab2_,inh,subj)}
    function _en_(_abS_)
     {caml_call2(CamlinternalOO[8],_abS_,_cJ_);
      var
       _abT_=caml_call6(CamlinternalOO[18],_abS_,0,_cJ_,0,logic_t$2,1)[1],
       _abU_=caml_call6(CamlinternalOO[18],_abS_,0,0,_cI_,eq_logic_t$1,1)[1];
      return function(_abZ_,_abY_,_abX_,_abW_,_abV_)
       {var _ab0_=caml_call2(CamlinternalOO[24],_abY_,_abS_);
        caml_call1(_abT_,_ab0_);
        caml_call3
         (_abU_,
          _ab0_,
          function(x_100,param)
           {var
             x_102=param[2],
             x_101=param[1],
             x_104=x_100[2],
             x_103=x_100[1],
             _ab1_=caml_call2(_abX_,x_103,x_101);
            return _ab1_?caml_call2(_abW_,x_104,x_102):_ab1_},
          _abV_);
        return caml_call3(CamlinternalOO[26],_abY_,_ab0_,_abS_)}}
    var eq_logic_t$2=caml_call2(CamlinternalOO[19],_cI_,_en_);
    function eq_logic$2(fa,fb,inh,subj)
     {function _abQ_(x_095,param)
       {var
         x_097=param[2],
         x_096=param[1],
         x_099=x_095[2],
         x_098=x_095[1],
         _abR_=caml_call2(fa,x_098,x_096);
        return _abR_?caml_call2(fb,x_099,x_097):_abR_}
      return caml_call4(GT[227],logic,_abQ_,inh,subj)}
    function _eo_(_abs_)
     {caml_call2(CamlinternalOO[8],_abs_,_cJ_);
      var
       _abt_=caml_call6(CamlinternalOO[18],_abs_,0,_cJ_,0,logic_t$2,1)[1],
       _abu_=caml_call6(CamlinternalOO[18],_abs_,0,0,_cI_,html_logic_t$0,1)[1];
      return function(_abz_,_aby_,_abx_,_abw_,_abv_)
       {var _abA_=caml_call2(CamlinternalOO[24],_aby_,_abs_);
        caml_call1(_abt_,_abA_);
        caml_call3
         (_abu_,
          _abA_,
          function(x_108,param)
           {var
             x_110=param[2],
             x_109=param[1],
             _abB_=caml_call2(_abw_,0,x_110),
             _abC_=caml_call2(Stdlib_List[4],_abB_,0),
             _abD_=caml_call1(HTML[10],_abC_),
             _abE_=caml_call2(HTML[25],0,_abD_),
             _abF_=caml_call2(Stdlib_List[4],_abE_,0),
             _abG_=caml_call2(_abx_,0,x_109),
             _abH_=caml_call2(Stdlib_List[4],_abG_,0),
             _abI_=caml_call1(HTML[10],_abH_),
             _abJ_=caml_call2(HTML[25],0,_abI_),
             _abK_=caml_call2(Stdlib_List[4],_abJ_,_abF_),
             _abL_=caml_call1(HTML[10],_abK_),
             _abM_=caml_call2(HTML[23],0,_abL_),
             _abN_=caml_call2(Stdlib_List[4],_abM_,0),
             _abO_=caml_call1(HTML[3],cst_tuple$1),
             _abP_=caml_call2(Stdlib_List[4],_abO_,_abN_);
            return caml_call1(HTML[10],_abP_)},
          _abv_);
        return caml_call3(CamlinternalOO[26],_aby_,_abA_,_abs_)}}
    var html_logic_t$1=caml_call2(CamlinternalOO[19],_cI_,_eo_);
    function _ep_(fa,fb,param,subj)
     {function _abc_(param)
       {var
         x_107=param[2],
         x_106=param[1],
         _abd_=caml_call2(fb,0,x_107),
         _abe_=caml_call2(Stdlib_List[4],_abd_,0),
         _abf_=caml_call1(HTML[10],_abe_),
         _abg_=caml_call2(HTML[25],0,_abf_),
         _abh_=caml_call2(Stdlib_List[4],_abg_,0),
         _abi_=caml_call2(fa,0,x_106),
         _abj_=caml_call2(Stdlib_List[4],_abi_,0),
         _abk_=caml_call1(HTML[10],_abj_),
         _abl_=caml_call2(HTML[25],0,_abk_),
         _abm_=caml_call2(Stdlib_List[4],_abl_,_abh_),
         _abn_=caml_call1(HTML[10],_abm_),
         _abo_=caml_call2(HTML[23],0,_abn_),
         _abp_=caml_call2(Stdlib_List[4],_abo_,0),
         _abq_=caml_call1(HTML[3],cst_tuple$2),
         _abr_=caml_call2(Stdlib_List[4],_abq_,_abp_);
        return caml_call1(HTML[10],_abr_)}
      return caml_call3(GT[222],logic,_abc_,subj)}
    function _eq_(_aa4_)
     {caml_call2(CamlinternalOO[8],_aa4_,_cJ_);
      var
       _aa5_=caml_call6(CamlinternalOO[18],_aa4_,0,_cJ_,0,logic_t$2,1)[1],
       _aa6_=caml_call6(CamlinternalOO[18],_aa4_,0,0,_cI_,gmap_logic_t$1,1)[1];
      return function(_aa$_,_aa__,_aa9_,_aa8_,_aa7_)
       {var _aba_=caml_call2(CamlinternalOO[24],_aa__,_aa4_);
        caml_call1(_aa5_,_aba_);
        caml_call3
         (_aa6_,
          _aba_,
          function(x_114,param)
           {var
             x_116=param[2],
             x_115=param[1],
             _abb_=caml_call2(_aa8_,x_114,x_116);
            return [0,caml_call2(_aa9_,x_114,x_115),_abb_]},
          _aa7_);
        return caml_call3(CamlinternalOO[26],_aa__,_aba_,_aa4_)}}
    var gmap_logic_t$2=caml_call2(CamlinternalOO[19],_cI_,_eq_);
    function _er_(fa,fb,param,subj)
     {var x_111=0;
      function _aa2_(param)
       {var x_113=param[2],x_112=param[1],_aa3_=caml_call2(fb,x_111,x_113);
        return [0,caml_call2(fa,x_111,x_112),_aa3_]}
      return caml_call3(GT[223],logic,_aa2_,subj)}
    function _es_(_aaR_)
     {caml_call2(CamlinternalOO[8],_aaR_,_cJ_);
      var
       _aaS_=caml_call6(CamlinternalOO[18],_aaR_,0,_cJ_,0,logic_t$2,1)[1],
       _aaT_=caml_call6(CamlinternalOO[18],_aaR_,0,0,_cI_,show_logic_t$1,1)[1];
      return function(_aaY_,_aaX_,_aaW_,_aaV_,_aaU_)
       {var _aaZ_=caml_call2(CamlinternalOO[24],_aaX_,_aaR_);
        caml_call1(_aaS_,_aaZ_);
        caml_call3
         (_aaT_,
          _aaZ_,
          function(x_120,param)
           {var
             x_122=param[2],
             x_121=param[1],
             _aa0_=caml_call2(_aaV_,0,x_122),
             _aa1_=caml_call2(_aaW_,0,x_121);
            return caml_call3(Stdlib_Printf[4],_et_,_aa1_,_aa0_)},
          _aaU_);
        return caml_call3(CamlinternalOO[26],_aaX_,_aaZ_,_aaR_)}}
    var show_logic_t$2=caml_call2(CamlinternalOO[19],_cI_,_es_);
    function _eu_(fa,fb,param,subj)
     {function _aaO_(param)
       {var
         x_119=param[2],
         x_118=param[1],
         _aaP_=caml_call2(fb,0,x_119),
         _aaQ_=caml_call2(fa,0,x_118);
        return caml_call3(Stdlib_Printf[4],_ev_,_aaQ_,_aaP_)}
      return caml_call3(GT[221],logic,_aaO_,subj)}
    function _ew_(eta){return caml_call2(GT[2],gcata_logic,eta)}
    var
     _ex_=caml_call1(CamlinternalOO[16],_cG_),
     _ey_=caml_call2(CamlinternalOO[8],_ex_,_cK_),
     _ez_=_ey_[1],
     _eA_=_ey_[2],
     _eB_=_ey_[3],
     _eC_=_ey_[4],
     _eD_=_ey_[5],
     _eE_=_ey_[6],
     _eF_=_ey_[7],
     _eG_=_ey_[8];
    function _eH_(self_40,fa,fb,subj)
     {var _aaN_=caml_call1(GT[4],fb);
      return _eu_(caml_call1(GT[4],fa),_aaN_,0,subj)}
    function _eI_(self_40,fa,fb,subj)
     {var _aaM_=caml_call1(GT[4],fb);
      return _er_(caml_call1(GT[4],fa),_aaM_,0,subj)}
    function _eJ_(self_40,fa,fb,subj)
     {var _aaL_=caml_call1(GT[4],fb);
      return _ep_(caml_call1(GT[4],fa),_aaL_,0,subj)}
    function _eK_(self_40){return eq_logic$2}
    function _eL_(self_40){return compare_logic$2}
    function _eM_(self_40){return foldl_logic$2}
    function _eN_(self_40){return foldr_logic$2}
    var
     _eO_=
      [0,
       _eE_,
       function(self_40){return fmt_logic$2},
       _eC_,
       _eN_,
       _eD_,
       _eM_,
       _eG_,
       _eL_,
       _eF_,
       _eK_,
       _eA_,
       _eJ_,
       _eB_,
       _eI_,
       _ez_,
       _eH_];
    caml_call2(CamlinternalOO[11],_ex_,_eO_);
    caml_call1(CamlinternalOO[17],_ex_);
    var _eP_=[0,gcata_logic,caml_call2(CamlinternalOO[24],0,_ex_),_ew_];
    function html_logic$0(fa,fb,subj)
     {var _aaK_=caml_call1(GT[4],fb);
      return _ep_(caml_call1(GT[4],fa),_aaK_,0,subj)}
    function gmap_logic$1(fa,fb,subj)
     {var _aaJ_=caml_call1(GT[4],fb);
      return _er_(caml_call1(GT[4],fa),_aaJ_,0,subj)}
    function show_logic$1(fa,fb,subj)
     {var _aaI_=caml_call1(GT[4],fb);
      return _eu_(caml_call1(GT[4],fa),_aaI_,0,subj)}
    var pair_t=[],_eQ_=0,_eR_=0;
    caml_update_dummy
     (pair_t,
      [0,
       0,
       function(_aaD_)
        {caml_call2(CamlinternalOO[7],_aaD_,cst_c_GROUND$16);
         var
          _aaE_=
           caml_call6(CamlinternalOO[18],_aaD_,0,_cH_,0,ground_t$0,1)[1];
         return function(_aaG_,_aaF_)
          {var _aaH_=caml_call2(CamlinternalOO[24],_aaF_,_aaD_);
           caml_call1(_aaE_,_aaH_);
           return caml_call3(CamlinternalOO[26],_aaF_,_aaH_,_aaD_)}},
       _eR_,
       _eQ_]);
    function _eS_(_aau_)
     {caml_call2(CamlinternalOO[7],_aau_,cst_c_GROUND$17);
      var
       _aav_=caml_call6(CamlinternalOO[18],_aau_,0,_cH_,0,pair_t,1)[1],
       _aaw_=caml_call6(CamlinternalOO[18],_aau_,0,0,_cH_,fmt_ground_t$0,1)[1];
      return function(_aaB_,_aaA_,_aaz_,_aay_,_aax_)
       {var _aaC_=caml_call2(CamlinternalOO[24],_aaA_,_aau_);
        caml_call1(_aav_,_aaC_);
        caml_call4(_aaw_,_aaC_,_aaz_,_aay_,_aax_);
        return caml_call3(CamlinternalOO[26],_aaA_,_aaC_,_aau_)}}
    var fmt_pair_t=caml_call2(CamlinternalOO[19],_cH_,_eS_);
    function fmt_pair(fa,fb,inh_123,subj_124)
     {return caml_call5(GT[224],ground$0,fa,fb,inh_123,subj_124)}
    function _eT_(_aal_)
     {caml_call2(CamlinternalOO[7],_aal_,cst_c_GROUND$18);
      var
       _aam_=caml_call6(CamlinternalOO[18],_aal_,0,_cH_,0,pair_t,1)[1],
       _aan_=
        caml_call6(CamlinternalOO[18],_aal_,0,0,_cH_,foldr_ground_t$0,1)[1];
      return function(_aas_,_aar_,_aaq_,_aap_,_aao_)
       {var _aat_=caml_call2(CamlinternalOO[24],_aar_,_aal_);
        caml_call1(_aam_,_aat_);
        caml_call4(_aan_,_aat_,_aaq_,_aap_,_aao_);
        return caml_call3(CamlinternalOO[26],_aar_,_aat_,_aal_)}}
    var foldr_pair_t=caml_call2(CamlinternalOO[19],_cH_,_eT_);
    function foldr_pair(fa,fb,inh_125,subj_126)
     {return caml_call5(GT[226],ground$0,fa,fb,inh_125,subj_126)}
    function _eU_(_aac_)
     {caml_call2(CamlinternalOO[7],_aac_,cst_c_GROUND$19);
      var
       _aad_=caml_call6(CamlinternalOO[18],_aac_,0,_cH_,0,pair_t,1)[1],
       _aae_=
        caml_call6(CamlinternalOO[18],_aac_,0,0,_cH_,foldl_ground_t$0,1)[1];
      return function(_aaj_,_aai_,_aah_,_aag_,_aaf_)
       {var _aak_=caml_call2(CamlinternalOO[24],_aai_,_aac_);
        caml_call1(_aad_,_aak_);
        caml_call4(_aae_,_aak_,_aah_,_aag_,_aaf_);
        return caml_call3(CamlinternalOO[26],_aai_,_aak_,_aac_)}}
    var foldl_pair_t=caml_call2(CamlinternalOO[19],_cH_,_eU_);
    function foldl_pair(fa,fb,inh_127,subj_128)
     {return caml_call5(GT[225],ground$0,fa,fb,inh_127,subj_128)}
    function _eV_(_$5_)
     {caml_call2(CamlinternalOO[7],_$5_,cst_c_GROUND$20);
      var
       _$6_=caml_call6(CamlinternalOO[18],_$5_,0,_cH_,0,pair_t,1)[1],
       _$7_=
        caml_call6(CamlinternalOO[18],_$5_,0,0,_cH_,compare_ground_t$0,1)[1];
      return function(_aaa_,_$$_,_$__,_$9_,_$8_)
       {var _aab_=caml_call2(CamlinternalOO[24],_$$_,_$5_);
        caml_call1(_$6_,_aab_);
        caml_call4(_$7_,_aab_,_$__,_$9_,_$8_);
        return caml_call3(CamlinternalOO[26],_$$_,_aab_,_$5_)}}
    var compare_pair_t=caml_call2(CamlinternalOO[19],_cH_,_eV_);
    function compare_pair(fa,fb,inh,subj)
     {return caml_call5(GT[228],ground$0,fa,fb,inh,subj)}
    function _eW_(_$W_)
     {caml_call2(CamlinternalOO[7],_$W_,cst_c_GROUND$21);
      var
       _$X_=caml_call6(CamlinternalOO[18],_$W_,0,_cH_,0,pair_t,1)[1],
       _$Y_=caml_call6(CamlinternalOO[18],_$W_,0,0,_cH_,eq_ground_t$0,1)[1];
      return function(_$3_,_$2_,_$1_,_$0_,_$Z_)
       {var _$4_=caml_call2(CamlinternalOO[24],_$2_,_$W_);
        caml_call1(_$X_,_$4_);
        caml_call4(_$Y_,_$4_,_$1_,_$0_,_$Z_);
        return caml_call3(CamlinternalOO[26],_$2_,_$4_,_$W_)}}
    var eq_pair_t=caml_call2(CamlinternalOO[19],_cH_,_eW_);
    function eq_pair(fa,fb,inh,subj)
     {return caml_call5(GT[227],ground$0,fa,fb,inh,subj)}
    function _eX_(_$N_)
     {caml_call2(CamlinternalOO[7],_$N_,cst_c_GROUND$22);
      var
       _$O_=caml_call6(CamlinternalOO[18],_$N_,0,_cH_,0,pair_t,1)[1],
       _$P_=caml_call6(CamlinternalOO[18],_$N_,0,0,_cH_,html_ground_t,1)[1];
      return function(_$U_,_$T_,_$S_,_$R_,_$Q_)
       {var _$V_=caml_call2(CamlinternalOO[24],_$T_,_$N_);
        caml_call1(_$O_,_$V_);
        caml_call4(_$P_,_$V_,_$S_,_$R_,_$Q_);
        return caml_call3(CamlinternalOO[26],_$T_,_$V_,_$N_)}}
    var html_pair_t=caml_call2(CamlinternalOO[19],_cH_,_eX_);
    function _eY_(fa,fb,param,subj)
     {var _$L_=caml_call1(fb,0),_$M_=caml_call1(fa,0);
      return caml_call4(GT[222],ground$0,_$M_,_$L_,subj)}
    function _eZ_(_$C_)
     {caml_call2(CamlinternalOO[7],_$C_,cst_c_GROUND$23);
      var
       _$D_=caml_call6(CamlinternalOO[18],_$C_,0,_cH_,0,pair_t,1)[1],
       _$E_=caml_call6(CamlinternalOO[18],_$C_,0,0,_cH_,gmap_ground_t$0,1)[1];
      return function(_$J_,_$I_,_$H_,_$G_,_$F_)
       {var _$K_=caml_call2(CamlinternalOO[24],_$I_,_$C_);
        caml_call1(_$D_,_$K_);
        caml_call4(_$E_,_$K_,_$H_,_$G_,_$F_);
        return caml_call3(CamlinternalOO[26],_$I_,_$K_,_$C_)}}
    var gmap_pair_t=caml_call2(CamlinternalOO[19],_cH_,_eZ_);
    function _e0_(fa,fb,param,subj)
     {var _$A_=caml_call1(fb,0),_$B_=caml_call1(fa,0);
      return caml_call4(GT[223],ground$0,_$B_,_$A_,subj)}
    function _e1_(_$r_)
     {caml_call2(CamlinternalOO[7],_$r_,cst_c_GROUND$24);
      var
       _$s_=caml_call6(CamlinternalOO[18],_$r_,0,_cH_,0,pair_t,1)[1],
       _$t_=caml_call6(CamlinternalOO[18],_$r_,0,0,_cH_,show_ground_t$0,1)[1];
      return function(_$y_,_$x_,_$w_,_$v_,_$u_)
       {var _$z_=caml_call2(CamlinternalOO[24],_$x_,_$r_);
        caml_call1(_$s_,_$z_);
        caml_call4(_$t_,_$z_,_$w_,_$v_,_$u_);
        return caml_call3(CamlinternalOO[26],_$x_,_$z_,_$r_)}}
    var show_pair_t=caml_call2(CamlinternalOO[19],_cH_,_e1_);
    function _e2_(fa,fb,param,subj)
     {var _$p_=caml_call1(fb,0),_$q_=caml_call1(fa,0);
      return caml_call4(GT[221],ground$0,_$q_,_$p_,subj)}
    var
     _e3_=caml_call1(CamlinternalOO[16],_cG_),
     _e4_=caml_call2(CamlinternalOO[8],_e3_,_cK_),
     _e5_=_e4_[1],
     _e6_=_e4_[2],
     _e7_=_e4_[3],
     _e8_=_e4_[4],
     _e9_=_e4_[5],
     _e__=_e4_[6],
     _e$_=_e4_[7],
     _fa_=_e4_[8];
    function _fb_(self_50,fa,fb,subj)
     {var _$o_=caml_call1(GT[4],fb);
      return _e2_(caml_call1(GT[4],fa),_$o_,0,subj)}
    function _fc_(self_50,fa,fb,subj)
     {var _$n_=caml_call1(GT[4],fb);
      return _e0_(caml_call1(GT[4],fa),_$n_,0,subj)}
    function _fd_(self_50,fa,fb,subj)
     {var _$m_=caml_call1(GT[4],fb);
      return _eY_(caml_call1(GT[4],fa),_$m_,0,subj)}
    function _fe_(self_50){return eq_pair}
    function _ff_(self_50){return compare_pair}
    function _fg_(self_50){return foldl_pair}
    function _fh_(self_50){return foldr_pair}
    var
     _fi_=
      [0,
       _e__,
       function(self_50){return fmt_pair},
       _e8_,
       _fh_,
       _e9_,
       _fg_,
       _fa_,
       _ff_,
       _e$_,
       _fe_,
       _e6_,
       _fd_,
       _e7_,
       _fc_,
       _e5_,
       _fb_];
    caml_call2(CamlinternalOO[11],_e3_,_fi_);
    caml_call1(CamlinternalOO[17],_e3_);
    caml_call2(CamlinternalOO[24],0,_e3_);
    function html_pair(fa,fb,subj)
     {var _$l_=caml_call1(GT[4],fb);
      return _eY_(caml_call1(GT[4],fa),_$l_,0,subj)}
    function gmap_pair(fa,fb,subj)
     {var _$k_=caml_call1(GT[4],fb);
      return _e0_(caml_call1(GT[4],fa),_$k_,0,subj)}
    function show_pair(fa,fb,subj)
     {var _$j_=caml_call1(GT[4],fb);
      return _e2_(caml_call1(GT[4],fa),_$j_,0,subj)}
    var pair_logic_t=[],_fj_=0,_fk_=0;
    caml_update_dummy
     (pair_logic_t,
      [0,
       0,
       function(_$e_)
        {caml_call2(CamlinternalOO[8],_$e_,_cJ_);
         var _$f_=caml_call6(CamlinternalOO[18],_$e_,0,_cJ_,0,logic_t$2,1)[1];
         return function(_$h_,_$g_)
          {var _$i_=caml_call2(CamlinternalOO[24],_$g_,_$e_);
           caml_call1(_$f_,_$i_);
           return caml_call3(CamlinternalOO[26],_$g_,_$i_,_$e_)}},
       _fk_,
       _fj_]);
    function _fl_(__7_)
     {caml_call2(CamlinternalOO[8],__7_,_cJ_);
      var
       __8_=caml_call6(CamlinternalOO[18],__7_,0,_cJ_,0,pair_logic_t,1)[1],
       __9_=caml_call6(CamlinternalOO[18],__7_,0,0,_cI_,fmt_logic_t$2,1)[1];
      return function(_$c_,_$b_,_$a_,__$_,____)
       {var _$d_=caml_call2(CamlinternalOO[24],_$b_,__7_);
        caml_call1(__8_,_$d_);
        caml_call4(__9_,_$d_,_$a_,__$_,____);
        return caml_call3(CamlinternalOO[26],_$b_,_$d_,__7_)}}
    var fmt_pair_logic_t=caml_call2(CamlinternalOO[19],_cI_,_fl_);
    function fmt_pair_logic(fa,fb,inh_129,subj_130)
     {return caml_call5(GT[224],_eP_,fa,fb,inh_129,subj_130)}
    function _fm_(__Y_)
     {caml_call2(CamlinternalOO[8],__Y_,_cJ_);
      var
       __Z_=caml_call6(CamlinternalOO[18],__Y_,0,_cJ_,0,pair_logic_t,1)[1],
       __0_=caml_call6(CamlinternalOO[18],__Y_,0,0,_cI_,foldr_logic_t$2,1)[1];
      return function(__5_,__4_,__3_,__2_,__1_)
       {var __6_=caml_call2(CamlinternalOO[24],__4_,__Y_);
        caml_call1(__Z_,__6_);
        caml_call4(__0_,__6_,__3_,__2_,__1_);
        return caml_call3(CamlinternalOO[26],__4_,__6_,__Y_)}}
    var foldr_pair_logic_t=caml_call2(CamlinternalOO[19],_cI_,_fm_);
    function foldr_pair_logic(fa,fb,inh_131,subj_132)
     {return caml_call5(GT[226],_eP_,fa,fb,inh_131,subj_132)}
    function _fn_(__P_)
     {caml_call2(CamlinternalOO[8],__P_,_cJ_);
      var
       __Q_=caml_call6(CamlinternalOO[18],__P_,0,_cJ_,0,pair_logic_t,1)[1],
       __R_=caml_call6(CamlinternalOO[18],__P_,0,0,_cI_,foldl_logic_t$2,1)[1];
      return function(__W_,__V_,__U_,__T_,__S_)
       {var __X_=caml_call2(CamlinternalOO[24],__V_,__P_);
        caml_call1(__Q_,__X_);
        caml_call4(__R_,__X_,__U_,__T_,__S_);
        return caml_call3(CamlinternalOO[26],__V_,__X_,__P_)}}
    var foldl_pair_logic_t=caml_call2(CamlinternalOO[19],_cI_,_fn_);
    function foldl_pair_logic(fa,fb,inh_133,subj_134)
     {return caml_call5(GT[225],_eP_,fa,fb,inh_133,subj_134)}
    function _fo_(__G_)
     {caml_call2(CamlinternalOO[8],__G_,_cJ_);
      var
       __H_=caml_call6(CamlinternalOO[18],__G_,0,_cJ_,0,pair_logic_t,1)[1],
       __I_=
        caml_call6(CamlinternalOO[18],__G_,0,0,_cI_,compare_logic_t$2,1)[1];
      return function(__N_,__M_,__L_,__K_,__J_)
       {var __O_=caml_call2(CamlinternalOO[24],__M_,__G_);
        caml_call1(__H_,__O_);
        caml_call4(__I_,__O_,__L_,__K_,__J_);
        return caml_call3(CamlinternalOO[26],__M_,__O_,__G_)}}
    var compare_pair_logic_t=caml_call2(CamlinternalOO[19],_cI_,_fo_);
    function compare_pair_logic(fa,fb,inh,subj)
     {return caml_call5(GT[228],_eP_,fa,fb,inh,subj)}
    function _fp_(__x_)
     {caml_call2(CamlinternalOO[8],__x_,_cJ_);
      var
       __y_=caml_call6(CamlinternalOO[18],__x_,0,_cJ_,0,pair_logic_t,1)[1],
       __z_=caml_call6(CamlinternalOO[18],__x_,0,0,_cI_,eq_logic_t$2,1)[1];
      return function(__E_,__D_,__C_,__B_,__A_)
       {var __F_=caml_call2(CamlinternalOO[24],__D_,__x_);
        caml_call1(__y_,__F_);
        caml_call4(__z_,__F_,__C_,__B_,__A_);
        return caml_call3(CamlinternalOO[26],__D_,__F_,__x_)}}
    var eq_pair_logic_t=caml_call2(CamlinternalOO[19],_cI_,_fp_);
    function eq_pair_logic(fa,fb,inh,subj)
     {return caml_call5(GT[227],_eP_,fa,fb,inh,subj)}
    function _fq_(__o_)
     {caml_call2(CamlinternalOO[8],__o_,_cJ_);
      var
       __p_=caml_call6(CamlinternalOO[18],__o_,0,_cJ_,0,pair_logic_t,1)[1],
       __q_=caml_call6(CamlinternalOO[18],__o_,0,0,_cI_,html_logic_t$1,1)[1];
      return function(__v_,__u_,__t_,__s_,__r_)
       {var __w_=caml_call2(CamlinternalOO[24],__u_,__o_);
        caml_call1(__p_,__w_);
        caml_call4(__q_,__w_,__t_,__s_,__r_);
        return caml_call3(CamlinternalOO[26],__u_,__w_,__o_)}}
    var html_pair_logic_t=caml_call2(CamlinternalOO[19],_cI_,_fq_);
    function _fr_(fa,fb,param,subj)
     {var __m_=caml_call1(fb,0),__n_=caml_call1(fa,0);
      return caml_call4(GT[222],_eP_,__n_,__m_,subj)}
    function _fs_(__d_)
     {caml_call2(CamlinternalOO[8],__d_,_cJ_);
      var
       __e_=caml_call6(CamlinternalOO[18],__d_,0,_cJ_,0,pair_logic_t,1)[1],
       __f_=caml_call6(CamlinternalOO[18],__d_,0,0,_cI_,gmap_logic_t$2,1)[1];
      return function(__k_,__j_,__i_,__h_,__g_)
       {var __l_=caml_call2(CamlinternalOO[24],__j_,__d_);
        caml_call1(__e_,__l_);
        caml_call4(__f_,__l_,__i_,__h_,__g_);
        return caml_call3(CamlinternalOO[26],__j_,__l_,__d_)}}
    var gmap_pair_logic_t=caml_call2(CamlinternalOO[19],_cI_,_fs_);
    function _ft_(fa,fb,param,subj)
     {var __b_=caml_call1(fb,0),__c_=caml_call1(fa,0);
      return caml_call4(GT[223],_eP_,__c_,__b_,subj)}
    function _fu_(_Z4_)
     {caml_call2(CamlinternalOO[8],_Z4_,_cJ_);
      var
       _Z5_=caml_call6(CamlinternalOO[18],_Z4_,0,_cJ_,0,pair_logic_t,1)[1],
       _Z6_=caml_call6(CamlinternalOO[18],_Z4_,0,0,_cI_,show_logic_t$2,1)[1];
      return function(_Z$_,_Z__,_Z9_,_Z8_,_Z7_)
       {var __a_=caml_call2(CamlinternalOO[24],_Z__,_Z4_);
        caml_call1(_Z5_,__a_);
        caml_call4(_Z6_,__a_,_Z9_,_Z8_,_Z7_);
        return caml_call3(CamlinternalOO[26],_Z__,__a_,_Z4_)}}
    var show_pair_logic_t=caml_call2(CamlinternalOO[19],_cI_,_fu_);
    function _fv_(fa,fb,param,subj)
     {var _Z2_=caml_call1(fb,0),_Z3_=caml_call1(fa,0);
      return caml_call4(GT[221],_eP_,_Z3_,_Z2_,subj)}
    function _fw_(eta){return caml_call2(GT[2],gcata_logic,eta)}
    var
     _fx_=caml_call1(CamlinternalOO[16],_cG_),
     _fy_=caml_call2(CamlinternalOO[8],_fx_,_cK_),
     _fz_=_fy_[1],
     _fA_=_fy_[2],
     _fB_=_fy_[3],
     _fC_=_fy_[4],
     _fD_=_fy_[5],
     _fE_=_fy_[6],
     _fF_=_fy_[7],
     _fG_=_fy_[8];
    function _fH_(self_60,fa,fb,subj)
     {var _Z1_=caml_call1(GT[4],fb);
      return _fv_(caml_call1(GT[4],fa),_Z1_,0,subj)}
    function _fI_(self_60,fa,fb,subj)
     {var _Z0_=caml_call1(GT[4],fb);
      return _ft_(caml_call1(GT[4],fa),_Z0_,0,subj)}
    function _fJ_(self_60,fa,fb,subj)
     {var _ZZ_=caml_call1(GT[4],fb);
      return _fr_(caml_call1(GT[4],fa),_ZZ_,0,subj)}
    function _fK_(self_60){return eq_pair_logic}
    function _fL_(self_60){return compare_pair_logic}
    function _fM_(self_60){return foldl_pair_logic}
    function _fN_(self_60){return foldr_pair_logic}
    var
     _fO_=
      [0,
       _fE_,
       function(self_60){return fmt_pair_logic},
       _fC_,
       _fN_,
       _fD_,
       _fM_,
       _fG_,
       _fL_,
       _fF_,
       _fK_,
       _fA_,
       _fJ_,
       _fB_,
       _fI_,
       _fz_,
       _fH_];
    caml_call2(CamlinternalOO[11],_fx_,_fO_);
    caml_call1(CamlinternalOO[17],_fx_);
    var pair_logic=[0,gcata_logic,caml_call2(CamlinternalOO[24],0,_fx_),_fw_];
    function html_pair_logic(fa,fb,subj)
     {var _ZY_=caml_call1(GT[4],fb);
      return _fr_(caml_call1(GT[4],fa),_ZY_,0,subj)}
    function gmap_pair_logic(fa,fb,subj)
     {var _ZX_=caml_call1(GT[4],fb);
      return _ft_(caml_call1(GT[4],fa),_ZX_,0,subj)}
    function show_pair_logic(fa,fb,subj)
     {var _ZW_=caml_call1(GT[4],fb);
      return _fv_(caml_call1(GT[4],fa),_ZW_,0,subj)}
    var
     _fP_=_eP_[3],
     _fQ_=caml_call1(CamlinternalOO[16],_cG_),
     _fR_=caml_call2(CamlinternalOO[8],_fQ_,_cK_),
     _fS_=_fR_[1],
     _fT_=_fR_[2],
     _fU_=_fR_[3],
     _fV_=_fR_[4],
     _fW_=_fR_[5],
     _fX_=_fR_[6],
     _fY_=_fR_[7],
     _fZ_=_fR_[8];
    function _f0_(self_61,fa,fb)
     {function _ZV_(l){return caml_call4(GT[221],ground$0,fa,fb,l)}
      return caml_call2(GT[221],logic,_ZV_)}
    function _f1_(self_61)
     {var _ZU_=_eP_[2];
      return caml_call1(caml_get_public_method(_ZU_,5096781,19),_ZU_)}
    function _f2_(self_61)
     {var _ZT_=_eP_[2];
      return caml_call1(caml_get_public_method(_ZT_,-988375701,20),_ZT_)}
    function _f3_(self_61)
     {var _ZS_=_eP_[2];
      return caml_call1(caml_get_public_method(_ZS_,76555601,21),_ZS_)}
    function _f4_(self_61)
     {var _ZR_=_eP_[2];
      return caml_call1(caml_get_public_method(_ZR_,76555595,22),_ZR_)}
    function _f5_(self_61)
     {var _ZQ_=_eP_[2];
      return caml_call1(caml_get_public_method(_ZQ_,22636,23),_ZQ_)}
    function _f6_(self_61)
     {var _ZP_=_eP_[2];
      return caml_call1(caml_get_public_method(_ZP_,-999816043,24),_ZP_)}
    var
     _f7_=
      [0,
       _fZ_,
       function(self_61)
        {var _ZO_=_eP_[2];
         return caml_call1(caml_get_public_method(_ZO_,57219237,25),_ZO_)},
       _fU_,
       _f6_,
       _fY_,
       _f5_,
       _fW_,
       _f4_,
       _fV_,
       _f3_,
       _fT_,
       _f2_,
       _fX_,
       _f1_,
       _fS_,
       _f0_];
    caml_call2(CamlinternalOO[11],_fQ_,_f7_);
    caml_call1(CamlinternalOO[17],_fQ_);
    var
     _f8_=caml_call2(CamlinternalOO[24],0,_fQ_),
     logic$1=[0,_eP_[1],_f8_,_fP_];
    function inj$0(f,g,p){return [1,caml_call4(GT[223],ground$0,f,g,p)]}
    function pair(x,y){return [0,x,y]}
    function reify$5(ra,rb)
     {var symbol_bind=_p_[3];
      function _ZM_(self)
       {var
         _ZN_=
          caml_call2
           (symbol_bind,
            ra,
            function(fa)
             {return caml_call2
                      (symbol_bind,
                       rb,
                       function(fb)
                        {function foo(param)
                          {if(0 === param[0])
                            {var xs=param[2],v=param[1];
                             return [0,v,caml_call2(Stdlib_List[19],foo,xs)]}
                           var x=param[1];
                           return [1,caml_call4(GT[223],t$0,fa,fb,x)]}
                         return caml_call1(_p_[1],foo)})});
        return caml_call2(Reifier[4],Reifier[1],_ZN_)}
      return caml_call1(Reifier[7],_ZM_)}
    function prj_exn$1(ra,rb)
     {var
       symbol_bind=_p_[3],
       _ZK_=
        caml_call2
         (symbol_bind,
          ra,
          function(fa)
           {return caml_call2
                    (symbol_bind,
                     rb,
                     function(fb)
                      {function _ZL_(x){return caml_call4(GT[223],t$0,fa,fb,x)}
                       return caml_call1(_p_[1],_ZL_)})});
      return caml_call2(Reifier[4],Reifier[2],_ZK_)}
    var
     OCanren_Pair=
      [0,
       t_t$0,
       gcata_t$0,
       fmt_t_t$0,
       fmt_t$0,
       foldr_t_t$0,
       foldr_t$0,
       foldl_t_t$0,
       foldl_t$0,
       compare_t_t$0,
       compare_t$0,
       eq_t_t$0,
       eq_t$0,
       html_t_t,
       html_t,
       gmap_t_t$0,
       gmap_t$0,
       show_t_t$0,
       show_t$0,
       t$0,
       ground_t$0,
       gcata_ground$0,
       fmt_ground_t$0,
       fmt_ground$0,
       foldr_ground_t$0,
       foldr_ground$0,
       foldl_ground_t$0,
       foldl_ground$0,
       compare_ground_t$0,
       compare_ground$0,
       eq_ground_t$0,
       eq_ground$0,
       html_ground_t,
       html_ground,
       gmap_ground_t$0,
       gmap_ground$0,
       show_ground_t$0,
       show_ground$0,
       ground$0,
       logic_t$2,
       gcata_logic,
       fmt_logic_t$2,
       fmt_logic$2,
       foldr_logic_t$2,
       foldr_logic$2,
       foldl_logic_t$2,
       foldl_logic$2,
       compare_logic_t$2,
       compare_logic$2,
       eq_logic_t$2,
       eq_logic$2,
       html_logic_t$1,
       html_logic$0,
       gmap_logic_t$2,
       gmap_logic$1,
       show_logic_t$2,
       show_logic$1,
       logic$1,
       pair_t,
       gcata_ground$0,
       fmt_pair_t,
       fmt_pair,
       foldr_pair_t,
       foldr_pair,
       foldl_pair_t,
       foldl_pair,
       compare_pair_t,
       compare_pair,
       eq_pair_t,
       eq_pair,
       html_pair_t,
       html_pair,
       gmap_pair_t,
       gmap_pair,
       show_pair_t,
       show_pair,
       pair_logic_t,
       gcata_logic,
       fmt_pair_logic_t,
       fmt_pair_logic,
       foldr_pair_logic_t,
       foldr_pair_logic,
       foldl_pair_logic_t,
       foldl_pair_logic,
       compare_pair_logic_t,
       compare_pair_logic,
       eq_pair_logic_t,
       eq_pair_logic,
       html_pair_logic_t,
       html_pair_logic,
       gmap_pair_logic_t,
       gmap_pair_logic,
       show_pair_logic_t,
       show_pair_logic,
       pair_logic,
       inj$0,
       pair,
       reify$5,
       prj_exn$1,
       reify$5,
       prj_exn$1];
    caml_register_global(370,OCanren_Pair,"OCanren__Pair");
    var logic_t$3=[],_gc_=0,_gd_=0;
    caml_update_dummy
     (logic_t$3,
      [0,
       0,
       function(_ZF_)
        {caml_call2(CamlinternalOO[8],_ZF_,_gb_);
         var _ZG_=caml_call6(CamlinternalOO[18],_ZF_,0,_gb_,0,logic_t,1)[1];
         return function(_ZI_,_ZH_)
          {var _ZJ_=caml_call2(CamlinternalOO[24],_ZH_,_ZF_);
           caml_call1(_ZG_,_ZJ_);
           return caml_call3(CamlinternalOO[26],_ZH_,_ZJ_,_ZF_)}},
       _gd_,
       _gc_]);
    function _ge_(_Zx_)
     {caml_call2(CamlinternalOO[8],_Zx_,_gb_);
      var
       _Zy_=caml_call6(CamlinternalOO[18],_Zx_,0,_gb_,0,logic_t$3,1)[1],
       _Zz_=caml_call6(CamlinternalOO[18],_Zx_,0,0,_ga_,fmt_logic_t,1)[1];
      return function(_ZD_,_ZC_,_ZB_,_ZA_)
       {var _ZE_=caml_call2(CamlinternalOO[24],_ZC_,_Zx_);
        caml_call1(_Zy_,_ZE_);
        caml_call3(_Zz_,_ZE_,_ZB_,_ZA_);
        return caml_call3(CamlinternalOO[26],_ZC_,_ZE_,_Zx_)}}
    var fmt_logic_t$3=caml_call2(CamlinternalOO[19],_ga_,_ge_);
    function fmt_logic$3(fa,inh_001,subj_002)
     {return caml_call4(GT[224],logic,fa,inh_001,subj_002)}
    function _gf_(_Zp_)
     {caml_call2(CamlinternalOO[8],_Zp_,_gb_);
      var
       _Zq_=caml_call6(CamlinternalOO[18],_Zp_,0,_gb_,0,logic_t$3,1)[1],
       _Zr_=caml_call6(CamlinternalOO[18],_Zp_,0,0,_ga_,foldr_logic_t,1)[1];
      return function(_Zv_,_Zu_,_Zt_,_Zs_)
       {var _Zw_=caml_call2(CamlinternalOO[24],_Zu_,_Zp_);
        caml_call1(_Zq_,_Zw_);
        caml_call3(_Zr_,_Zw_,_Zt_,_Zs_);
        return caml_call3(CamlinternalOO[26],_Zu_,_Zw_,_Zp_)}}
    var foldr_logic_t$3=caml_call2(CamlinternalOO[19],_ga_,_gf_);
    function foldr_logic$3(fa,inh_003,subj_004)
     {return caml_call4(GT[226],logic,fa,inh_003,subj_004)}
    function _gg_(_Zh_)
     {caml_call2(CamlinternalOO[8],_Zh_,_gb_);
      var
       _Zi_=caml_call6(CamlinternalOO[18],_Zh_,0,_gb_,0,logic_t$3,1)[1],
       _Zj_=caml_call6(CamlinternalOO[18],_Zh_,0,0,_ga_,foldl_logic_t,1)[1];
      return function(_Zn_,_Zm_,_Zl_,_Zk_)
       {var _Zo_=caml_call2(CamlinternalOO[24],_Zm_,_Zh_);
        caml_call1(_Zi_,_Zo_);
        caml_call3(_Zj_,_Zo_,_Zl_,_Zk_);
        return caml_call3(CamlinternalOO[26],_Zm_,_Zo_,_Zh_)}}
    var foldl_logic_t$3=caml_call2(CamlinternalOO[19],_ga_,_gg_);
    function foldl_logic$3(fa,inh_005,subj_006)
     {return caml_call4(GT[225],logic,fa,inh_005,subj_006)}
    function _gh_(_Y$_)
     {caml_call2(CamlinternalOO[8],_Y$_,_gb_);
      var
       _Za_=caml_call6(CamlinternalOO[18],_Y$_,0,_gb_,0,logic_t$3,1)[1],
       _Zb_=caml_call6(CamlinternalOO[18],_Y$_,0,0,_ga_,compare_logic_t,1)[1];
      return function(_Zf_,_Ze_,_Zd_,_Zc_)
       {var _Zg_=caml_call2(CamlinternalOO[24],_Ze_,_Y$_);
        caml_call1(_Za_,_Zg_);
        caml_call3(_Zb_,_Zg_,_Zd_,_Zc_);
        return caml_call3(CamlinternalOO[26],_Ze_,_Zg_,_Y$_)}}
    var compare_logic_t$3=caml_call2(CamlinternalOO[19],_ga_,_gh_);
    function compare_logic$3(fa,inh,subj)
     {return caml_call4(GT[228],logic,fa,inh,subj)}
    function _gi_(_Y3_)
     {caml_call2(CamlinternalOO[8],_Y3_,_gb_);
      var
       _Y4_=caml_call6(CamlinternalOO[18],_Y3_,0,_gb_,0,logic_t$3,1)[1],
       _Y5_=caml_call6(CamlinternalOO[18],_Y3_,0,0,_ga_,eq_logic_t,1)[1];
      return function(_Y9_,_Y8_,_Y7_,_Y6_)
       {var _Y__=caml_call2(CamlinternalOO[24],_Y8_,_Y3_);
        caml_call1(_Y4_,_Y__);
        caml_call3(_Y5_,_Y__,_Y7_,_Y6_);
        return caml_call3(CamlinternalOO[26],_Y8_,_Y__,_Y3_)}}
    var eq_logic_t$3=caml_call2(CamlinternalOO[19],_ga_,_gi_);
    function eq_logic$3(fa,inh,subj)
     {return caml_call4(GT[227],logic,fa,inh,subj)}
    function _gj_(_YV_)
     {caml_call2(CamlinternalOO[8],_YV_,_gb_);
      var
       _YW_=caml_call6(CamlinternalOO[18],_YV_,0,_gb_,0,logic_t$3,1)[1],
       _YX_=caml_call6(CamlinternalOO[18],_YV_,0,0,_ga_,html_logic_t,1)[1];
      return function(_Y1_,_Y0_,_YZ_,_YY_)
       {var _Y2_=caml_call2(CamlinternalOO[24],_Y0_,_YV_);
        caml_call1(_YW_,_Y2_);
        caml_call3(_YX_,_Y2_,_YZ_,_YY_);
        return caml_call3(CamlinternalOO[26],_Y0_,_Y2_,_YV_)}}
    var html_logic_t$2=caml_call2(CamlinternalOO[19],_ga_,_gj_);
    function _gk_(_YN_)
     {caml_call2(CamlinternalOO[8],_YN_,_gb_);
      var
       _YO_=caml_call6(CamlinternalOO[18],_YN_,0,_gb_,0,logic_t$3,1)[1],
       _YP_=caml_call6(CamlinternalOO[18],_YN_,0,0,_ga_,gmap_logic_t,1)[1];
      return function(_YT_,_YS_,_YR_,_YQ_)
       {var _YU_=caml_call2(CamlinternalOO[24],_YS_,_YN_);
        caml_call1(_YO_,_YU_);
        caml_call3(_YP_,_YU_,_YR_,_YQ_);
        return caml_call3(CamlinternalOO[26],_YS_,_YU_,_YN_)}}
    var gmap_logic_t$3=caml_call2(CamlinternalOO[19],_ga_,_gk_);
    function _gl_(_YF_)
     {caml_call2(CamlinternalOO[8],_YF_,_gb_);
      var
       _YG_=caml_call6(CamlinternalOO[18],_YF_,0,_gb_,0,logic_t$3,1)[1],
       _YH_=caml_call6(CamlinternalOO[18],_YF_,0,0,_ga_,show_logic_t,1)[1];
      return function(_YL_,_YK_,_YJ_,_YI_)
       {var _YM_=caml_call2(CamlinternalOO[24],_YK_,_YF_);
        caml_call1(_YG_,_YM_);
        caml_call3(_YH_,_YM_,_YJ_,_YI_);
        return caml_call3(CamlinternalOO[26],_YK_,_YM_,_YF_)}}
    var
     show_logic_t$3=caml_call2(CamlinternalOO[19],_ga_,_gl_),
     _gm_=caml_call1(CamlinternalOO[16],_f__),
     _gn_=caml_call2(CamlinternalOO[8],_gm_,shared$2),
     _go_=_gn_[1],
     _gp_=_gn_[2],
     _gq_=_gn_[3],
     _gr_=_gn_[4],
     _gs_=_gn_[5],
     _gt_=_gn_[6],
     _gu_=_gn_[7],
     _gv_=_gn_[8];
    function _gw_(self_10,fa,subj)
     {var fa$0=caml_call1(GT[4],fa),_YE_=caml_call1(fa$0,0);
      return caml_call3(GT[221],logic,_YE_,subj)}
    function _gx_(self_10,fa,subj)
     {var fa$0=caml_call1(GT[4],fa),_YD_=caml_call1(fa$0,0);
      return caml_call3(GT[223],logic,_YD_,subj)}
    function _gy_(self_10,fa,subj)
     {var fa$0=caml_call1(GT[4],fa),_YC_=caml_call1(fa$0,0);
      return caml_call3(GT[222],logic,_YC_,subj)}
    function _gz_(self_10){return eq_logic$3}
    function _gA_(self_10){return compare_logic$3}
    function _gB_(self_10){return foldl_logic$3}
    function _gC_(self_10){return foldr_logic$3}
    var
     _gD_=
      [0,
       _gt_,
       function(self_10){return fmt_logic$3},
       _gr_,
       _gC_,
       _gs_,
       _gB_,
       _gv_,
       _gA_,
       _gu_,
       _gz_,
       _gp_,
       _gy_,
       _gq_,
       _gx_,
       _go_,
       _gw_];
    caml_call2(CamlinternalOO[11],_gm_,_gD_);
    caml_call1(CamlinternalOO[17],_gm_);
    caml_call2(CamlinternalOO[24],0,_gm_);
    var ground_t$1=[],_gE_=0,_gF_=0;
    caml_update_dummy
     (ground_t$1,
      [0,
       0,
       function(_Yx_)
        {caml_call2(CamlinternalOO[8],_Yx_,_f$_);
         var _Yy_=caml_call6(CamlinternalOO[18],_Yx_,0,_f$_,0,GT[161],1)[1];
         return function(_YA_,_Yz_)
          {var _YB_=caml_call2(CamlinternalOO[24],_Yz_,_Yx_);
           caml_call1(_Yy_,_YB_);
           return caml_call3(CamlinternalOO[26],_Yz_,_YB_,_Yx_)}},
       _gF_,
       _gE_]);
    var gcata_ground$1=GT[162];
    function _gG_(_Yp_)
     {caml_call2(CamlinternalOO[8],_Yp_,_f$_);
      var
       _Yq_=caml_call6(CamlinternalOO[18],_Yp_,0,_f$_,0,ground_t$1,1)[1],
       _Yr_=caml_call6(CamlinternalOO[18],_Yp_,0,0,_f9_,GT[165],1)[1];
      return function(_Yv_,_Yu_,_Yt_,_Ys_)
       {var _Yw_=caml_call2(CamlinternalOO[24],_Yu_,_Yp_);
        caml_call1(_Yq_,_Yw_);
        caml_call3(_Yr_,_Yw_,_Yt_,_Ys_);
        return caml_call3(CamlinternalOO[26],_Yu_,_Yw_,_Yp_)}}
    var fmt_ground_t$1=caml_call2(CamlinternalOO[19],_f9_,_gG_);
    function fmt_ground$1(fa,inh_007,subj_008)
     {return caml_call4(GT[224],GT[173],fa,inh_007,subj_008)}
    function _gH_(_Yh_)
     {caml_call2(CamlinternalOO[8],_Yh_,_f$_);
      var
       _Yi_=caml_call6(CamlinternalOO[18],_Yh_,0,_f$_,0,ground_t$1,1)[1],
       _Yj_=caml_call6(CamlinternalOO[18],_Yh_,0,0,_f9_,GT[170],1)[1];
      return function(_Yn_,_Ym_,_Yl_,_Yk_)
       {var _Yo_=caml_call2(CamlinternalOO[24],_Ym_,_Yh_);
        caml_call1(_Yi_,_Yo_);
        caml_call3(_Yj_,_Yo_,_Yl_,_Yk_);
        return caml_call3(CamlinternalOO[26],_Ym_,_Yo_,_Yh_)}}
    var foldr_ground_t$1=caml_call2(CamlinternalOO[19],_f9_,_gH_);
    function foldr_ground$1(fa,inh_009,subj_010)
     {return caml_call4(GT[226],GT[173],fa,inh_009,subj_010)}
    function _gI_(_X$_)
     {caml_call2(CamlinternalOO[8],_X$_,_f$_);
      var
       _Ya_=caml_call6(CamlinternalOO[18],_X$_,0,_f$_,0,ground_t$1,1)[1],
       _Yb_=caml_call6(CamlinternalOO[18],_X$_,0,0,_f9_,GT[169],1)[1];
      return function(_Yf_,_Ye_,_Yd_,_Yc_)
       {var _Yg_=caml_call2(CamlinternalOO[24],_Ye_,_X$_);
        caml_call1(_Ya_,_Yg_);
        caml_call3(_Yb_,_Yg_,_Yd_,_Yc_);
        return caml_call3(CamlinternalOO[26],_Ye_,_Yg_,_X$_)}}
    var foldl_ground_t$1=caml_call2(CamlinternalOO[19],_f9_,_gI_);
    function foldl_ground$1(fa,inh_011,subj_012)
     {return caml_call4(GT[225],GT[173],fa,inh_011,subj_012)}
    function _gJ_(_X3_)
     {caml_call2(CamlinternalOO[8],_X3_,_f$_);
      var
       _X4_=caml_call6(CamlinternalOO[18],_X3_,0,_f$_,0,ground_t$1,1)[1],
       _X5_=caml_call6(CamlinternalOO[18],_X3_,0,0,_f9_,GT[172],1)[1];
      return function(_X9_,_X8_,_X7_,_X6_)
       {var _X__=caml_call2(CamlinternalOO[24],_X8_,_X3_);
        caml_call1(_X4_,_X__);
        caml_call3(_X5_,_X__,_X7_,_X6_);
        return caml_call3(CamlinternalOO[26],_X8_,_X__,_X3_)}}
    var compare_ground_t$1=caml_call2(CamlinternalOO[19],_f9_,_gJ_);
    function compare_ground$1(fa,inh,subj)
     {return caml_call4(GT[228],GT[173],fa,inh,subj)}
    function _gK_(_XV_)
     {caml_call2(CamlinternalOO[8],_XV_,_f$_);
      var
       _XW_=caml_call6(CamlinternalOO[18],_XV_,0,_f$_,0,ground_t$1,1)[1],
       _XX_=caml_call6(CamlinternalOO[18],_XV_,0,0,_f9_,GT[171],1)[1];
      return function(_X1_,_X0_,_XZ_,_XY_)
       {var _X2_=caml_call2(CamlinternalOO[24],_X0_,_XV_);
        caml_call1(_XW_,_X2_);
        caml_call3(_XX_,_X2_,_XZ_,_XY_);
        return caml_call3(CamlinternalOO[26],_X0_,_X2_,_XV_)}}
    var eq_ground_t$1=caml_call2(CamlinternalOO[19],_f9_,_gK_);
    function eq_ground$1(fa,inh,subj)
     {return caml_call4(GT[227],GT[173],fa,inh,subj)}
    function _gL_(_XN_)
     {caml_call2(CamlinternalOO[8],_XN_,_f$_);
      var
       _XO_=caml_call6(CamlinternalOO[18],_XN_,0,_f$_,0,ground_t$1,1)[1],
       _XP_=caml_call6(CamlinternalOO[18],_XN_,0,0,_f9_,GT[164],1)[1];
      return function(_XT_,_XS_,_XR_,_XQ_)
       {var _XU_=caml_call2(CamlinternalOO[24],_XS_,_XN_);
        caml_call1(_XO_,_XU_);
        caml_call3(_XP_,_XU_,_XR_,_XQ_);
        return caml_call3(CamlinternalOO[26],_XS_,_XU_,_XN_)}}
    var html_ground_t$0=caml_call2(CamlinternalOO[19],_f9_,_gL_);
    function _gM_(fa,param,subj)
     {var _XM_=caml_call1(fa,0);return caml_call3(GT[222],GT[173],_XM_,subj)}
    function _gN_(_XE_)
     {caml_call2(CamlinternalOO[8],_XE_,_f$_);
      var
       _XF_=caml_call6(CamlinternalOO[18],_XE_,0,_f$_,0,ground_t$1,1)[1],
       _XG_=caml_call6(CamlinternalOO[18],_XE_,0,0,_f9_,GT[166],1)[1];
      return function(_XK_,_XJ_,_XI_,_XH_)
       {var _XL_=caml_call2(CamlinternalOO[24],_XJ_,_XE_);
        caml_call1(_XF_,_XL_);
        caml_call3(_XG_,_XL_,_XI_,_XH_);
        return caml_call3(CamlinternalOO[26],_XJ_,_XL_,_XE_)}}
    var gmap_ground_t$1=caml_call2(CamlinternalOO[19],_f9_,_gN_);
    function _gO_(fa,param,subj)
     {var _XD_=caml_call1(fa,0);return caml_call3(GT[223],GT[173],_XD_,subj)}
    function _gP_(_Xv_)
     {caml_call2(CamlinternalOO[8],_Xv_,_f$_);
      var
       _Xw_=caml_call6(CamlinternalOO[18],_Xv_,0,_f$_,0,ground_t$1,1)[1],
       _Xx_=caml_call6(CamlinternalOO[18],_Xv_,0,0,_f9_,GT[163],1)[1];
      return function(_XB_,_XA_,_Xz_,_Xy_)
       {var _XC_=caml_call2(CamlinternalOO[24],_XA_,_Xv_);
        caml_call1(_Xw_,_XC_);
        caml_call3(_Xx_,_XC_,_Xz_,_Xy_);
        return caml_call3(CamlinternalOO[26],_XA_,_XC_,_Xv_)}}
    var show_ground_t$1=caml_call2(CamlinternalOO[19],_f9_,_gP_);
    function _gQ_(fa,param,subj)
     {var _Xu_=caml_call1(fa,0);return caml_call3(GT[221],GT[173],_Xu_,subj)}
    function _gR_(eta){return caml_call2(GT[2],gcata_ground$1,eta)}
    var
     _gS_=caml_call1(CamlinternalOO[16],_f__),
     _gT_=caml_call2(CamlinternalOO[8],_gS_,shared$2),
     _gU_=_gT_[1],
     _gV_=_gT_[2],
     _gW_=_gT_[3],
     _gX_=_gT_[4],
     _gY_=_gT_[5],
     _gZ_=_gT_[6],
     _g0_=_gT_[7],
     _g1_=_gT_[8];
    function _g2_(self_20,fa,subj){return _gQ_(caml_call1(GT[4],fa),0,subj)}
    function _g3_(self_20,fa,subj){return _gO_(caml_call1(GT[4],fa),0,subj)}
    function _g4_(self_20,fa,subj){return _gM_(caml_call1(GT[4],fa),0,subj)}
    function _g5_(self_20){return eq_ground$1}
    function _g6_(self_20){return compare_ground$1}
    function _g7_(self_20){return foldl_ground$1}
    function _g8_(self_20){return foldr_ground$1}
    var
     _g9_=
      [0,
       _gZ_,
       function(self_20){return fmt_ground$1},
       _gX_,
       _g8_,
       _gY_,
       _g7_,
       _g1_,
       _g6_,
       _g0_,
       _g5_,
       _gV_,
       _g4_,
       _gW_,
       _g3_,
       _gU_,
       _g2_];
    caml_call2(CamlinternalOO[11],_gS_,_g9_);
    caml_call1(CamlinternalOO[17],_gS_);
    var
     ground$1=
      [0,gcata_ground$1,caml_call2(CamlinternalOO[24],0,_gS_),_gR_];
    function html_ground$0(fa,subj){return _gM_(caml_call1(GT[4],fa),0,subj)}
    function gmap_ground$1(fa,subj){return _gO_(caml_call1(GT[4],fa),0,subj)}
    function show_ground$1(fa,subj){return _gQ_(caml_call1(GT[4],fa),0,subj)}
    var logic_t$4=[],_g__=0,_g$_=0;
    caml_update_dummy
     (logic_t$4,
      [0,
       0,
       function(_Xp_)
        {caml_call2(CamlinternalOO[8],_Xp_,_gb_);
         var _Xq_=caml_call6(CamlinternalOO[18],_Xp_,0,_gb_,0,logic_t$3,1)[1];
         return function(_Xs_,_Xr_)
          {var _Xt_=caml_call2(CamlinternalOO[24],_Xr_,_Xp_);
           caml_call1(_Xq_,_Xt_);
           return caml_call3(CamlinternalOO[26],_Xr_,_Xt_,_Xp_)}},
       _g$_,
       _g__]);
    function _ha_(_Xh_)
     {caml_call2(CamlinternalOO[8],_Xh_,_gb_);
      var
       _Xi_=caml_call6(CamlinternalOO[18],_Xh_,0,_gb_,0,logic_t$4,1)[1],
       _Xj_=caml_call6(CamlinternalOO[18],_Xh_,0,0,_ga_,fmt_logic_t$3,1)[1];
      return function(_Xn_,_Xm_,_Xl_,_Xk_)
       {var _Xo_=caml_call2(CamlinternalOO[24],_Xm_,_Xh_);
        caml_call1(_Xi_,_Xo_);
        caml_call3
         (_Xj_,
          _Xo_,
          function(inh_017,subj_018)
           {return caml_call4(GT[224],GT[173],_Xl_,inh_017,subj_018)},
          _Xk_);
        return caml_call3(CamlinternalOO[26],_Xm_,_Xo_,_Xh_)}}
    var fmt_logic_t$4=caml_call2(CamlinternalOO[19],_ga_,_ha_);
    function fmt_logic$4(fa,inh_013,subj_014)
     {function _Xg_(inh_015,subj_016)
       {return caml_call4(GT[224],GT[173],fa,inh_015,subj_016)}
      return caml_call4(GT[224],logic,_Xg_,inh_013,subj_014)}
    function _hb_(_W__)
     {caml_call2(CamlinternalOO[8],_W__,_gb_);
      var
       _W$_=caml_call6(CamlinternalOO[18],_W__,0,_gb_,0,logic_t$4,1)[1],
       _Xa_=caml_call6(CamlinternalOO[18],_W__,0,0,_ga_,foldr_logic_t$3,1)[1];
      return function(_Xe_,_Xd_,_Xc_,_Xb_)
       {var _Xf_=caml_call2(CamlinternalOO[24],_Xd_,_W__);
        caml_call1(_W$_,_Xf_);
        caml_call3
         (_Xa_,
          _Xf_,
          function(inh_023,subj_024)
           {return caml_call4(GT[226],GT[173],_Xc_,inh_023,subj_024)},
          _Xb_);
        return caml_call3(CamlinternalOO[26],_Xd_,_Xf_,_W__)}}
    var foldr_logic_t$4=caml_call2(CamlinternalOO[19],_ga_,_hb_);
    function foldr_logic$4(fa,inh_019,subj_020)
     {function _W9_(inh_021,subj_022)
       {return caml_call4(GT[226],GT[173],fa,inh_021,subj_022)}
      return caml_call4(GT[226],logic,_W9_,inh_019,subj_020)}
    function _hc_(_W1_)
     {caml_call2(CamlinternalOO[8],_W1_,_gb_);
      var
       _W2_=caml_call6(CamlinternalOO[18],_W1_,0,_gb_,0,logic_t$4,1)[1],
       _W3_=caml_call6(CamlinternalOO[18],_W1_,0,0,_ga_,foldl_logic_t$3,1)[1];
      return function(_W7_,_W6_,_W5_,_W4_)
       {var _W8_=caml_call2(CamlinternalOO[24],_W6_,_W1_);
        caml_call1(_W2_,_W8_);
        caml_call3
         (_W3_,
          _W8_,
          function(inh_029,subj_030)
           {return caml_call4(GT[225],GT[173],_W5_,inh_029,subj_030)},
          _W4_);
        return caml_call3(CamlinternalOO[26],_W6_,_W8_,_W1_)}}
    var foldl_logic_t$4=caml_call2(CamlinternalOO[19],_ga_,_hc_);
    function foldl_logic$4(fa,inh_025,subj_026)
     {function _W0_(inh_027,subj_028)
       {return caml_call4(GT[225],GT[173],fa,inh_027,subj_028)}
      return caml_call4(GT[225],logic,_W0_,inh_025,subj_026)}
    function _hd_(_WS_)
     {caml_call2(CamlinternalOO[8],_WS_,_gb_);
      var
       _WT_=caml_call6(CamlinternalOO[18],_WS_,0,_gb_,0,logic_t$4,1)[1],
       _WU_=
        caml_call6(CamlinternalOO[18],_WS_,0,0,_ga_,compare_logic_t$3,1)[1];
      return function(_WY_,_WX_,_WW_,_WV_)
       {var _WZ_=caml_call2(CamlinternalOO[24],_WX_,_WS_);
        caml_call1(_WT_,_WZ_);
        caml_call3
         (_WU_,
          _WZ_,
          function(inh,subj){return caml_call4(GT[228],GT[173],_WW_,inh,subj)},
          _WV_);
        return caml_call3(CamlinternalOO[26],_WX_,_WZ_,_WS_)}}
    var compare_logic_t$4=caml_call2(CamlinternalOO[19],_ga_,_hd_);
    function compare_logic$4(fa,inh,subj)
     {function _WR_(inh,subj){return caml_call4(GT[228],GT[173],fa,inh,subj)}
      return caml_call4(GT[228],logic,_WR_,inh,subj)}
    function _he_(_WJ_)
     {caml_call2(CamlinternalOO[8],_WJ_,_gb_);
      var
       _WK_=caml_call6(CamlinternalOO[18],_WJ_,0,_gb_,0,logic_t$4,1)[1],
       _WL_=caml_call6(CamlinternalOO[18],_WJ_,0,0,_ga_,eq_logic_t$3,1)[1];
      return function(_WP_,_WO_,_WN_,_WM_)
       {var _WQ_=caml_call2(CamlinternalOO[24],_WO_,_WJ_);
        caml_call1(_WK_,_WQ_);
        caml_call3
         (_WL_,
          _WQ_,
          function(inh,subj){return caml_call4(GT[227],GT[173],_WN_,inh,subj)},
          _WM_);
        return caml_call3(CamlinternalOO[26],_WO_,_WQ_,_WJ_)}}
    var eq_logic_t$4=caml_call2(CamlinternalOO[19],_ga_,_he_);
    function eq_logic$4(fa,inh,subj)
     {function _WI_(inh,subj){return caml_call4(GT[227],GT[173],fa,inh,subj)}
      return caml_call4(GT[227],logic,_WI_,inh,subj)}
    function _hf_(_Wz_)
     {caml_call2(CamlinternalOO[8],_Wz_,_gb_);
      var
       _WA_=caml_call6(CamlinternalOO[18],_Wz_,0,_gb_,0,logic_t$4,1)[1],
       _WB_=caml_call6(CamlinternalOO[18],_Wz_,0,0,_ga_,html_logic_t$2,1)[1];
      return function(_WF_,_WE_,_WD_,_WC_)
       {var _WG_=caml_call2(CamlinternalOO[24],_WE_,_Wz_);
        caml_call1(_WA_,_WG_);
        caml_call3
         (_WB_,
          _WG_,
          function(param,subj)
           {var _WH_=caml_call1(_WD_,0);
            return caml_call3(GT[222],GT[173],_WH_,subj)},
          _WC_);
        return caml_call3(CamlinternalOO[26],_WE_,_WG_,_Wz_)}}
    var html_logic_t$3=caml_call2(CamlinternalOO[19],_ga_,_hf_);
    function _hg_(fa,param,subj)
     {function _Wx_(subj)
       {var _Wy_=caml_call1(fa,0);
        return caml_call3(GT[222],GT[173],_Wy_,subj)}
      return caml_call3(GT[222],logic,_Wx_,subj)}
    function _hh_(_Wo_)
     {caml_call2(CamlinternalOO[8],_Wo_,_gb_);
      var
       _Wp_=caml_call6(CamlinternalOO[18],_Wo_,0,_gb_,0,logic_t$4,1)[1],
       _Wq_=caml_call6(CamlinternalOO[18],_Wo_,0,0,_ga_,gmap_logic_t$3,1)[1];
      return function(_Wu_,_Wt_,_Ws_,_Wr_)
       {var _Wv_=caml_call2(CamlinternalOO[24],_Wt_,_Wo_);
        caml_call1(_Wp_,_Wv_);
        caml_call3
         (_Wq_,
          _Wv_,
          function(param,subj)
           {var _Ww_=caml_call1(_Ws_,0);
            return caml_call3(GT[223],GT[173],_Ww_,subj)},
          _Wr_);
        return caml_call3(CamlinternalOO[26],_Wt_,_Wv_,_Wo_)}}
    var gmap_logic_t$4=caml_call2(CamlinternalOO[19],_ga_,_hh_);
    function _hi_(fa,param,subj)
     {function _Wm_(subj)
       {var _Wn_=caml_call1(fa,0);
        return caml_call3(GT[223],GT[173],_Wn_,subj)}
      return caml_call3(GT[223],logic,_Wm_,subj)}
    function _hj_(_Wd_)
     {caml_call2(CamlinternalOO[8],_Wd_,_gb_);
      var
       _We_=caml_call6(CamlinternalOO[18],_Wd_,0,_gb_,0,logic_t$4,1)[1],
       _Wf_=caml_call6(CamlinternalOO[18],_Wd_,0,0,_ga_,show_logic_t$3,1)[1];
      return function(_Wj_,_Wi_,_Wh_,_Wg_)
       {var _Wk_=caml_call2(CamlinternalOO[24],_Wi_,_Wd_);
        caml_call1(_We_,_Wk_);
        caml_call3
         (_Wf_,
          _Wk_,
          function(param,subj)
           {var _Wl_=caml_call1(_Wh_,0);
            return caml_call3(GT[221],GT[173],_Wl_,subj)},
          _Wg_);
        return caml_call3(CamlinternalOO[26],_Wi_,_Wk_,_Wd_)}}
    var show_logic_t$4=caml_call2(CamlinternalOO[19],_ga_,_hj_);
    function _hk_(fa,param,subj)
     {function _Wb_(subj)
       {var _Wc_=caml_call1(fa,0);
        return caml_call3(GT[221],GT[173],_Wc_,subj)}
      return caml_call3(GT[221],logic,_Wb_,subj)}
    function _hl_(eta){return caml_call2(GT[2],gcata_logic,eta)}
    var
     _hm_=caml_call1(CamlinternalOO[16],_f__),
     _hn_=caml_call2(CamlinternalOO[8],_hm_,shared$2),
     _ho_=_hn_[1],
     _hp_=_hn_[2],
     _hq_=_hn_[3],
     _hr_=_hn_[4],
     _hs_=_hn_[5],
     _ht_=_hn_[6],
     _hu_=_hn_[7],
     _hv_=_hn_[8];
    function _hw_(self_30,fa,subj){return _hk_(caml_call1(GT[4],fa),0,subj)}
    function _hx_(self_30,fa,subj){return _hi_(caml_call1(GT[4],fa),0,subj)}
    function _hy_(self_30,fa,subj){return _hg_(caml_call1(GT[4],fa),0,subj)}
    function _hz_(self_30){return eq_logic$4}
    function _hA_(self_30){return compare_logic$4}
    function _hB_(self_30){return foldl_logic$4}
    function _hC_(self_30){return foldr_logic$4}
    var
     _hD_=
      [0,
       _ht_,
       function(self_30){return fmt_logic$4},
       _hr_,
       _hC_,
       _hs_,
       _hB_,
       _hv_,
       _hA_,
       _hu_,
       _hz_,
       _hp_,
       _hy_,
       _hq_,
       _hx_,
       _ho_,
       _hw_];
    caml_call2(CamlinternalOO[11],_hm_,_hD_);
    caml_call1(CamlinternalOO[17],_hm_);
    var _hE_=[0,gcata_logic,caml_call2(CamlinternalOO[24],0,_hm_),_hl_];
    function html_logic$1(fa,subj){return _hg_(caml_call1(GT[4],fa),0,subj)}
    function gmap_logic$2(fa,subj){return _hi_(caml_call1(GT[4],fa),0,subj)}
    function show_logic$2(fa,subj){return _hk_(caml_call1(GT[4],fa),0,subj)}
    var option_t=[],_hF_=0,_hG_=0;
    caml_update_dummy
     (option_t,
      [0,
       0,
       function(_V8_)
        {caml_call2(CamlinternalOO[8],_V8_,_f$_);
         var
          _V9_=
           caml_call6(CamlinternalOO[18],_V8_,0,_f$_,0,ground_t$1,1)[1];
         return function(_V$_,_V__)
          {var _Wa_=caml_call2(CamlinternalOO[24],_V__,_V8_);
           caml_call1(_V9_,_Wa_);
           return caml_call3(CamlinternalOO[26],_V__,_Wa_,_V8_)}},
       _hG_,
       _hF_]);
    function _hH_(_V0_)
     {caml_call2(CamlinternalOO[8],_V0_,_f$_);
      var
       _V1_=caml_call6(CamlinternalOO[18],_V0_,0,_f$_,0,option_t,1)[1],
       _V2_=caml_call6(CamlinternalOO[18],_V0_,0,0,_f9_,fmt_ground_t$1,1)[1];
      return function(_V6_,_V5_,_V4_,_V3_)
       {var _V7_=caml_call2(CamlinternalOO[24],_V5_,_V0_);
        caml_call1(_V1_,_V7_);
        caml_call3(_V2_,_V7_,_V4_,_V3_);
        return caml_call3(CamlinternalOO[26],_V5_,_V7_,_V0_)}}
    var fmt_option_t=caml_call2(CamlinternalOO[19],_f9_,_hH_);
    function fmt_option(fa,inh_031,subj_032)
     {return caml_call4(GT[224],ground$1,fa,inh_031,subj_032)}
    function _hI_(_VS_)
     {caml_call2(CamlinternalOO[8],_VS_,_f$_);
      var
       _VT_=caml_call6(CamlinternalOO[18],_VS_,0,_f$_,0,option_t,1)[1],
       _VU_=caml_call6(CamlinternalOO[18],_VS_,0,0,_f9_,foldr_ground_t$1,1)[1];
      return function(_VY_,_VX_,_VW_,_VV_)
       {var _VZ_=caml_call2(CamlinternalOO[24],_VX_,_VS_);
        caml_call1(_VT_,_VZ_);
        caml_call3(_VU_,_VZ_,_VW_,_VV_);
        return caml_call3(CamlinternalOO[26],_VX_,_VZ_,_VS_)}}
    var foldr_option_t=caml_call2(CamlinternalOO[19],_f9_,_hI_);
    function foldr_option(fa,inh_033,subj_034)
     {return caml_call4(GT[226],ground$1,fa,inh_033,subj_034)}
    function _hJ_(_VK_)
     {caml_call2(CamlinternalOO[8],_VK_,_f$_);
      var
       _VL_=caml_call6(CamlinternalOO[18],_VK_,0,_f$_,0,option_t,1)[1],
       _VM_=caml_call6(CamlinternalOO[18],_VK_,0,0,_f9_,foldl_ground_t$1,1)[1];
      return function(_VQ_,_VP_,_VO_,_VN_)
       {var _VR_=caml_call2(CamlinternalOO[24],_VP_,_VK_);
        caml_call1(_VL_,_VR_);
        caml_call3(_VM_,_VR_,_VO_,_VN_);
        return caml_call3(CamlinternalOO[26],_VP_,_VR_,_VK_)}}
    var foldl_option_t=caml_call2(CamlinternalOO[19],_f9_,_hJ_);
    function foldl_option(fa,inh_035,subj_036)
     {return caml_call4(GT[225],ground$1,fa,inh_035,subj_036)}
    function _hK_(_VC_)
     {caml_call2(CamlinternalOO[8],_VC_,_f$_);
      var
       _VD_=caml_call6(CamlinternalOO[18],_VC_,0,_f$_,0,option_t,1)[1],
       _VE_=
        caml_call6(CamlinternalOO[18],_VC_,0,0,_f9_,compare_ground_t$1,1)[1];
      return function(_VI_,_VH_,_VG_,_VF_)
       {var _VJ_=caml_call2(CamlinternalOO[24],_VH_,_VC_);
        caml_call1(_VD_,_VJ_);
        caml_call3(_VE_,_VJ_,_VG_,_VF_);
        return caml_call3(CamlinternalOO[26],_VH_,_VJ_,_VC_)}}
    var compare_option_t=caml_call2(CamlinternalOO[19],_f9_,_hK_);
    function compare_option(fa,inh,subj)
     {return caml_call4(GT[228],ground$1,fa,inh,subj)}
    function _hL_(_Vu_)
     {caml_call2(CamlinternalOO[8],_Vu_,_f$_);
      var
       _Vv_=caml_call6(CamlinternalOO[18],_Vu_,0,_f$_,0,option_t,1)[1],
       _Vw_=caml_call6(CamlinternalOO[18],_Vu_,0,0,_f9_,eq_ground_t$1,1)[1];
      return function(_VA_,_Vz_,_Vy_,_Vx_)
       {var _VB_=caml_call2(CamlinternalOO[24],_Vz_,_Vu_);
        caml_call1(_Vv_,_VB_);
        caml_call3(_Vw_,_VB_,_Vy_,_Vx_);
        return caml_call3(CamlinternalOO[26],_Vz_,_VB_,_Vu_)}}
    var eq_option_t=caml_call2(CamlinternalOO[19],_f9_,_hL_);
    function eq_option(fa,inh,subj)
     {return caml_call4(GT[227],ground$1,fa,inh,subj)}
    function _hM_(_Vm_)
     {caml_call2(CamlinternalOO[8],_Vm_,_f$_);
      var
       _Vn_=caml_call6(CamlinternalOO[18],_Vm_,0,_f$_,0,option_t,1)[1],
       _Vo_=caml_call6(CamlinternalOO[18],_Vm_,0,0,_f9_,html_ground_t$0,1)[1];
      return function(_Vs_,_Vr_,_Vq_,_Vp_)
       {var _Vt_=caml_call2(CamlinternalOO[24],_Vr_,_Vm_);
        caml_call1(_Vn_,_Vt_);
        caml_call3(_Vo_,_Vt_,_Vq_,_Vp_);
        return caml_call3(CamlinternalOO[26],_Vr_,_Vt_,_Vm_)}}
    var html_option_t=caml_call2(CamlinternalOO[19],_f9_,_hM_);
    function _hN_(fa,param,subj)
     {var _Vl_=caml_call1(fa,0);return caml_call3(GT[222],ground$1,_Vl_,subj)}
    function _hO_(_Vd_)
     {caml_call2(CamlinternalOO[8],_Vd_,_f$_);
      var
       _Ve_=caml_call6(CamlinternalOO[18],_Vd_,0,_f$_,0,option_t,1)[1],
       _Vf_=caml_call6(CamlinternalOO[18],_Vd_,0,0,_f9_,gmap_ground_t$1,1)[1];
      return function(_Vj_,_Vi_,_Vh_,_Vg_)
       {var _Vk_=caml_call2(CamlinternalOO[24],_Vi_,_Vd_);
        caml_call1(_Ve_,_Vk_);
        caml_call3(_Vf_,_Vk_,_Vh_,_Vg_);
        return caml_call3(CamlinternalOO[26],_Vi_,_Vk_,_Vd_)}}
    var gmap_option_t=caml_call2(CamlinternalOO[19],_f9_,_hO_);
    function _hP_(fa,param,subj)
     {var _Vc_=caml_call1(fa,0);return caml_call3(GT[223],ground$1,_Vc_,subj)}
    function _hQ_(_U6_)
     {caml_call2(CamlinternalOO[8],_U6_,_f$_);
      var
       _U7_=caml_call6(CamlinternalOO[18],_U6_,0,_f$_,0,option_t,1)[1],
       _U8_=caml_call6(CamlinternalOO[18],_U6_,0,0,_f9_,show_ground_t$1,1)[1];
      return function(_Va_,_U$_,_U__,_U9_)
       {var _Vb_=caml_call2(CamlinternalOO[24],_U$_,_U6_);
        caml_call1(_U7_,_Vb_);
        caml_call3(_U8_,_Vb_,_U__,_U9_);
        return caml_call3(CamlinternalOO[26],_U$_,_Vb_,_U6_)}}
    var show_option_t=caml_call2(CamlinternalOO[19],_f9_,_hQ_);
    function _hR_(fa,param,subj)
     {var _U5_=caml_call1(fa,0);return caml_call3(GT[221],ground$1,_U5_,subj)}
    var
     _hS_=caml_call1(CamlinternalOO[16],_f__),
     _hT_=caml_call2(CamlinternalOO[8],_hS_,shared$2),
     _hU_=_hT_[1],
     _hV_=_hT_[2],
     _hW_=_hT_[3],
     _hX_=_hT_[4],
     _hY_=_hT_[5],
     _hZ_=_hT_[6],
     _h0_=_hT_[7],
     _h1_=_hT_[8];
    function _h2_(self_40,fa,subj){return _hR_(caml_call1(GT[4],fa),0,subj)}
    function _h3_(self_40,fa,subj){return _hP_(caml_call1(GT[4],fa),0,subj)}
    function _h4_(self_40,fa,subj){return _hN_(caml_call1(GT[4],fa),0,subj)}
    function _h5_(self_40){return eq_option}
    function _h6_(self_40){return compare_option}
    function _h7_(self_40){return foldl_option}
    function _h8_(self_40){return foldr_option}
    var
     _h9_=
      [0,
       _hZ_,
       function(self_40){return fmt_option},
       _hX_,
       _h8_,
       _hY_,
       _h7_,
       _h1_,
       _h6_,
       _h0_,
       _h5_,
       _hV_,
       _h4_,
       _hW_,
       _h3_,
       _hU_,
       _h2_];
    caml_call2(CamlinternalOO[11],_hS_,_h9_);
    caml_call1(CamlinternalOO[17],_hS_);
    caml_call2(CamlinternalOO[24],0,_hS_);
    function html_option(fa,subj){return _hN_(caml_call1(GT[4],fa),0,subj)}
    function gmap_option(fa,subj){return _hP_(caml_call1(GT[4],fa),0,subj)}
    function show_option(fa,subj){return _hR_(caml_call1(GT[4],fa),0,subj)}
    var option_logic_t=[],_h__=0,_h$_=0;
    caml_update_dummy
     (option_logic_t,
      [0,
       0,
       function(_U0_)
        {caml_call2(CamlinternalOO[8],_U0_,_gb_);
         var _U1_=caml_call6(CamlinternalOO[18],_U0_,0,_gb_,0,logic_t$4,1)[1];
         return function(_U3_,_U2_)
          {var _U4_=caml_call2(CamlinternalOO[24],_U2_,_U0_);
           caml_call1(_U1_,_U4_);
           return caml_call3(CamlinternalOO[26],_U2_,_U4_,_U0_)}},
       _h$_,
       _h__]);
    function _ia_(_US_)
     {caml_call2(CamlinternalOO[8],_US_,_gb_);
      var
       _UT_=caml_call6(CamlinternalOO[18],_US_,0,_gb_,0,option_logic_t,1)[1],
       _UU_=caml_call6(CamlinternalOO[18],_US_,0,0,_ga_,fmt_logic_t$4,1)[1];
      return function(_UY_,_UX_,_UW_,_UV_)
       {var _UZ_=caml_call2(CamlinternalOO[24],_UX_,_US_);
        caml_call1(_UT_,_UZ_);
        caml_call3(_UU_,_UZ_,_UW_,_UV_);
        return caml_call3(CamlinternalOO[26],_UX_,_UZ_,_US_)}}
    var fmt_option_logic_t=caml_call2(CamlinternalOO[19],_ga_,_ia_);
    function fmt_option_logic(fa,inh_037,subj_038)
     {return caml_call4(GT[224],_hE_,fa,inh_037,subj_038)}
    function _ib_(_UK_)
     {caml_call2(CamlinternalOO[8],_UK_,_gb_);
      var
       _UL_=caml_call6(CamlinternalOO[18],_UK_,0,_gb_,0,option_logic_t,1)[1],
       _UM_=caml_call6(CamlinternalOO[18],_UK_,0,0,_ga_,foldr_logic_t$4,1)[1];
      return function(_UQ_,_UP_,_UO_,_UN_)
       {var _UR_=caml_call2(CamlinternalOO[24],_UP_,_UK_);
        caml_call1(_UL_,_UR_);
        caml_call3(_UM_,_UR_,_UO_,_UN_);
        return caml_call3(CamlinternalOO[26],_UP_,_UR_,_UK_)}}
    var foldr_option_logic_t=caml_call2(CamlinternalOO[19],_ga_,_ib_);
    function foldr_option_logic(fa,inh_039,subj_040)
     {return caml_call4(GT[226],_hE_,fa,inh_039,subj_040)}
    function _ic_(_UC_)
     {caml_call2(CamlinternalOO[8],_UC_,_gb_);
      var
       _UD_=caml_call6(CamlinternalOO[18],_UC_,0,_gb_,0,option_logic_t,1)[1],
       _UE_=caml_call6(CamlinternalOO[18],_UC_,0,0,_ga_,foldl_logic_t$4,1)[1];
      return function(_UI_,_UH_,_UG_,_UF_)
       {var _UJ_=caml_call2(CamlinternalOO[24],_UH_,_UC_);
        caml_call1(_UD_,_UJ_);
        caml_call3(_UE_,_UJ_,_UG_,_UF_);
        return caml_call3(CamlinternalOO[26],_UH_,_UJ_,_UC_)}}
    var foldl_option_logic_t=caml_call2(CamlinternalOO[19],_ga_,_ic_);
    function foldl_option_logic(fa,inh_041,subj_042)
     {return caml_call4(GT[225],_hE_,fa,inh_041,subj_042)}
    function _id_(_Uu_)
     {caml_call2(CamlinternalOO[8],_Uu_,_gb_);
      var
       _Uv_=caml_call6(CamlinternalOO[18],_Uu_,0,_gb_,0,option_logic_t,1)[1],
       _Uw_=
        caml_call6(CamlinternalOO[18],_Uu_,0,0,_ga_,compare_logic_t$4,1)[1];
      return function(_UA_,_Uz_,_Uy_,_Ux_)
       {var _UB_=caml_call2(CamlinternalOO[24],_Uz_,_Uu_);
        caml_call1(_Uv_,_UB_);
        caml_call3(_Uw_,_UB_,_Uy_,_Ux_);
        return caml_call3(CamlinternalOO[26],_Uz_,_UB_,_Uu_)}}
    var compare_option_logic_t=caml_call2(CamlinternalOO[19],_ga_,_id_);
    function compare_option_logic(fa,inh,subj)
     {return caml_call4(GT[228],_hE_,fa,inh,subj)}
    function _ie_(_Um_)
     {caml_call2(CamlinternalOO[8],_Um_,_gb_);
      var
       _Un_=caml_call6(CamlinternalOO[18],_Um_,0,_gb_,0,option_logic_t,1)[1],
       _Uo_=caml_call6(CamlinternalOO[18],_Um_,0,0,_ga_,eq_logic_t$4,1)[1];
      return function(_Us_,_Ur_,_Uq_,_Up_)
       {var _Ut_=caml_call2(CamlinternalOO[24],_Ur_,_Um_);
        caml_call1(_Un_,_Ut_);
        caml_call3(_Uo_,_Ut_,_Uq_,_Up_);
        return caml_call3(CamlinternalOO[26],_Ur_,_Ut_,_Um_)}}
    var eq_option_logic_t=caml_call2(CamlinternalOO[19],_ga_,_ie_);
    function eq_option_logic(fa,inh,subj)
     {return caml_call4(GT[227],_hE_,fa,inh,subj)}
    function _if_(_Ue_)
     {caml_call2(CamlinternalOO[8],_Ue_,_gb_);
      var
       _Uf_=caml_call6(CamlinternalOO[18],_Ue_,0,_gb_,0,option_logic_t,1)[1],
       _Ug_=caml_call6(CamlinternalOO[18],_Ue_,0,0,_ga_,html_logic_t$3,1)[1];
      return function(_Uk_,_Uj_,_Ui_,_Uh_)
       {var _Ul_=caml_call2(CamlinternalOO[24],_Uj_,_Ue_);
        caml_call1(_Uf_,_Ul_);
        caml_call3(_Ug_,_Ul_,_Ui_,_Uh_);
        return caml_call3(CamlinternalOO[26],_Uj_,_Ul_,_Ue_)}}
    var html_option_logic_t=caml_call2(CamlinternalOO[19],_ga_,_if_);
    function _ig_(fa,param,subj)
     {var _Ud_=caml_call1(fa,0);return caml_call3(GT[222],_hE_,_Ud_,subj)}
    function _ih_(_T7_)
     {caml_call2(CamlinternalOO[8],_T7_,_gb_);
      var
       _T8_=caml_call6(CamlinternalOO[18],_T7_,0,_gb_,0,option_logic_t,1)[1],
       _T9_=caml_call6(CamlinternalOO[18],_T7_,0,0,_ga_,gmap_logic_t$4,1)[1];
      return function(_Ub_,_Ua_,_T$_,_T__)
       {var _Uc_=caml_call2(CamlinternalOO[24],_Ua_,_T7_);
        caml_call1(_T8_,_Uc_);
        caml_call3(_T9_,_Uc_,_T$_,_T__);
        return caml_call3(CamlinternalOO[26],_Ua_,_Uc_,_T7_)}}
    var gmap_option_logic_t=caml_call2(CamlinternalOO[19],_ga_,_ih_);
    function _ii_(fa,param,subj)
     {var _T6_=caml_call1(fa,0);return caml_call3(GT[223],_hE_,_T6_,subj)}
    function _ij_(_TY_)
     {caml_call2(CamlinternalOO[8],_TY_,_gb_);
      var
       _TZ_=caml_call6(CamlinternalOO[18],_TY_,0,_gb_,0,option_logic_t,1)[1],
       _T0_=caml_call6(CamlinternalOO[18],_TY_,0,0,_ga_,show_logic_t$4,1)[1];
      return function(_T4_,_T3_,_T2_,_T1_)
       {var _T5_=caml_call2(CamlinternalOO[24],_T3_,_TY_);
        caml_call1(_TZ_,_T5_);
        caml_call3(_T0_,_T5_,_T2_,_T1_);
        return caml_call3(CamlinternalOO[26],_T3_,_T5_,_TY_)}}
    var show_option_logic_t=caml_call2(CamlinternalOO[19],_ga_,_ij_);
    function _ik_(fa,param,subj)
     {var _TX_=caml_call1(fa,0);return caml_call3(GT[221],_hE_,_TX_,subj)}
    function _il_(eta){return caml_call2(GT[2],gcata_logic,eta)}
    var
     _im_=caml_call1(CamlinternalOO[16],_f__),
     _in_=caml_call2(CamlinternalOO[8],_im_,shared$2),
     _io_=_in_[1],
     _ip_=_in_[2],
     _iq_=_in_[3],
     _ir_=_in_[4],
     _is_=_in_[5],
     _it_=_in_[6],
     _iu_=_in_[7],
     _iv_=_in_[8];
    function _iw_(self_50,fa,subj){return _ik_(caml_call1(GT[4],fa),0,subj)}
    function _ix_(self_50,fa,subj){return _ii_(caml_call1(GT[4],fa),0,subj)}
    function _iy_(self_50,fa,subj){return _ig_(caml_call1(GT[4],fa),0,subj)}
    function _iz_(self_50){return eq_option_logic}
    function _iA_(self_50){return compare_option_logic}
    function _iB_(self_50){return foldl_option_logic}
    function _iC_(self_50){return foldr_option_logic}
    var
     _iD_=
      [0,
       _it_,
       function(self_50){return fmt_option_logic},
       _ir_,
       _iC_,
       _is_,
       _iB_,
       _iv_,
       _iA_,
       _iu_,
       _iz_,
       _ip_,
       _iy_,
       _iq_,
       _ix_,
       _io_,
       _iw_];
    caml_call2(CamlinternalOO[11],_im_,_iD_);
    caml_call1(CamlinternalOO[17],_im_);
    var
     option_logic=
      [0,gcata_logic,caml_call2(CamlinternalOO[24],0,_im_),_il_];
    function html_option_logic(fa,subj)
     {return _ig_(caml_call1(GT[4],fa),0,subj)}
    function gmap_option_logic(fa,subj)
     {return _ii_(caml_call1(GT[4],fa),0,subj)}
    function show_option_logic(fa,subj)
     {return _ik_(caml_call1(GT[4],fa),0,subj)}
    var
     _iE_=_hE_[3],
     _iF_=caml_call1(CamlinternalOO[16],_f__),
     _iG_=caml_call2(CamlinternalOO[8],_iF_,shared$2),
     _iH_=_iG_[1],
     _iI_=_iG_[2],
     _iJ_=_iG_[3],
     _iK_=_iG_[4],
     _iL_=_iG_[5],
     _iM_=_iG_[6],
     _iN_=_iG_[7],
     _iO_=_iG_[8];
    function _iP_(self_51,fa)
     {function _TW_(l){return caml_call3(GT[221],GT[173],fa,l)}
      return caml_call2(GT[221],logic,_TW_)}
    function _iQ_(self_51)
     {var _TV_=_hE_[2];
      return caml_call1(caml_get_public_method(_TV_,5096781,26),_TV_)}
    function _iR_(self_51)
     {var _TU_=_hE_[2];
      return caml_call1(caml_get_public_method(_TU_,-988375701,27),_TU_)}
    function _iS_(self_51)
     {var _TT_=_hE_[2];
      return caml_call1(caml_get_public_method(_TT_,76555601,28),_TT_)}
    function _iT_(self_51)
     {var _TS_=_hE_[2];
      return caml_call1(caml_get_public_method(_TS_,76555595,29),_TS_)}
    function _iU_(self_51)
     {var _TR_=_hE_[2];
      return caml_call1(caml_get_public_method(_TR_,22636,30),_TR_)}
    function _iV_(self_51)
     {var _TQ_=_hE_[2];
      return caml_call1(caml_get_public_method(_TQ_,-999816043,31),_TQ_)}
    var
     _iW_=
      [0,
       _iO_,
       function(self_51)
        {var _TP_=_hE_[2];
         return caml_call1(caml_get_public_method(_TP_,57219237,32),_TP_)},
       _iJ_,
       _iV_,
       _iN_,
       _iU_,
       _iL_,
       _iT_,
       _iK_,
       _iS_,
       _iI_,
       _iR_,
       _iM_,
       _iQ_,
       _iH_,
       _iP_];
    caml_call2(CamlinternalOO[11],_iF_,_iW_);
    caml_call1(CamlinternalOO[17],_iF_);
    var
     _iX_=caml_call2(CamlinternalOO[24],0,_iF_),
     logic$2=[0,_hE_[1],_iX_,_iE_],
     t_t$1=[],
     _iY_=0,
     _iZ_=0;
    caml_update_dummy
     (t_t$1,
      [0,
       0,
       function(_TK_)
        {caml_call2(CamlinternalOO[8],_TK_,_f$_);
         var
          _TL_=
           caml_call6(CamlinternalOO[18],_TK_,0,_f$_,0,ground_t$1,1)[1];
         return function(_TN_,_TM_)
          {var _TO_=caml_call2(CamlinternalOO[24],_TM_,_TK_);
           caml_call1(_TL_,_TO_);
           return caml_call3(CamlinternalOO[26],_TM_,_TO_,_TK_)}},
       _iZ_,
       _iY_]);
    function _i0_(_TC_)
     {caml_call2(CamlinternalOO[8],_TC_,_f$_);
      var
       _TD_=caml_call6(CamlinternalOO[18],_TC_,0,_f$_,0,t_t$1,1)[1],
       _TE_=caml_call6(CamlinternalOO[18],_TC_,0,0,_f9_,fmt_ground_t$1,1)[1];
      return function(_TI_,_TH_,_TG_,_TF_)
       {var _TJ_=caml_call2(CamlinternalOO[24],_TH_,_TC_);
        caml_call1(_TD_,_TJ_);
        caml_call3(_TE_,_TJ_,_TG_,_TF_);
        return caml_call3(CamlinternalOO[26],_TH_,_TJ_,_TC_)}}
    var fmt_t_t$1=caml_call2(CamlinternalOO[19],_f9_,_i0_);
    function fmt_t$1(fa,inh_043,subj_044)
     {return caml_call4(GT[224],ground$1,fa,inh_043,subj_044)}
    function _i1_(_Tu_)
     {caml_call2(CamlinternalOO[8],_Tu_,_f$_);
      var
       _Tv_=caml_call6(CamlinternalOO[18],_Tu_,0,_f$_,0,t_t$1,1)[1],
       _Tw_=caml_call6(CamlinternalOO[18],_Tu_,0,0,_f9_,foldr_ground_t$1,1)[1];
      return function(_TA_,_Tz_,_Ty_,_Tx_)
       {var _TB_=caml_call2(CamlinternalOO[24],_Tz_,_Tu_);
        caml_call1(_Tv_,_TB_);
        caml_call3(_Tw_,_TB_,_Ty_,_Tx_);
        return caml_call3(CamlinternalOO[26],_Tz_,_TB_,_Tu_)}}
    var foldr_t_t$1=caml_call2(CamlinternalOO[19],_f9_,_i1_);
    function foldr_t$1(fa,inh_045,subj_046)
     {return caml_call4(GT[226],ground$1,fa,inh_045,subj_046)}
    function _i2_(_Tm_)
     {caml_call2(CamlinternalOO[8],_Tm_,_f$_);
      var
       _Tn_=caml_call6(CamlinternalOO[18],_Tm_,0,_f$_,0,t_t$1,1)[1],
       _To_=caml_call6(CamlinternalOO[18],_Tm_,0,0,_f9_,foldl_ground_t$1,1)[1];
      return function(_Ts_,_Tr_,_Tq_,_Tp_)
       {var _Tt_=caml_call2(CamlinternalOO[24],_Tr_,_Tm_);
        caml_call1(_Tn_,_Tt_);
        caml_call3(_To_,_Tt_,_Tq_,_Tp_);
        return caml_call3(CamlinternalOO[26],_Tr_,_Tt_,_Tm_)}}
    var foldl_t_t$1=caml_call2(CamlinternalOO[19],_f9_,_i2_);
    function foldl_t$1(fa,inh_047,subj_048)
     {return caml_call4(GT[225],ground$1,fa,inh_047,subj_048)}
    function _i3_(_Te_)
     {caml_call2(CamlinternalOO[8],_Te_,_f$_);
      var
       _Tf_=caml_call6(CamlinternalOO[18],_Te_,0,_f$_,0,t_t$1,1)[1],
       _Tg_=
        caml_call6(CamlinternalOO[18],_Te_,0,0,_f9_,compare_ground_t$1,1)[1];
      return function(_Tk_,_Tj_,_Ti_,_Th_)
       {var _Tl_=caml_call2(CamlinternalOO[24],_Tj_,_Te_);
        caml_call1(_Tf_,_Tl_);
        caml_call3(_Tg_,_Tl_,_Ti_,_Th_);
        return caml_call3(CamlinternalOO[26],_Tj_,_Tl_,_Te_)}}
    var compare_t_t$1=caml_call2(CamlinternalOO[19],_f9_,_i3_);
    function compare_t$1(fa,inh,subj)
     {return caml_call4(GT[228],ground$1,fa,inh,subj)}
    function _i4_(_S8_)
     {caml_call2(CamlinternalOO[8],_S8_,_f$_);
      var
       _S9_=caml_call6(CamlinternalOO[18],_S8_,0,_f$_,0,t_t$1,1)[1],
       _S__=caml_call6(CamlinternalOO[18],_S8_,0,0,_f9_,eq_ground_t$1,1)[1];
      return function(_Tc_,_Tb_,_Ta_,_S$_)
       {var _Td_=caml_call2(CamlinternalOO[24],_Tb_,_S8_);
        caml_call1(_S9_,_Td_);
        caml_call3(_S__,_Td_,_Ta_,_S$_);
        return caml_call3(CamlinternalOO[26],_Tb_,_Td_,_S8_)}}
    var eq_t_t$1=caml_call2(CamlinternalOO[19],_f9_,_i4_);
    function eq_t$1(fa,inh,subj)
     {return caml_call4(GT[227],ground$1,fa,inh,subj)}
    function _i5_(_S0_)
     {caml_call2(CamlinternalOO[8],_S0_,_f$_);
      var
       _S1_=caml_call6(CamlinternalOO[18],_S0_,0,_f$_,0,t_t$1,1)[1],
       _S2_=caml_call6(CamlinternalOO[18],_S0_,0,0,_f9_,html_ground_t$0,1)[1];
      return function(_S6_,_S5_,_S4_,_S3_)
       {var _S7_=caml_call2(CamlinternalOO[24],_S5_,_S0_);
        caml_call1(_S1_,_S7_);
        caml_call3(_S2_,_S7_,_S4_,_S3_);
        return caml_call3(CamlinternalOO[26],_S5_,_S7_,_S0_)}}
    var html_t_t$0=caml_call2(CamlinternalOO[19],_f9_,_i5_);
    function _i6_(fa,param,subj)
     {var _SZ_=caml_call1(fa,0);return caml_call3(GT[222],ground$1,_SZ_,subj)}
    function _i7_(_SR_)
     {caml_call2(CamlinternalOO[8],_SR_,_f$_);
      var
       _SS_=caml_call6(CamlinternalOO[18],_SR_,0,_f$_,0,t_t$1,1)[1],
       _ST_=caml_call6(CamlinternalOO[18],_SR_,0,0,_f9_,gmap_ground_t$1,1)[1];
      return function(_SX_,_SW_,_SV_,_SU_)
       {var _SY_=caml_call2(CamlinternalOO[24],_SW_,_SR_);
        caml_call1(_SS_,_SY_);
        caml_call3(_ST_,_SY_,_SV_,_SU_);
        return caml_call3(CamlinternalOO[26],_SW_,_SY_,_SR_)}}
    var gmap_t_t$1=caml_call2(CamlinternalOO[19],_f9_,_i7_);
    function _i8_(fa,param,subj)
     {var _SQ_=caml_call1(fa,0);return caml_call3(GT[223],ground$1,_SQ_,subj)}
    function _i9_(_SI_)
     {caml_call2(CamlinternalOO[8],_SI_,_f$_);
      var
       _SJ_=caml_call6(CamlinternalOO[18],_SI_,0,_f$_,0,t_t$1,1)[1],
       _SK_=caml_call6(CamlinternalOO[18],_SI_,0,0,_f9_,show_ground_t$1,1)[1];
      return function(_SO_,_SN_,_SM_,_SL_)
       {var _SP_=caml_call2(CamlinternalOO[24],_SN_,_SI_);
        caml_call1(_SJ_,_SP_);
        caml_call3(_SK_,_SP_,_SM_,_SL_);
        return caml_call3(CamlinternalOO[26],_SN_,_SP_,_SI_)}}
    var show_t_t$1=caml_call2(CamlinternalOO[19],_f9_,_i9_);
    function _i__(fa,param,subj)
     {var _SH_=caml_call1(fa,0);return caml_call3(GT[221],ground$1,_SH_,subj)}
    var
     _i$_=caml_call1(CamlinternalOO[16],_f__),
     _ja_=caml_call2(CamlinternalOO[8],_i$_,shared$2),
     _jb_=_ja_[1],
     _jc_=_ja_[2],
     _jd_=_ja_[3],
     _je_=_ja_[4],
     _jf_=_ja_[5],
     _jg_=_ja_[6],
     _jh_=_ja_[7],
     _ji_=_ja_[8];
    function _jj_(self_61,fa,subj){return _i__(caml_call1(GT[4],fa),0,subj)}
    function _jk_(self_61,fa,subj){return _i8_(caml_call1(GT[4],fa),0,subj)}
    function _jl_(self_61,fa,subj){return _i6_(caml_call1(GT[4],fa),0,subj)}
    function _jm_(self_61){return eq_t$1}
    function _jn_(self_61){return compare_t$1}
    function _jo_(self_61){return foldl_t$1}
    function _jp_(self_61){return foldr_t$1}
    var
     _jq_=
      [0,
       _jg_,
       function(self_61){return fmt_t$1},
       _je_,
       _jp_,
       _jf_,
       _jo_,
       _ji_,
       _jn_,
       _jh_,
       _jm_,
       _jc_,
       _jl_,
       _jd_,
       _jk_,
       _jb_,
       _jj_];
    caml_call2(CamlinternalOO[11],_i$_,_jq_);
    caml_call1(CamlinternalOO[17],_i$_);
    caml_call2(CamlinternalOO[24],0,_i$_);
    function html_t$0(fa,subj){return _i6_(caml_call1(GT[4],fa),0,subj)}
    function gmap_t$1(fa,subj){return _i8_(caml_call1(GT[4],fa),0,subj)}
    function show_t$1(fa,subj){return _i__(caml_call1(GT[4],fa),0,subj)}
    function inj$1(f,x)
     {return [1,caml_call2(caml_call1(GT[223],GT[173]),f,x)]}
    function reify$6(ra)
     {function _SE_(r)
       {function _SF_(fa)
         {function foo(param)
           {if(0 === param[0])
             {var xs=param[2],v=param[1];
              return [0,v,caml_call2(Stdlib_List[19],foo,xs)]}
            var t=param[1];
            return [1,caml_call3(GT[223],ground$1,fa,t)]}
          var _SG_=caml_call1(_p_[1],foo);
          return caml_call2(Reifier[4],Reifier[1],_SG_)}
        return caml_call2(_p_[8][1],ra,_SF_)}
      return caml_call2(_p_[8][1],Reifier[1],_SE_)}
    function prj_exn$2(ra)
     {function _SA_(r)
       {function _SB_(fa)
         {function _SC_(x)
           {var _SD_=caml_call1(r,x);
            return caml_call3(GT[223],ground$1,fa,_SD_)}
          return caml_call1(_p_[1],_SC_)}
        return caml_call2(_p_[8][1],ra,_SB_)}
      return caml_call2(_p_[8][1],Reifier[2],_SA_)}
    function some(x){return [0,x]}
    function none(param){return 0}
    function option(param){if(! param)return 0;var x=param[1];return [0,x]}
    var
     OCanren_Option=
      [0,
       t_t$1,
       gcata_ground$1,
       fmt_t_t$1,
       fmt_t$1,
       foldr_t_t$1,
       foldr_t$1,
       foldl_t_t$1,
       foldl_t$1,
       compare_t_t$1,
       compare_t$1,
       eq_t_t$1,
       eq_t$1,
       html_t_t$0,
       html_t$0,
       gmap_t_t$1,
       gmap_t$1,
       show_t_t$1,
       show_t$1,
       ground$1,
       ground_t$1,
       gcata_ground$1,
       fmt_ground_t$1,
       fmt_ground$1,
       foldr_ground_t$1,
       foldr_ground$1,
       foldl_ground_t$1,
       foldl_ground$1,
       compare_ground_t$1,
       compare_ground$1,
       eq_ground_t$1,
       eq_ground$1,
       html_ground_t$0,
       html_ground$0,
       gmap_ground_t$1,
       gmap_ground$1,
       show_ground_t$1,
       show_ground$1,
       ground$1,
       logic_t$4,
       gcata_logic,
       fmt_logic_t$4,
       fmt_logic$4,
       foldr_logic_t$4,
       foldr_logic$4,
       foldl_logic_t$4,
       foldl_logic$4,
       compare_logic_t$4,
       compare_logic$4,
       eq_logic_t$4,
       eq_logic$4,
       html_logic_t$3,
       html_logic$1,
       gmap_logic_t$4,
       gmap_logic$2,
       show_logic_t$4,
       show_logic$2,
       logic$2,
       option_t,
       gcata_ground$1,
       fmt_option_t,
       fmt_option,
       foldr_option_t,
       foldr_option,
       foldl_option_t,
       foldl_option,
       compare_option_t,
       compare_option,
       eq_option_t,
       eq_option,
       html_option_t,
       html_option,
       gmap_option_t,
       gmap_option,
       show_option_t,
       show_option,
       option_logic_t,
       gcata_logic,
       fmt_option_logic_t,
       fmt_option_logic,
       foldr_option_logic_t,
       foldr_option_logic,
       foldl_option_logic_t,
       foldl_option_logic,
       compare_option_logic_t,
       compare_option_logic,
       eq_option_logic_t,
       eq_option_logic,
       html_option_logic_t,
       html_option_logic,
       gmap_option_logic_t,
       gmap_option_logic,
       show_option_logic_t,
       show_option_logic,
       option_logic,
       inj$1,
       option,
       reify$6,
       prj_exn$2,
       reify$6,
       prj_exn$2,
       some,
       none];
    caml_register_global(371,OCanren_Option,"OCanren__Option");
    var ground_t$2=[],_jv_=0,_jw_=0;
    caml_update_dummy
     (ground_t$2,
      [0,
       0,
       function(_Sv_)
        {caml_call2(CamlinternalOO[7],_Sv_,cst_t_bool);
         var
          _Sw_=
           caml_call6(CamlinternalOO[18],_Sv_,0,shared$3,0,GT[19],1)[1];
         return function(_Sy_,_Sx_)
          {var _Sz_=caml_call2(CamlinternalOO[24],_Sx_,_Sv_);
           caml_call1(_Sw_,_Sz_);
           return caml_call3(CamlinternalOO[26],_Sx_,_Sz_,_Sv_)}},
       _jw_,
       _jv_]);
    var _jx_=GT[31];
    function _jy_(_So_)
     {caml_call2(CamlinternalOO[7],_So_,cst_t_bool$0);
      var
       _Sp_=caml_call6(CamlinternalOO[18],_So_,0,shared$3,0,ground_t$2,1)[1],
       _Sq_=caml_call6(CamlinternalOO[18],_So_,0,0,shared$3,GT[23],1)[1];
      return function(_St_,_Ss_,_Sr_)
       {var _Su_=caml_call2(CamlinternalOO[24],_Ss_,_So_);
        caml_call1(_Sp_,_Su_);
        caml_call2(_Sq_,_Su_,_Sr_);
        return caml_call3(CamlinternalOO[26],_Ss_,_Su_,_So_)}}
    var fmt_ground_t$2=caml_call2(CamlinternalOO[19],shared$3,_jy_);
    function fmt_ground$2(inh_001,subj_002)
     {return caml_call3(GT[224],GT[32],inh_001,subj_002)}
    function _jz_(_Sh_)
     {caml_call2(CamlinternalOO[7],_Sh_,cst_t_bool$1);
      var
       _Si_=caml_call6(CamlinternalOO[18],_Sh_,0,shared$3,0,ground_t$2,1)[1],
       _Sj_=caml_call6(CamlinternalOO[18],_Sh_,0,0,shared$3,GT[28],1)[1];
      return function(_Sm_,_Sl_,_Sk_)
       {var _Sn_=caml_call2(CamlinternalOO[24],_Sl_,_Sh_);
        caml_call1(_Si_,_Sn_);
        caml_call2(_Sj_,_Sn_,_Sk_);
        return caml_call3(CamlinternalOO[26],_Sl_,_Sn_,_Sh_)}}
    var gmap_ground_t$2=caml_call2(CamlinternalOO[19],shared$3,_jz_);
    function _jA_(param,subj){return caml_call2(GT[223],GT[32],subj)}
    function _jB_(_Sa_)
     {caml_call2(CamlinternalOO[7],_Sa_,cst_t_bool$2);
      var
       _Sb_=caml_call6(CamlinternalOO[18],_Sa_,0,shared$3,0,ground_t$2,1)[1],
       _Sc_=caml_call6(CamlinternalOO[18],_Sa_,0,0,shared$3,GT[24],1)[1];
      return function(_Sf_,_Se_,_Sd_)
       {var _Sg_=caml_call2(CamlinternalOO[24],_Se_,_Sa_);
        caml_call1(_Sb_,_Sg_);
        caml_call2(_Sc_,_Sg_,_Sd_);
        return caml_call3(CamlinternalOO[26],_Se_,_Sg_,_Sa_)}}
    var foldl_ground_t$2=caml_call2(CamlinternalOO[19],shared$3,_jB_);
    function foldl_ground$2(inh_003,subj_004)
     {return caml_call3(GT[225],GT[32],inh_003,subj_004)}
    function _jC_(_R5_)
     {caml_call2(CamlinternalOO[7],_R5_,cst_t_bool$3);
      var
       _R6_=caml_call6(CamlinternalOO[18],_R5_,0,shared$3,0,ground_t$2,1)[1],
       _R7_=caml_call6(CamlinternalOO[18],_R5_,0,0,shared$3,GT[25],1)[1];
      return function(_R__,_R9_,_R8_)
       {var _R$_=caml_call2(CamlinternalOO[24],_R9_,_R5_);
        caml_call1(_R6_,_R$_);
        caml_call2(_R7_,_R$_,_R8_);
        return caml_call3(CamlinternalOO[26],_R9_,_R$_,_R5_)}}
    var foldr_ground_t$2=caml_call2(CamlinternalOO[19],shared$3,_jC_);
    function foldr_ground$2(inh_005,subj_006)
     {return caml_call3(GT[226],GT[32],inh_005,subj_006)}
    function _jD_(_RY_)
     {caml_call2(CamlinternalOO[7],_RY_,cst_t_bool$4);
      var
       _RZ_=caml_call6(CamlinternalOO[18],_RY_,0,shared$3,0,ground_t$2,1)[1],
       _R0_=caml_call6(CamlinternalOO[18],_RY_,0,0,shared$3,GT[27],1)[1];
      return function(_R3_,_R2_,_R1_)
       {var _R4_=caml_call2(CamlinternalOO[24],_R2_,_RY_);
        caml_call1(_RZ_,_R4_);
        caml_call2(_R0_,_R4_,_R1_);
        return caml_call3(CamlinternalOO[26],_R2_,_R4_,_RY_)}}
    var compare_ground_t$2=caml_call2(CamlinternalOO[19],shared$3,_jD_);
    function compare_ground$2(inh,subj)
     {return caml_call3(GT[228],GT[32],inh,subj)}
    function _jE_(_RR_)
     {caml_call2(CamlinternalOO[7],_RR_,cst_t_bool$5);
      var
       _RS_=caml_call6(CamlinternalOO[18],_RR_,0,shared$3,0,ground_t$2,1)[1],
       _RT_=caml_call6(CamlinternalOO[18],_RR_,0,0,shared$3,GT[26],1)[1];
      return function(_RW_,_RV_,_RU_)
       {var _RX_=caml_call2(CamlinternalOO[24],_RV_,_RR_);
        caml_call1(_RS_,_RX_);
        caml_call2(_RT_,_RX_,_RU_);
        return caml_call3(CamlinternalOO[26],_RV_,_RX_,_RR_)}}
    var eq_ground_t$2=caml_call2(CamlinternalOO[19],shared$3,_jE_);
    function eq_ground$2(inh,subj){return caml_call3(GT[227],GT[32],inh,subj)}
    function _jF_(_RK_)
     {caml_call2(CamlinternalOO[7],_RK_,cst_t_bool$6);
      var
       _RL_=caml_call6(CamlinternalOO[18],_RK_,0,shared$3,0,ground_t$2,1)[1],
       _RM_=caml_call6(CamlinternalOO[18],_RK_,0,0,shared$3,GT[20],1)[1];
      return function(_RP_,_RO_,_RN_)
       {var _RQ_=caml_call2(CamlinternalOO[24],_RO_,_RK_);
        caml_call1(_RL_,_RQ_);
        caml_call2(_RM_,_RQ_,_RN_);
        return caml_call3(CamlinternalOO[26],_RO_,_RQ_,_RK_)}}
    var html_ground_t$1=caml_call2(CamlinternalOO[19],shared$3,_jF_);
    function _jG_(param,subj){return caml_call2(GT[222],GT[32],subj)}
    function _jH_(_RD_)
     {caml_call2(CamlinternalOO[7],_RD_,cst_t_bool$7);
      var
       _RE_=caml_call6(CamlinternalOO[18],_RD_,0,shared$3,0,ground_t$2,1)[1],
       _RF_=caml_call6(CamlinternalOO[18],_RD_,0,0,shared$3,GT[21],1)[1];
      return function(_RI_,_RH_,_RG_)
       {var _RJ_=caml_call2(CamlinternalOO[24],_RH_,_RD_);
        caml_call1(_RE_,_RJ_);
        caml_call2(_RF_,_RJ_,_RG_);
        return caml_call3(CamlinternalOO[26],_RH_,_RJ_,_RD_)}}
    var show_ground_t$2=caml_call2(CamlinternalOO[19],shared$3,_jH_);
    function _jI_(param,subj){return caml_call2(GT[221],GT[32],subj)}
    function _jJ_(eta){return caml_call2(GT[2],_jx_,eta)}
    var
     _jK_=caml_call1(CamlinternalOO[16],_jr_),
     _jL_=caml_call2(CamlinternalOO[8],_jK_,_jt_),
     _jM_=_jL_[1],
     _jN_=_jL_[2],
     _jO_=_jL_[3],
     _jP_=_jL_[4],
     _jQ_=_jL_[5],
     _jR_=_jL_[6],
     _jS_=_jL_[7],
     _jT_=_jL_[8];
    function _jU_(self_10,subj){return _jI_(0,subj)}
    function _jV_(self_10,subj){return _jG_(0,subj)}
    function _jW_(self_10){return eq_ground$2}
    function _jX_(self_10){return compare_ground$2}
    function _jY_(self_10){return foldr_ground$2}
    function _jZ_(self_10){return foldl_ground$2}
    function _j0_(self_10,subj){return _jA_(0,subj)}
    var
     _j1_=
      [0,
       _jR_,
       function(self_10){return fmt_ground$2},
       _jO_,
       _j0_,
       _jQ_,
       _jZ_,
       _jP_,
       _jY_,
       _jT_,
       _jX_,
       _jS_,
       _jW_,
       _jN_,
       _jV_,
       _jM_,
       _jU_];
    caml_call2(CamlinternalOO[11],_jK_,_j1_);
    caml_call1(CamlinternalOO[17],_jK_);
    var ground$2=[0,_jx_,caml_call2(CamlinternalOO[24],0,_jK_),_jJ_];
    function gmap_ground$2(subj){return _jA_(0,subj)}
    function html_ground$1(subj){return _jG_(0,subj)}
    function show_ground$2(subj){return _jI_(0,subj)}
    var t_t$2=[],_j2_=0,_j3_=0;
    caml_update_dummy
     (t_t$2,
      [0,
       0,
       function(_Ry_)
        {caml_call2(CamlinternalOO[7],_Ry_,cst_t_bool$8);
         var
          _Rz_=
           caml_call6(CamlinternalOO[18],_Ry_,0,shared$3,0,GT[19],1)[1];
         return function(_RB_,_RA_)
          {var _RC_=caml_call2(CamlinternalOO[24],_RA_,_Ry_);
           caml_call1(_Rz_,_RC_);
           return caml_call3(CamlinternalOO[26],_RA_,_RC_,_Ry_)}},
       _j3_,
       _j2_]);
    var _j4_=GT[31];
    function _j5_(_Rr_)
     {caml_call2(CamlinternalOO[7],_Rr_,cst_t_bool$9);
      var
       _Rs_=caml_call6(CamlinternalOO[18],_Rr_,0,shared$3,0,t_t$2,1)[1],
       _Rt_=caml_call6(CamlinternalOO[18],_Rr_,0,0,shared$3,GT[23],1)[1];
      return function(_Rw_,_Rv_,_Ru_)
       {var _Rx_=caml_call2(CamlinternalOO[24],_Rv_,_Rr_);
        caml_call1(_Rs_,_Rx_);
        caml_call2(_Rt_,_Rx_,_Ru_);
        return caml_call3(CamlinternalOO[26],_Rv_,_Rx_,_Rr_)}}
    var fmt_t_t$2=caml_call2(CamlinternalOO[19],shared$3,_j5_);
    function fmt_t$2(inh_007,subj_008)
     {return caml_call3(GT[224],GT[32],inh_007,subj_008)}
    function _j6_(_Rk_)
     {caml_call2(CamlinternalOO[7],_Rk_,cst_t_bool$10);
      var
       _Rl_=caml_call6(CamlinternalOO[18],_Rk_,0,shared$3,0,t_t$2,1)[1],
       _Rm_=caml_call6(CamlinternalOO[18],_Rk_,0,0,shared$3,GT[28],1)[1];
      return function(_Rp_,_Ro_,_Rn_)
       {var _Rq_=caml_call2(CamlinternalOO[24],_Ro_,_Rk_);
        caml_call1(_Rl_,_Rq_);
        caml_call2(_Rm_,_Rq_,_Rn_);
        return caml_call3(CamlinternalOO[26],_Ro_,_Rq_,_Rk_)}}
    var gmap_t_t$2=caml_call2(CamlinternalOO[19],shared$3,_j6_);
    function _j7_(param,subj){return caml_call2(GT[223],GT[32],subj)}
    function _j8_(_Rd_)
     {caml_call2(CamlinternalOO[7],_Rd_,cst_t_bool$11);
      var
       _Re_=caml_call6(CamlinternalOO[18],_Rd_,0,shared$3,0,t_t$2,1)[1],
       _Rf_=caml_call6(CamlinternalOO[18],_Rd_,0,0,shared$3,GT[24],1)[1];
      return function(_Ri_,_Rh_,_Rg_)
       {var _Rj_=caml_call2(CamlinternalOO[24],_Rh_,_Rd_);
        caml_call1(_Re_,_Rj_);
        caml_call2(_Rf_,_Rj_,_Rg_);
        return caml_call3(CamlinternalOO[26],_Rh_,_Rj_,_Rd_)}}
    var foldl_t_t$2=caml_call2(CamlinternalOO[19],shared$3,_j8_);
    function foldl_t$2(inh_009,subj_010)
     {return caml_call3(GT[225],GT[32],inh_009,subj_010)}
    function _j9_(_Q8_)
     {caml_call2(CamlinternalOO[7],_Q8_,cst_t_bool$12);
      var
       _Q9_=caml_call6(CamlinternalOO[18],_Q8_,0,shared$3,0,t_t$2,1)[1],
       _Q__=caml_call6(CamlinternalOO[18],_Q8_,0,0,shared$3,GT[25],1)[1];
      return function(_Rb_,_Ra_,_Q$_)
       {var _Rc_=caml_call2(CamlinternalOO[24],_Ra_,_Q8_);
        caml_call1(_Q9_,_Rc_);
        caml_call2(_Q__,_Rc_,_Q$_);
        return caml_call3(CamlinternalOO[26],_Ra_,_Rc_,_Q8_)}}
    var foldr_t_t$2=caml_call2(CamlinternalOO[19],shared$3,_j9_);
    function foldr_t$2(inh_011,subj_012)
     {return caml_call3(GT[226],GT[32],inh_011,subj_012)}
    function _j__(_Q1_)
     {caml_call2(CamlinternalOO[7],_Q1_,cst_t_bool$13);
      var
       _Q2_=caml_call6(CamlinternalOO[18],_Q1_,0,shared$3,0,t_t$2,1)[1],
       _Q3_=caml_call6(CamlinternalOO[18],_Q1_,0,0,shared$3,GT[27],1)[1];
      return function(_Q6_,_Q5_,_Q4_)
       {var _Q7_=caml_call2(CamlinternalOO[24],_Q5_,_Q1_);
        caml_call1(_Q2_,_Q7_);
        caml_call2(_Q3_,_Q7_,_Q4_);
        return caml_call3(CamlinternalOO[26],_Q5_,_Q7_,_Q1_)}}
    var compare_t_t$2=caml_call2(CamlinternalOO[19],shared$3,_j__);
    function compare_t$2(inh,subj){return caml_call3(GT[228],GT[32],inh,subj)}
    function _j$_(_QU_)
     {caml_call2(CamlinternalOO[7],_QU_,cst_t_bool$14);
      var
       _QV_=caml_call6(CamlinternalOO[18],_QU_,0,shared$3,0,t_t$2,1)[1],
       _QW_=caml_call6(CamlinternalOO[18],_QU_,0,0,shared$3,GT[26],1)[1];
      return function(_QZ_,_QY_,_QX_)
       {var _Q0_=caml_call2(CamlinternalOO[24],_QY_,_QU_);
        caml_call1(_QV_,_Q0_);
        caml_call2(_QW_,_Q0_,_QX_);
        return caml_call3(CamlinternalOO[26],_QY_,_Q0_,_QU_)}}
    var eq_t_t$2=caml_call2(CamlinternalOO[19],shared$3,_j$_);
    function eq_t$2(inh,subj){return caml_call3(GT[227],GT[32],inh,subj)}
    function _ka_(_QN_)
     {caml_call2(CamlinternalOO[7],_QN_,cst_t_bool$15);
      var
       _QO_=caml_call6(CamlinternalOO[18],_QN_,0,shared$3,0,t_t$2,1)[1],
       _QP_=caml_call6(CamlinternalOO[18],_QN_,0,0,shared$3,GT[20],1)[1];
      return function(_QS_,_QR_,_QQ_)
       {var _QT_=caml_call2(CamlinternalOO[24],_QR_,_QN_);
        caml_call1(_QO_,_QT_);
        caml_call2(_QP_,_QT_,_QQ_);
        return caml_call3(CamlinternalOO[26],_QR_,_QT_,_QN_)}}
    var html_t_t$1=caml_call2(CamlinternalOO[19],shared$3,_ka_);
    function _kb_(param,subj){return caml_call2(GT[222],GT[32],subj)}
    function _kc_(_QG_)
     {caml_call2(CamlinternalOO[7],_QG_,cst_t_bool$16);
      var
       _QH_=caml_call6(CamlinternalOO[18],_QG_,0,shared$3,0,t_t$2,1)[1],
       _QI_=caml_call6(CamlinternalOO[18],_QG_,0,0,shared$3,GT[21],1)[1];
      return function(_QL_,_QK_,_QJ_)
       {var _QM_=caml_call2(CamlinternalOO[24],_QK_,_QG_);
        caml_call1(_QH_,_QM_);
        caml_call2(_QI_,_QM_,_QJ_);
        return caml_call3(CamlinternalOO[26],_QK_,_QM_,_QG_)}}
    var show_t_t$2=caml_call2(CamlinternalOO[19],shared$3,_kc_);
    function _kd_(param,subj){return caml_call2(GT[221],GT[32],subj)}
    function _ke_(eta){return caml_call2(GT[2],_j4_,eta)}
    var
     _kf_=caml_call1(CamlinternalOO[16],_jr_),
     _kg_=caml_call2(CamlinternalOO[8],_kf_,_jt_),
     _kh_=_kg_[1],
     _ki_=_kg_[2],
     _kj_=_kg_[3],
     _kk_=_kg_[4],
     _kl_=_kg_[5],
     _km_=_kg_[6],
     _kn_=_kg_[7],
     _ko_=_kg_[8];
    function _kp_(self_20,subj){return _kd_(0,subj)}
    function _kq_(self_20,subj){return _kb_(0,subj)}
    function _kr_(self_20){return eq_t$2}
    function _ks_(self_20){return compare_t$2}
    function _kt_(self_20){return foldr_t$2}
    function _ku_(self_20){return foldl_t$2}
    function _kv_(self_20,subj){return _j7_(0,subj)}
    var
     _kw_=
      [0,
       _km_,
       function(self_20){return fmt_t$2},
       _kj_,
       _kv_,
       _kl_,
       _ku_,
       _kk_,
       _kt_,
       _ko_,
       _ks_,
       _kn_,
       _kr_,
       _ki_,
       _kq_,
       _kh_,
       _kp_];
    caml_call2(CamlinternalOO[11],_kf_,_kw_);
    caml_call1(CamlinternalOO[17],_kf_);
    var t$1=[0,_j4_,caml_call2(CamlinternalOO[24],0,_kf_),_ke_];
    function gmap_t$2(subj){return _j7_(0,subj)}
    function html_t$1(subj){return _kb_(0,subj)}
    function show_t$2(subj){return _kd_(0,subj)}
    var logic_t$5=[],_kx_=0,_ky_=0;
    caml_update_dummy
     (logic_t$5,
      [0,
       0,
       function(_QB_)
        {caml_call2(CamlinternalOO[8],_QB_,_ju_);
         var _QC_=caml_call6(CamlinternalOO[18],_QB_,0,_ju_,0,logic_t,1)[1];
         return function(_QE_,_QD_)
          {var _QF_=caml_call2(CamlinternalOO[24],_QD_,_QB_);
           caml_call1(_QC_,_QF_);
           return caml_call3(CamlinternalOO[26],_QD_,_QF_,_QB_)}},
       _ky_,
       _kx_]);
    function _kz_(_Qu_)
     {caml_call2(CamlinternalOO[8],_Qu_,_ju_);
      var
       _Qv_=caml_call6(CamlinternalOO[18],_Qu_,0,_ju_,0,logic_t$5,1)[1],
       _Qw_=caml_call6(CamlinternalOO[18],_Qu_,0,0,_js_,fmt_logic_t,1)[1];
      return function(_Qz_,_Qy_,_Qx_)
       {var _QA_=caml_call2(CamlinternalOO[24],_Qy_,_Qu_);
        caml_call1(_Qv_,_QA_);
        caml_call3
         (_Qw_,
          _QA_,
          function(inh_017,subj_018)
           {return caml_call3(GT[224],GT[32],inh_017,subj_018)},
          _Qx_);
        return caml_call3(CamlinternalOO[26],_Qy_,_QA_,_Qu_)}}
    var fmt_logic_t$5=caml_call2(CamlinternalOO[19],_js_,_kz_);
    function fmt_logic$5(inh_013,subj_014)
     {function _Qt_(inh_015,subj_016)
       {return caml_call3(GT[224],GT[32],inh_015,subj_016)}
      return caml_call4(GT[224],logic,_Qt_,inh_013,subj_014)}
    function _kA_(_Qm_)
     {caml_call2(CamlinternalOO[8],_Qm_,_ju_);
      var
       _Qn_=caml_call6(CamlinternalOO[18],_Qm_,0,_ju_,0,logic_t$5,1)[1],
       _Qo_=caml_call6(CamlinternalOO[18],_Qm_,0,0,_js_,gmap_logic_t,1)[1];
      return function(_Qr_,_Qq_,_Qp_)
       {var _Qs_=caml_call2(CamlinternalOO[24],_Qq_,_Qm_);
        caml_call1(_Qn_,_Qs_);
        caml_call3
         (_Qo_,
          _Qs_,
          function(param,subj){return caml_call2(GT[223],GT[32],subj)},
          _Qp_);
        return caml_call3(CamlinternalOO[26],_Qq_,_Qs_,_Qm_)}}
    var gmap_logic_t$5=caml_call2(CamlinternalOO[19],_js_,_kA_);
    function _kB_(param,subj)
     {function _Ql_(subj){return caml_call2(GT[223],GT[32],subj)}
      return caml_call3(GT[223],logic,_Ql_,subj)}
    function _kC_(_Qe_)
     {caml_call2(CamlinternalOO[8],_Qe_,_ju_);
      var
       _Qf_=caml_call6(CamlinternalOO[18],_Qe_,0,_ju_,0,logic_t$5,1)[1],
       _Qg_=caml_call6(CamlinternalOO[18],_Qe_,0,0,_js_,foldl_logic_t,1)[1];
      return function(_Qj_,_Qi_,_Qh_)
       {var _Qk_=caml_call2(CamlinternalOO[24],_Qi_,_Qe_);
        caml_call1(_Qf_,_Qk_);
        caml_call3
         (_Qg_,
          _Qk_,
          function(inh_023,subj_024)
           {return caml_call3(GT[225],GT[32],inh_023,subj_024)},
          _Qh_);
        return caml_call3(CamlinternalOO[26],_Qi_,_Qk_,_Qe_)}}
    var foldl_logic_t$5=caml_call2(CamlinternalOO[19],_js_,_kC_);
    function foldl_logic$5(inh_019,subj_020)
     {function _Qd_(inh_021,subj_022)
       {return caml_call3(GT[225],GT[32],inh_021,subj_022)}
      return caml_call4(GT[225],logic,_Qd_,inh_019,subj_020)}
    function _kD_(_P8_)
     {caml_call2(CamlinternalOO[8],_P8_,_ju_);
      var
       _P9_=caml_call6(CamlinternalOO[18],_P8_,0,_ju_,0,logic_t$5,1)[1],
       _P__=caml_call6(CamlinternalOO[18],_P8_,0,0,_js_,foldr_logic_t,1)[1];
      return function(_Qb_,_Qa_,_P$_)
       {var _Qc_=caml_call2(CamlinternalOO[24],_Qa_,_P8_);
        caml_call1(_P9_,_Qc_);
        caml_call3
         (_P__,
          _Qc_,
          function(inh_029,subj_030)
           {return caml_call3(GT[226],GT[32],inh_029,subj_030)},
          _P$_);
        return caml_call3(CamlinternalOO[26],_Qa_,_Qc_,_P8_)}}
    var foldr_logic_t$5=caml_call2(CamlinternalOO[19],_js_,_kD_);
    function foldr_logic$5(inh_025,subj_026)
     {function _P7_(inh_027,subj_028)
       {return caml_call3(GT[226],GT[32],inh_027,subj_028)}
      return caml_call4(GT[226],logic,_P7_,inh_025,subj_026)}
    function _kE_(_P0_)
     {caml_call2(CamlinternalOO[8],_P0_,_ju_);
      var
       _P1_=caml_call6(CamlinternalOO[18],_P0_,0,_ju_,0,logic_t$5,1)[1],
       _P2_=caml_call6(CamlinternalOO[18],_P0_,0,0,_js_,compare_logic_t,1)[1];
      return function(_P5_,_P4_,_P3_)
       {var _P6_=caml_call2(CamlinternalOO[24],_P4_,_P0_);
        caml_call1(_P1_,_P6_);
        caml_call3
         (_P2_,
          _P6_,
          function(inh,subj){return caml_call3(GT[228],GT[32],inh,subj)},
          _P3_);
        return caml_call3(CamlinternalOO[26],_P4_,_P6_,_P0_)}}
    var compare_logic_t$5=caml_call2(CamlinternalOO[19],_js_,_kE_);
    function compare_logic$5(inh,subj)
     {function _PZ_(inh,subj){return caml_call3(GT[228],GT[32],inh,subj)}
      return caml_call4(GT[228],logic,_PZ_,inh,subj)}
    function _kF_(_PS_)
     {caml_call2(CamlinternalOO[8],_PS_,_ju_);
      var
       _PT_=caml_call6(CamlinternalOO[18],_PS_,0,_ju_,0,logic_t$5,1)[1],
       _PU_=caml_call6(CamlinternalOO[18],_PS_,0,0,_js_,eq_logic_t,1)[1];
      return function(_PX_,_PW_,_PV_)
       {var _PY_=caml_call2(CamlinternalOO[24],_PW_,_PS_);
        caml_call1(_PT_,_PY_);
        caml_call3
         (_PU_,
          _PY_,
          function(inh,subj){return caml_call3(GT[227],GT[32],inh,subj)},
          _PV_);
        return caml_call3(CamlinternalOO[26],_PW_,_PY_,_PS_)}}
    var eq_logic_t$5=caml_call2(CamlinternalOO[19],_js_,_kF_);
    function eq_logic$5(inh,subj)
     {function _PR_(inh,subj){return caml_call3(GT[227],GT[32],inh,subj)}
      return caml_call4(GT[227],logic,_PR_,inh,subj)}
    function _kG_(_PK_)
     {caml_call2(CamlinternalOO[8],_PK_,_ju_);
      var
       _PL_=caml_call6(CamlinternalOO[18],_PK_,0,_ju_,0,logic_t$5,1)[1],
       _PM_=caml_call6(CamlinternalOO[18],_PK_,0,0,_js_,html_logic_t,1)[1];
      return function(_PP_,_PO_,_PN_)
       {var _PQ_=caml_call2(CamlinternalOO[24],_PO_,_PK_);
        caml_call1(_PL_,_PQ_);
        caml_call3
         (_PM_,
          _PQ_,
          function(param,subj){return caml_call2(GT[222],GT[32],subj)},
          _PN_);
        return caml_call3(CamlinternalOO[26],_PO_,_PQ_,_PK_)}}
    var html_logic_t$4=caml_call2(CamlinternalOO[19],_js_,_kG_);
    function _kH_(param,subj)
     {function _PJ_(subj){return caml_call2(GT[222],GT[32],subj)}
      return caml_call3(GT[222],logic,_PJ_,subj)}
    function _kI_(_PC_)
     {caml_call2(CamlinternalOO[8],_PC_,_ju_);
      var
       _PD_=caml_call6(CamlinternalOO[18],_PC_,0,_ju_,0,logic_t$5,1)[1],
       _PE_=caml_call6(CamlinternalOO[18],_PC_,0,0,_js_,show_logic_t,1)[1];
      return function(_PH_,_PG_,_PF_)
       {var _PI_=caml_call2(CamlinternalOO[24],_PG_,_PC_);
        caml_call1(_PD_,_PI_);
        caml_call3
         (_PE_,
          _PI_,
          function(param,subj){return caml_call2(GT[221],GT[32],subj)},
          _PF_);
        return caml_call3(CamlinternalOO[26],_PG_,_PI_,_PC_)}}
    var show_logic_t$5=caml_call2(CamlinternalOO[19],_js_,_kI_);
    function _kJ_(param,subj)
     {function _PB_(subj){return caml_call2(GT[221],GT[32],subj)}
      return caml_call3(GT[221],logic,_PB_,subj)}
    function _kK_(eta){return caml_call2(GT[2],gcata_logic,eta)}
    var
     _kL_=caml_call1(CamlinternalOO[16],_jr_),
     _kM_=caml_call2(CamlinternalOO[8],_kL_,_jt_),
     _kN_=_kM_[1],
     _kO_=_kM_[2],
     _kP_=_kM_[3],
     _kQ_=_kM_[4],
     _kR_=_kM_[5],
     _kS_=_kM_[6],
     _kT_=_kM_[7],
     _kU_=_kM_[8];
    function _kV_(self_30,subj){return _kJ_(0,subj)}
    function _kW_(self_30,subj){return _kH_(0,subj)}
    function _kX_(self_30){return eq_logic$5}
    function _kY_(self_30){return compare_logic$5}
    function _kZ_(self_30){return foldr_logic$5}
    function _k0_(self_30){return foldl_logic$5}
    function _k1_(self_30,subj){return _kB_(0,subj)}
    var
     _k2_=
      [0,
       _kS_,
       function(self_30){return fmt_logic$5},
       _kP_,
       _k1_,
       _kR_,
       _k0_,
       _kQ_,
       _kZ_,
       _kU_,
       _kY_,
       _kT_,
       _kX_,
       _kO_,
       _kW_,
       _kN_,
       _kV_];
    caml_call2(CamlinternalOO[11],_kL_,_k2_);
    caml_call1(CamlinternalOO[17],_kL_);
    var _k3_=[0,gcata_logic,caml_call2(CamlinternalOO[24],0,_kL_),_kK_];
    function gmap_logic$3(subj){return _kB_(0,subj)}
    function html_logic$2(subj){return _kH_(0,subj)}
    function show_logic$3(subj){return _kJ_(0,subj)}
    var bool_t=[],_k4_=0,_k5_=0;
    caml_update_dummy
     (bool_t,
      [0,
       0,
       function(_Pw_)
        {caml_call2(CamlinternalOO[7],_Pw_,cst_t_bool$17);
         var
          _Px_=
           caml_call6(CamlinternalOO[18],_Pw_,0,shared$3,0,ground_t$2,1)[1];
         return function(_Pz_,_Py_)
          {var _PA_=caml_call2(CamlinternalOO[24],_Py_,_Pw_);
           caml_call1(_Px_,_PA_);
           return caml_call3(CamlinternalOO[26],_Py_,_PA_,_Pw_)}},
       _k5_,
       _k4_]);
    function _k6_(_Pp_)
     {caml_call2(CamlinternalOO[7],_Pp_,cst_t_bool$18);
      var
       _Pq_=caml_call6(CamlinternalOO[18],_Pp_,0,shared$3,0,bool_t,1)[1],
       _Pr_=
        caml_call6(CamlinternalOO[18],_Pp_,0,0,shared$3,fmt_ground_t$2,1)[1];
      return function(_Pu_,_Pt_,_Ps_)
       {var _Pv_=caml_call2(CamlinternalOO[24],_Pt_,_Pp_);
        caml_call1(_Pq_,_Pv_);
        caml_call2(_Pr_,_Pv_,_Ps_);
        return caml_call3(CamlinternalOO[26],_Pt_,_Pv_,_Pp_)}}
    var fmt_bool_t=caml_call2(CamlinternalOO[19],shared$3,_k6_);
    function fmt_bool(inh_031,subj_032)
     {return caml_call3(GT[224],ground$2,inh_031,subj_032)}
    function _k7_(_Pi_)
     {caml_call2(CamlinternalOO[7],_Pi_,cst_t_bool$19);
      var
       _Pj_=caml_call6(CamlinternalOO[18],_Pi_,0,shared$3,0,bool_t,1)[1],
       _Pk_=
        caml_call6(CamlinternalOO[18],_Pi_,0,0,shared$3,gmap_ground_t$2,1)[1];
      return function(_Pn_,_Pm_,_Pl_)
       {var _Po_=caml_call2(CamlinternalOO[24],_Pm_,_Pi_);
        caml_call1(_Pj_,_Po_);
        caml_call2(_Pk_,_Po_,_Pl_);
        return caml_call3(CamlinternalOO[26],_Pm_,_Po_,_Pi_)}}
    var gmap_bool_t=caml_call2(CamlinternalOO[19],shared$3,_k7_);
    function _k8_(param,subj){return caml_call2(GT[223],ground$2,subj)}
    function _k9_(_Pb_)
     {caml_call2(CamlinternalOO[7],_Pb_,cst_t_bool$20);
      var
       _Pc_=caml_call6(CamlinternalOO[18],_Pb_,0,shared$3,0,bool_t,1)[1],
       _Pd_=
        caml_call6(CamlinternalOO[18],_Pb_,0,0,shared$3,foldl_ground_t$2,1)[1];
      return function(_Pg_,_Pf_,_Pe_)
       {var _Ph_=caml_call2(CamlinternalOO[24],_Pf_,_Pb_);
        caml_call1(_Pc_,_Ph_);
        caml_call2(_Pd_,_Ph_,_Pe_);
        return caml_call3(CamlinternalOO[26],_Pf_,_Ph_,_Pb_)}}
    var foldl_bool_t=caml_call2(CamlinternalOO[19],shared$3,_k9_);
    function foldl_bool(inh_033,subj_034)
     {return caml_call3(GT[225],ground$2,inh_033,subj_034)}
    function _k__(_O6_)
     {caml_call2(CamlinternalOO[7],_O6_,cst_t_bool$21);
      var
       _O7_=caml_call6(CamlinternalOO[18],_O6_,0,shared$3,0,bool_t,1)[1],
       _O8_=
        caml_call6(CamlinternalOO[18],_O6_,0,0,shared$3,foldr_ground_t$2,1)[1];
      return function(_O$_,_O__,_O9_)
       {var _Pa_=caml_call2(CamlinternalOO[24],_O__,_O6_);
        caml_call1(_O7_,_Pa_);
        caml_call2(_O8_,_Pa_,_O9_);
        return caml_call3(CamlinternalOO[26],_O__,_Pa_,_O6_)}}
    var foldr_bool_t=caml_call2(CamlinternalOO[19],shared$3,_k__);
    function foldr_bool(inh_035,subj_036)
     {return caml_call3(GT[226],ground$2,inh_035,subj_036)}
    function _k$_(_OZ_)
     {caml_call2(CamlinternalOO[7],_OZ_,cst_t_bool$22);
      var
       _O0_=caml_call6(CamlinternalOO[18],_OZ_,0,shared$3,0,bool_t,1)[1],
       _O1_=
        caml_call6(CamlinternalOO[18],_OZ_,0,0,shared$3,compare_ground_t$2,1)
         [1];
      return function(_O4_,_O3_,_O2_)
       {var _O5_=caml_call2(CamlinternalOO[24],_O3_,_OZ_);
        caml_call1(_O0_,_O5_);
        caml_call2(_O1_,_O5_,_O2_);
        return caml_call3(CamlinternalOO[26],_O3_,_O5_,_OZ_)}}
    var compare_bool_t=caml_call2(CamlinternalOO[19],shared$3,_k$_);
    function compare_bool(inh,subj)
     {return caml_call3(GT[228],ground$2,inh,subj)}
    function _la_(_OS_)
     {caml_call2(CamlinternalOO[7],_OS_,cst_t_bool$23);
      var
       _OT_=caml_call6(CamlinternalOO[18],_OS_,0,shared$3,0,bool_t,1)[1],
       _OU_=
        caml_call6(CamlinternalOO[18],_OS_,0,0,shared$3,eq_ground_t$2,1)[1];
      return function(_OX_,_OW_,_OV_)
       {var _OY_=caml_call2(CamlinternalOO[24],_OW_,_OS_);
        caml_call1(_OT_,_OY_);
        caml_call2(_OU_,_OY_,_OV_);
        return caml_call3(CamlinternalOO[26],_OW_,_OY_,_OS_)}}
    var eq_bool_t=caml_call2(CamlinternalOO[19],shared$3,_la_);
    function eq_bool(inh,subj){return caml_call3(GT[227],ground$2,inh,subj)}
    function _lb_(_OL_)
     {caml_call2(CamlinternalOO[7],_OL_,cst_t_bool$24);
      var
       _OM_=caml_call6(CamlinternalOO[18],_OL_,0,shared$3,0,bool_t,1)[1],
       _ON_=
        caml_call6(CamlinternalOO[18],_OL_,0,0,shared$3,html_ground_t$1,1)[1];
      return function(_OQ_,_OP_,_OO_)
       {var _OR_=caml_call2(CamlinternalOO[24],_OP_,_OL_);
        caml_call1(_OM_,_OR_);
        caml_call2(_ON_,_OR_,_OO_);
        return caml_call3(CamlinternalOO[26],_OP_,_OR_,_OL_)}}
    var html_bool_t=caml_call2(CamlinternalOO[19],shared$3,_lb_);
    function _lc_(param,subj){return caml_call2(GT[222],ground$2,subj)}
    function _ld_(_OE_)
     {caml_call2(CamlinternalOO[7],_OE_,cst_t_bool$25);
      var
       _OF_=caml_call6(CamlinternalOO[18],_OE_,0,shared$3,0,bool_t,1)[1],
       _OG_=
        caml_call6(CamlinternalOO[18],_OE_,0,0,shared$3,show_ground_t$2,1)[1];
      return function(_OJ_,_OI_,_OH_)
       {var _OK_=caml_call2(CamlinternalOO[24],_OI_,_OE_);
        caml_call1(_OF_,_OK_);
        caml_call2(_OG_,_OK_,_OH_);
        return caml_call3(CamlinternalOO[26],_OI_,_OK_,_OE_)}}
    var show_bool_t=caml_call2(CamlinternalOO[19],shared$3,_ld_);
    function _le_(param,subj){return caml_call2(GT[221],ground$2,subj)}
    function _lf_(eta){return caml_call2(GT[2],_jx_,eta)}
    var
     _lg_=caml_call1(CamlinternalOO[16],_jr_),
     _lh_=caml_call2(CamlinternalOO[8],_lg_,_jt_),
     _li_=_lh_[1],
     _lj_=_lh_[2],
     _lk_=_lh_[3],
     _ll_=_lh_[4],
     _lm_=_lh_[5],
     _ln_=_lh_[6],
     _lo_=_lh_[7],
     _lp_=_lh_[8];
    function _lq_(self_40,subj){return _le_(0,subj)}
    function _lr_(self_40,subj){return _lc_(0,subj)}
    function _ls_(self_40){return eq_bool}
    function _lt_(self_40){return compare_bool}
    function _lu_(self_40){return foldr_bool}
    function _lv_(self_40){return foldl_bool}
    function _lw_(self_40,subj){return _k8_(0,subj)}
    var
     _lx_=
      [0,
       _ln_,
       function(self_40){return fmt_bool},
       _lk_,
       _lw_,
       _lm_,
       _lv_,
       _ll_,
       _lu_,
       _lp_,
       _lt_,
       _lo_,
       _ls_,
       _lj_,
       _lr_,
       _li_,
       _lq_];
    caml_call2(CamlinternalOO[11],_lg_,_lx_);
    caml_call1(CamlinternalOO[17],_lg_);
    var bool=[0,_jx_,caml_call2(CamlinternalOO[24],0,_lg_),_lf_];
    function gmap_bool(subj){return _k8_(0,subj)}
    function html_bool(subj){return _lc_(0,subj)}
    function show_bool(subj){return _le_(0,subj)}
    var bool_logic_t=[],_ly_=0,_lz_=0;
    caml_update_dummy
     (bool_logic_t,
      [0,
       0,
       function(_Oz_)
        {caml_call2(CamlinternalOO[8],_Oz_,_ju_);
         var _OA_=caml_call6(CamlinternalOO[18],_Oz_,0,_ju_,0,logic_t$5,1)[1];
         return function(_OC_,_OB_)
          {var _OD_=caml_call2(CamlinternalOO[24],_OB_,_Oz_);
           caml_call1(_OA_,_OD_);
           return caml_call3(CamlinternalOO[26],_OB_,_OD_,_Oz_)}},
       _lz_,
       _ly_]);
    function _lA_(_Os_)
     {caml_call2(CamlinternalOO[8],_Os_,_ju_);
      var
       _Ot_=caml_call6(CamlinternalOO[18],_Os_,0,_ju_,0,bool_logic_t,1)[1],
       _Ou_=caml_call6(CamlinternalOO[18],_Os_,0,0,_js_,fmt_logic_t$5,1)[1];
      return function(_Ox_,_Ow_,_Ov_)
       {var _Oy_=caml_call2(CamlinternalOO[24],_Ow_,_Os_);
        caml_call1(_Ot_,_Oy_);
        caml_call2(_Ou_,_Oy_,_Ov_);
        return caml_call3(CamlinternalOO[26],_Ow_,_Oy_,_Os_)}}
    var fmt_bool_logic_t=caml_call2(CamlinternalOO[19],_js_,_lA_);
    function fmt_bool_logic(inh_037,subj_038)
     {return caml_call3(GT[224],_k3_,inh_037,subj_038)}
    function _lB_(_Ol_)
     {caml_call2(CamlinternalOO[8],_Ol_,_ju_);
      var
       _Om_=caml_call6(CamlinternalOO[18],_Ol_,0,_ju_,0,bool_logic_t,1)[1],
       _On_=caml_call6(CamlinternalOO[18],_Ol_,0,0,_js_,gmap_logic_t$5,1)[1];
      return function(_Oq_,_Op_,_Oo_)
       {var _Or_=caml_call2(CamlinternalOO[24],_Op_,_Ol_);
        caml_call1(_Om_,_Or_);
        caml_call2(_On_,_Or_,_Oo_);
        return caml_call3(CamlinternalOO[26],_Op_,_Or_,_Ol_)}}
    var gmap_bool_logic_t=caml_call2(CamlinternalOO[19],_js_,_lB_);
    function _lC_(param,subj){return caml_call2(GT[223],_k3_,subj)}
    function _lD_(_Oe_)
     {caml_call2(CamlinternalOO[8],_Oe_,_ju_);
      var
       _Of_=caml_call6(CamlinternalOO[18],_Oe_,0,_ju_,0,bool_logic_t,1)[1],
       _Og_=caml_call6(CamlinternalOO[18],_Oe_,0,0,_js_,foldl_logic_t$5,1)[1];
      return function(_Oj_,_Oi_,_Oh_)
       {var _Ok_=caml_call2(CamlinternalOO[24],_Oi_,_Oe_);
        caml_call1(_Of_,_Ok_);
        caml_call2(_Og_,_Ok_,_Oh_);
        return caml_call3(CamlinternalOO[26],_Oi_,_Ok_,_Oe_)}}
    var foldl_bool_logic_t=caml_call2(CamlinternalOO[19],_js_,_lD_);
    function foldl_bool_logic(inh_039,subj_040)
     {return caml_call3(GT[225],_k3_,inh_039,subj_040)}
    function _lE_(_N9_)
     {caml_call2(CamlinternalOO[8],_N9_,_ju_);
      var
       _N__=caml_call6(CamlinternalOO[18],_N9_,0,_ju_,0,bool_logic_t,1)[1],
       _N$_=caml_call6(CamlinternalOO[18],_N9_,0,0,_js_,foldr_logic_t$5,1)[1];
      return function(_Oc_,_Ob_,_Oa_)
       {var _Od_=caml_call2(CamlinternalOO[24],_Ob_,_N9_);
        caml_call1(_N__,_Od_);
        caml_call2(_N$_,_Od_,_Oa_);
        return caml_call3(CamlinternalOO[26],_Ob_,_Od_,_N9_)}}
    var foldr_bool_logic_t=caml_call2(CamlinternalOO[19],_js_,_lE_);
    function foldr_bool_logic(inh_041,subj_042)
     {return caml_call3(GT[226],_k3_,inh_041,subj_042)}
    function _lF_(_N2_)
     {caml_call2(CamlinternalOO[8],_N2_,_ju_);
      var
       _N3_=caml_call6(CamlinternalOO[18],_N2_,0,_ju_,0,bool_logic_t,1)[1],
       _N4_=
        caml_call6(CamlinternalOO[18],_N2_,0,0,_js_,compare_logic_t$5,1)[1];
      return function(_N7_,_N6_,_N5_)
       {var _N8_=caml_call2(CamlinternalOO[24],_N6_,_N2_);
        caml_call1(_N3_,_N8_);
        caml_call2(_N4_,_N8_,_N5_);
        return caml_call3(CamlinternalOO[26],_N6_,_N8_,_N2_)}}
    var compare_bool_logic_t=caml_call2(CamlinternalOO[19],_js_,_lF_);
    function compare_bool_logic(inh,subj)
     {return caml_call3(GT[228],_k3_,inh,subj)}
    function _lG_(_NV_)
     {caml_call2(CamlinternalOO[8],_NV_,_ju_);
      var
       _NW_=caml_call6(CamlinternalOO[18],_NV_,0,_ju_,0,bool_logic_t,1)[1],
       _NX_=caml_call6(CamlinternalOO[18],_NV_,0,0,_js_,eq_logic_t$5,1)[1];
      return function(_N0_,_NZ_,_NY_)
       {var _N1_=caml_call2(CamlinternalOO[24],_NZ_,_NV_);
        caml_call1(_NW_,_N1_);
        caml_call2(_NX_,_N1_,_NY_);
        return caml_call3(CamlinternalOO[26],_NZ_,_N1_,_NV_)}}
    var eq_bool_logic_t=caml_call2(CamlinternalOO[19],_js_,_lG_);
    function eq_bool_logic(inh,subj){return caml_call3(GT[227],_k3_,inh,subj)}
    function _lH_(_NO_)
     {caml_call2(CamlinternalOO[8],_NO_,_ju_);
      var
       _NP_=caml_call6(CamlinternalOO[18],_NO_,0,_ju_,0,bool_logic_t,1)[1],
       _NQ_=caml_call6(CamlinternalOO[18],_NO_,0,0,_js_,html_logic_t$4,1)[1];
      return function(_NT_,_NS_,_NR_)
       {var _NU_=caml_call2(CamlinternalOO[24],_NS_,_NO_);
        caml_call1(_NP_,_NU_);
        caml_call2(_NQ_,_NU_,_NR_);
        return caml_call3(CamlinternalOO[26],_NS_,_NU_,_NO_)}}
    var html_bool_logic_t=caml_call2(CamlinternalOO[19],_js_,_lH_);
    function _lI_(param,subj){return caml_call2(GT[222],_k3_,subj)}
    function _lJ_(_NH_)
     {caml_call2(CamlinternalOO[8],_NH_,_ju_);
      var
       _NI_=caml_call6(CamlinternalOO[18],_NH_,0,_ju_,0,bool_logic_t,1)[1],
       _NJ_=caml_call6(CamlinternalOO[18],_NH_,0,0,_js_,show_logic_t$5,1)[1];
      return function(_NM_,_NL_,_NK_)
       {var _NN_=caml_call2(CamlinternalOO[24],_NL_,_NH_);
        caml_call1(_NI_,_NN_);
        caml_call2(_NJ_,_NN_,_NK_);
        return caml_call3(CamlinternalOO[26],_NL_,_NN_,_NH_)}}
    var show_bool_logic_t=caml_call2(CamlinternalOO[19],_js_,_lJ_);
    function _lK_(param,subj){return caml_call2(GT[221],_k3_,subj)}
    function _lL_(eta){return caml_call2(GT[2],gcata_logic,eta)}
    var
     _lM_=caml_call1(CamlinternalOO[16],_jr_),
     _lN_=caml_call2(CamlinternalOO[8],_lM_,_jt_),
     _lO_=_lN_[1],
     _lP_=_lN_[2],
     _lQ_=_lN_[3],
     _lR_=_lN_[4],
     _lS_=_lN_[5],
     _lT_=_lN_[6],
     _lU_=_lN_[7],
     _lV_=_lN_[8];
    function _lW_(self_50,subj){return _lK_(0,subj)}
    function _lX_(self_50,subj){return _lI_(0,subj)}
    function _lY_(self_50){return eq_bool_logic}
    function _lZ_(self_50){return compare_bool_logic}
    function _l0_(self_50){return foldr_bool_logic}
    function _l1_(self_50){return foldl_bool_logic}
    function _l2_(self_50,subj){return _lC_(0,subj)}
    var
     _l3_=
      [0,
       _lT_,
       function(self_50){return fmt_bool_logic},
       _lQ_,
       _l2_,
       _lS_,
       _l1_,
       _lR_,
       _l0_,
       _lV_,
       _lZ_,
       _lU_,
       _lY_,
       _lP_,
       _lX_,
       _lO_,
       _lW_];
    caml_call2(CamlinternalOO[11],_lM_,_l3_);
    caml_call1(CamlinternalOO[17],_lM_);
    var bool_logic=[0,gcata_logic,caml_call2(CamlinternalOO[24],0,_lM_),_lL_];
    function gmap_bool_logic(subj){return _lC_(0,subj)}
    function html_bool_logic(subj){return _lI_(0,subj)}
    function show_bool_logic(subj){return _lK_(0,subj)}
    var
     _l4_=_k3_[3],
     _l5_=caml_call1(CamlinternalOO[16],_jr_),
     _l6_=caml_call2(CamlinternalOO[8],_l5_,_jt_),
     _l7_=_l6_[1],
     _l8_=_l6_[2],
     _l9_=_l6_[3],
     _l__=_l6_[4],
     _l$_=_l6_[5],
     _ma_=_l6_[6],
     _mb_=_l6_[7],
     _mc_=_l6_[8];
    function _md_(self_51)
     {var _NG_=caml_call1(GT[221],GT[32]);
      return caml_call2(GT[221],logic,_NG_)}
    function _me_(self_51)
     {var _NF_=_k3_[2];
      return caml_call1(caml_get_public_method(_NF_,5096781,33),_NF_)}
    function _mf_(self_51)
     {var _NE_=_k3_[2];
      return caml_call1(caml_get_public_method(_NE_,-988375701,34),_NE_)}
    function _mg_(self_51)
     {var _ND_=_k3_[2];
      return caml_call1(caml_get_public_method(_ND_,76555601,35),_ND_)}
    function _mh_(self_51)
     {var _NC_=_k3_[2];
      return caml_call1(caml_get_public_method(_NC_,76555595,36),_NC_)}
    function _mi_(self_51)
     {var _NB_=_k3_[2];
      return caml_call1(caml_get_public_method(_NB_,22636,37),_NB_)}
    function _mj_(self_51)
     {var _NA_=_k3_[2];
      return caml_call1(caml_get_public_method(_NA_,-999816043,38),_NA_)}
    var
     _mk_=
      [0,
       _mc_,
       function(self_51)
        {var _Nz_=_k3_[2];
         return caml_call1(caml_get_public_method(_Nz_,57219237,39),_Nz_)},
       _l9_,
       _mj_,
       _mb_,
       _mi_,
       _l$_,
       _mh_,
       _l__,
       _mg_,
       _l8_,
       _mf_,
       _ma_,
       _me_,
       _l7_,
       _md_];
    caml_call2(CamlinternalOO[11],_l5_,_mk_);
    caml_call1(CamlinternalOO[17],_l5_);
    var
     _ml_=caml_call2(CamlinternalOO[24],0,_l5_),
     logic$3=[0,_k3_[1],_ml_,_l4_],
     falso=0,
     truo=1;
    function symbol$6(a,b,c)
     {var _MV_=0;
      function _MW_(_Ny_){return unify$1(c,falso,_Ny_)}
      function _MX_(_Nx_){return unify$1(b,truo,_Nx_)}
      function _MY_(_Nw_){return unify$1(a,truo,_Nw_)}
      function _MZ_(_Nv_){return symbol$3(_MY_,_MX_,_Nv_)}
      var _M0_=[0,function(_Nu_){return symbol$3(_MZ_,_MW_,_Nu_)},_MV_];
      function _M1_(_Nt_){return unify$1(c,truo,_Nt_)}
      function _M2_(_Ns_){return unify$1(b,falso,_Ns_)}
      function _M3_(_Nr_){return unify$1(a,truo,_Nr_)}
      function _M4_(_Nq_){return symbol$3(_M3_,_M2_,_Nq_)}
      var _M5_=[0,function(_Np_){return symbol$3(_M4_,_M1_,_Np_)},_M0_];
      function _M6_(_No_){return unify$1(c,truo,_No_)}
      function _M7_(_Nn_){return unify$1(b,truo,_Nn_)}
      function _M8_(_Nm_){return unify$1(a,falso,_Nm_)}
      function _M9_(_Nl_){return symbol$3(_M8_,_M7_,_Nl_)}
      var _M__=[0,function(_Nk_){return symbol$3(_M9_,_M6_,_Nk_)},_M5_];
      function _M$_(_Nj_){return unify$1(c,truo,_Nj_)}
      function _Na_(_Ni_){return unify$1(b,falso,_Ni_)}
      function _Nb_(_Nh_){return unify$1(a,falso,_Nh_)}
      function _Nc_(_Ng_){return symbol$3(_Nb_,_Na_,_Ng_)}
      var _Nd_=[0,function(_Nf_){return symbol$3(_Nc_,_M$_,_Nf_)},_M__];
      return function(_Ne_){return conde(_Nd_,_Ne_)}}
    function noto(a,na){return symbol$6(a,a,na)}
    function oro(a,b,c)
     {function _MO_(aa,bb)
       {var
         _MP_=symbol$6(aa,bb,c),
         _MQ_=symbol$6(b,b,bb),
         _MR_=symbol$6(a,a,aa);
        function _MS_(_MU_){return symbol$3(_MR_,_MQ_,_MU_)}
        return function(_MT_){return symbol$3(_MS_,_MP_,_MT_)}}
      return caml_call1(Fresh[4],_MO_)}
    function ando(a,b,c)
     {function _MK_(ab)
       {var _ML_=symbol$6(ab,ab,c),_MM_=symbol$6(a,b,ab);
        return function(_MN_){return symbol$3(_MM_,_ML_,_MN_)}}
      return caml_call1(Fresh[3],_MK_)}
    function symbol$7(a){return noto(a,truo)}
    function symbol$8(a,b){return ando(a,b,truo)}
    function symbol$9(a,b){return oro(a,b,truo)}
    var
     OCanren_Bool=
      [0,
       t_t$2,
       _j4_,
       fmt_t_t$2,
       fmt_t$2,
       gmap_t_t$2,
       gmap_t$2,
       foldl_t_t$2,
       foldl_t$2,
       foldr_t_t$2,
       foldr_t$2,
       compare_t_t$2,
       compare_t$2,
       eq_t_t$2,
       eq_t$2,
       html_t_t$1,
       html_t$1,
       show_t_t$2,
       show_t$2,
       t$1,
       ground_t$2,
       _jx_,
       fmt_ground_t$2,
       fmt_ground$2,
       gmap_ground_t$2,
       gmap_ground$2,
       foldl_ground_t$2,
       foldl_ground$2,
       foldr_ground_t$2,
       foldr_ground$2,
       compare_ground_t$2,
       compare_ground$2,
       eq_ground_t$2,
       eq_ground$2,
       html_ground_t$1,
       html_ground$1,
       show_ground_t$2,
       show_ground$2,
       ground$2,
       logic_t$5,
       gcata_logic,
       fmt_logic_t$5,
       fmt_logic$5,
       gmap_logic_t$5,
       gmap_logic$3,
       foldl_logic_t$5,
       foldl_logic$5,
       foldr_logic_t$5,
       foldr_logic$5,
       compare_logic_t$5,
       compare_logic$5,
       eq_logic_t$5,
       eq_logic$5,
       html_logic_t$4,
       html_logic$2,
       show_logic_t$5,
       show_logic$3,
       logic$3,
       bool_t,
       _jx_,
       fmt_bool_t,
       fmt_bool,
       gmap_bool_t,
       gmap_bool,
       foldl_bool_t,
       foldl_bool,
       foldr_bool_t,
       foldr_bool,
       compare_bool_t,
       compare_bool,
       eq_bool_t,
       eq_bool,
       html_bool_t,
       html_bool,
       show_bool_t,
       show_bool,
       bool,
       bool_logic_t,
       gcata_logic,
       fmt_bool_logic_t,
       fmt_bool_logic,
       gmap_bool_logic_t,
       gmap_bool_logic,
       foldl_bool_logic_t,
       foldl_bool_logic,
       foldr_bool_logic_t,
       foldr_bool_logic,
       compare_bool_logic_t,
       compare_bool_logic,
       eq_bool_logic_t,
       eq_bool_logic,
       html_bool_logic_t,
       html_bool_logic,
       show_bool_logic_t,
       show_bool_logic,
       bool_logic,
       to_logic,
       reify$2,
       prj_exn,
       reify$2,
       prj_exn,
       falso,
       truo,
       symbol$6,
       noto,
       symbol$7,
       oro,
       symbol$9,
       ando,
       symbol$8];
    caml_register_global(372,OCanren_Bool,"OCanren__Bool");
    var t_t$3=[],_mr_=0,_ms_=0;
    caml_update_dummy
     (t_t$3,
      [0,
       0,
       function(_MH_)
        {caml_call2(CamlinternalOO[8],_MH_,shared$4);
         return function(_MJ_,_MI_)
          {return caml_call2(CamlinternalOO[24],_MI_,_MH_)}},
       _ms_,
       _mr_]);
    function gcata_nat(tr,inh,subj)
     {if(! subj)
       return caml_call3(caml_get_public_method(tr,4944435,41),tr,inh,subj);
      var x_001=subj[1];
      return caml_call4
              (caml_get_public_method(tr,4944439,40),tr,inh,subj,x_001)}
    function _mt_(_Mu_)
     {var
       _Mv_=caml_call2(CamlinternalOO[3],_Mu_,cst$93),
       _Mw_=caml_call2(CamlinternalOO[8],_Mu_,shared$4),
       _Mx_=_Mw_[1],
       _My_=_Mw_[2],
       _Mz_=caml_call6(CamlinternalOO[18],_Mu_,0,shared$4,0,t_t$3,1)[1];
      function _MA_(self_2,inh_004,param,x_005)
       {return caml_call4
                (Stdlib_Format[129],inh_004,_mu_,self_2[1 + _Mv_],x_005)}
      var
       _MB_=
        [0,
         _My_,
         function(self_2,inh_003,param)
          {return caml_call2(Stdlib_Format[129],inh_003,_mv_)},
         _Mx_,
         _MA_];
      caml_call2(CamlinternalOO[11],_Mu_,_MB_);
      return function(_MF_,_ME_,_MD_,_MC_)
       {var _MG_=caml_call2(CamlinternalOO[24],_ME_,_Mu_);
        _MG_[1 + _Mv_] = _MD_;
        caml_call1(_Mz_,_MG_);
        return caml_call3(CamlinternalOO[26],_ME_,_MG_,_Mu_)}}
    var fmt_t_t$3=caml_call2(CamlinternalOO[19],_mm_,_mt_);
    function fmt_t$3(fa,inh0,subj)
     {var _Mt_=caml_call2(fmt_t_t$3[1],0,fa);
      return caml_call4(GT[2],gcata_nat,_Mt_,inh0,subj)}
    function _mw_(_Mg_)
     {var
       _Mh_=caml_call2(CamlinternalOO[3],_Mg_,cst$94),
       _Mi_=caml_call2(CamlinternalOO[8],_Mg_,shared$4),
       _Mj_=_Mi_[1],
       _Mk_=_Mi_[2],
       _Ml_=caml_call6(CamlinternalOO[18],_Mg_,0,shared$4,0,t_t$3,1)[1];
      function _Mm_(self_3,inh_007,param,x_008)
       {return caml_call2(self_3[1 + _Mh_],inh_007,x_008)}
      var
       _Mn_=
        [0,_Mk_,function(self_3,inh_006,param){return inh_006},_Mj_,_Mm_];
      caml_call2(CamlinternalOO[11],_Mg_,_Mn_);
      return function(_Mr_,_Mq_,_Mp_,_Mo_)
       {var _Ms_=caml_call2(CamlinternalOO[24],_Mq_,_Mg_);
        _Ms_[1 + _Mh_] = _Mp_;
        caml_call1(_Ml_,_Ms_);
        return caml_call3(CamlinternalOO[26],_Mq_,_Ms_,_Mg_)}}
    var foldr_t_t$3=caml_call2(CamlinternalOO[19],_mm_,_mw_);
    function foldr_t$3(fa,inh0,subj)
     {var _Mf_=caml_call2(foldr_t_t$3[1],0,fa);
      return caml_call4(GT[2],gcata_nat,_Mf_,inh0,subj)}
    function _mx_(_L4_)
     {var
       _L5_=caml_call2(CamlinternalOO[3],_L4_,cst$95),
       _L6_=caml_call2(CamlinternalOO[8],_L4_,shared$4),
       _L7_=_L6_[1],
       _L8_=_L6_[2],
       _L9_=caml_call6(CamlinternalOO[18],_L4_,0,shared$4,0,t_t$3,1)[1];
      function _L__(self_4,inh_010,param,x_011)
       {return caml_call2(self_4[1 + _L5_],inh_010,x_011)}
      var
       _L$_=
        [0,_L8_,function(self_4,inh_009,param){return inh_009},_L7_,_L__];
      caml_call2(CamlinternalOO[11],_L4_,_L$_);
      return function(_Md_,_Mc_,_Mb_,_Ma_)
       {var _Me_=caml_call2(CamlinternalOO[24],_Mc_,_L4_);
        _Me_[1 + _L5_] = _Mb_;
        caml_call1(_L9_,_Me_);
        return caml_call3(CamlinternalOO[26],_Mc_,_Me_,_L4_)}}
    var foldl_t_t$3=caml_call2(CamlinternalOO[19],_mm_,_mx_);
    function foldl_t$3(fa,inh0,subj)
     {var _L3_=caml_call2(foldl_t_t$3[1],0,fa);
      return caml_call4(GT[2],gcata_nat,_L3_,inh0,subj)}
    function _my_(_LP_)
     {var
       _LQ_=caml_call2(CamlinternalOO[3],_LP_,cst$96),
       _LR_=caml_call2(CamlinternalOO[8],_LP_,shared$4),
       _LS_=_LR_[1],
       _LT_=_LR_[2],
       _LU_=caml_call6(CamlinternalOO[18],_LP_,0,shared$4,0,t_t$3,1)[1];
      function _LV_(self_5,inh_014,param,x_015)
       {if(! inh_014)return caml_call2(GT[12],inh_014,_mz_);
        var x_016=inh_014[1];
        function _L2_(param){return caml_call2(self_5[1 + _LQ_],x_016,x_015)}
        return caml_call2(GT[6],1,_L2_)}
      var
       _LW_=
        [0,
         _LT_,
         function(self_5,inh_012,param)
          {return inh_012?caml_call2(GT[12],inh_012,0):1},
         _LS_,
         _LV_];
      caml_call2(CamlinternalOO[11],_LP_,_LW_);
      return function(_L0_,_LZ_,_LY_,_LX_)
       {var _L1_=caml_call2(CamlinternalOO[24],_LZ_,_LP_);
        _L1_[1 + _LQ_] = _LY_;
        caml_call1(_LU_,_L1_);
        return caml_call3(CamlinternalOO[26],_LZ_,_L1_,_LP_)}}
    var compare_t_t$3=caml_call2(CamlinternalOO[19],_mm_,_my_);
    function compare_t$3(fa,inh0,subj)
     {var _LO_=caml_call2(compare_t_t$3[1],0,fa);
      return caml_call4(GT[2],gcata_nat,_LO_,inh0,subj)}
    function _mA_(_LB_)
     {var
       _LC_=caml_call2(CamlinternalOO[3],_LB_,cst$97),
       _LD_=caml_call2(CamlinternalOO[8],_LB_,shared$4),
       _LE_=_LD_[1],
       _LF_=_LD_[2],
       _LG_=caml_call6(CamlinternalOO[18],_LB_,0,shared$4,0,t_t$3,1)[1];
      function _LH_(self_6,inh_020,param,x_021)
       {if(! inh_020)return 0;
        var x_022=inh_020[1];
        return caml_call2(self_6[1 + _LC_],x_022,x_021)}
      var
       _LI_=
        [0,_LF_,function(self_6,inh_018,param){return inh_018?0:1},_LE_,_LH_];
      caml_call2(CamlinternalOO[11],_LB_,_LI_);
      return function(_LM_,_LL_,_LK_,_LJ_)
       {var _LN_=caml_call2(CamlinternalOO[24],_LL_,_LB_);
        _LN_[1 + _LC_] = _LK_;
        caml_call1(_LG_,_LN_);
        return caml_call3(CamlinternalOO[26],_LL_,_LN_,_LB_)}}
    var eq_t_t$3=caml_call2(CamlinternalOO[19],_mm_,_mA_);
    function eq_t$3(fa,inh0,subj)
     {var _LA_=caml_call2(eq_t_t$3[1],0,fa);
      return caml_call4(GT[2],gcata_nat,_LA_,inh0,subj)}
    function _mB_(_Lb_)
     {var
       _Lc_=caml_call2(CamlinternalOO[3],_Lb_,cst$98),
       _Ld_=caml_call2(CamlinternalOO[8],_Lb_,shared$4),
       _Le_=_Ld_[1],
       _Lf_=_Ld_[2],
       _Lg_=caml_call6(CamlinternalOO[18],_Lb_,0,shared$4,0,t_t$3,1)[1];
      function _Lh_(self_7,param,_Lp_,x_024)
       {var
         _Lq_=caml_call2(self_7[1 + _Lc_],0,x_024),
         _Lr_=caml_call2(Stdlib_List[4],_Lq_,0),
         _Ls_=caml_call1(HTML[10],_Lr_),
         _Lt_=caml_call2(HTML[25],0,_Ls_),
         _Lu_=caml_call2(Stdlib_List[4],_Lt_,0),
         _Lv_=caml_call1(HTML[10],_Lu_),
         _Lw_=caml_call2(HTML[23],0,_Lv_),
         _Lx_=caml_call2(Stdlib_List[4],_Lw_,0),
         _Ly_=caml_call1(HTML[3],cst_S),
         _Lz_=caml_call2(Stdlib_List[4],_Ly_,_Lx_);
        return caml_call1(HTML[10],_Lz_)}
      var
       _Li_=
        [0,
         _Lf_,
         function(self_7,param,_Lo_){return caml_call1(HTML[3],cst_O)},
         _Le_,
         _Lh_];
      caml_call2(CamlinternalOO[11],_Lb_,_Li_);
      return function(_Lm_,_Ll_,_Lk_,_Lj_)
       {var _Ln_=caml_call2(CamlinternalOO[24],_Ll_,_Lb_);
        _Ln_[1 + _Lc_] = _Lk_;
        caml_call1(_Lg_,_Ln_);
        return caml_call3(CamlinternalOO[26],_Ll_,_Ln_,_Lb_)}}
    var html_t_t$2=caml_call2(CamlinternalOO[19],_mm_,_mB_);
    function _mC_(fa,inh0,subj)
     {var _La_=caml_call2(html_t_t$2[1],0,fa);
      return caml_call4(GT[2],gcata_nat,_La_,inh0,subj)}
    function _mD_(_KX_)
     {var
       _KY_=caml_call2(CamlinternalOO[3],_KX_,cst$99),
       _KZ_=caml_call2(CamlinternalOO[8],_KX_,shared$4),
       _K0_=_KZ_[1],
       _K1_=_KZ_[2],
       _K2_=caml_call6(CamlinternalOO[18],_KX_,0,shared$4,0,t_t$3,1)[1];
      function _K3_(self_8,param,_K$_,x_025)
       {return [0,caml_call2(self_8[1 + _KY_],0,x_025)]}
      var _K4_=[0,_K1_,function(self_8,param,_K__){return 0},_K0_,_K3_];
      caml_call2(CamlinternalOO[11],_KX_,_K4_);
      return function(_K8_,_K7_,_K6_,_K5_)
       {var _K9_=caml_call2(CamlinternalOO[24],_K7_,_KX_);
        _K9_[1 + _KY_] = _K6_;
        caml_call1(_K2_,_K9_);
        return caml_call3(CamlinternalOO[26],_K7_,_K9_,_KX_)}}
    var gmap_t_t$3=caml_call2(CamlinternalOO[19],_mm_,_mD_);
    function _mE_(fa,inh0,subj)
     {var _KW_=caml_call2(gmap_t_t$3[1],0,fa);
      return caml_call4(GT[2],gcata_nat,_KW_,inh0,subj)}
    function _mF_(_KG_)
     {var
       _KH_=caml_call2(CamlinternalOO[3],_KG_,cst$100),
       _KI_=caml_call2(CamlinternalOO[8],_KG_,shared$4),
       _KJ_=_KI_[1],
       _KK_=_KI_[2],
       _KL_=caml_call6(CamlinternalOO[18],_KG_,0,shared$4,0,t_t$3,1)[1];
      function _KM_(self_9,param,_KU_,x_026)
       {var _KV_=caml_call2(self_9[1 + _KH_],0,x_026);
        return caml_call2(Stdlib_Printf[4],_mG_,_KV_)}
      var _KN_=[0,_KK_,function(self_9,param,_KT_){return cst_O$0},_KJ_,_KM_];
      caml_call2(CamlinternalOO[11],_KG_,_KN_);
      return function(_KR_,_KQ_,_KP_,_KO_)
       {var _KS_=caml_call2(CamlinternalOO[24],_KQ_,_KG_);
        _KS_[1 + _KH_] = _KP_;
        caml_call1(_KL_,_KS_);
        return caml_call3(CamlinternalOO[26],_KQ_,_KS_,_KG_)}}
    var show_t_t$3=caml_call2(CamlinternalOO[19],_mm_,_mF_);
    function _mH_(fa,inh0,subj)
     {var _KF_=caml_call2(show_t_t$3[1],0,fa);
      return caml_call4(GT[2],gcata_nat,_KF_,inh0,subj)}
    function _mI_(eta){return caml_call2(GT[2],gcata_nat,eta)}
    var
     _mJ_=caml_call1(CamlinternalOO[16],_mn_),
     _mK_=caml_call2(CamlinternalOO[8],_mJ_,_mp_),
     _mL_=_mK_[1],
     _mM_=_mK_[2],
     _mN_=_mK_[3],
     _mO_=_mK_[4],
     _mP_=_mK_[5],
     _mQ_=_mK_[6],
     _mR_=_mK_[7],
     _mS_=_mK_[8];
    function _mT_(self_10,fa,subj){return _mH_(caml_call1(GT[4],fa),0,subj)}
    function _mU_(self_10,fa,subj){return _mE_(caml_call1(GT[4],fa),0,subj)}
    function _mV_(self_10,fa,subj){return _mC_(caml_call1(GT[4],fa),0,subj)}
    function _mW_(self_10){return eq_t$3}
    function _mX_(self_10){return compare_t$3}
    function _mY_(self_10){return foldl_t$3}
    function _mZ_(self_10){return foldr_t$3}
    var
     _m0_=
      [0,
       _mQ_,
       function(self_10){return fmt_t$3},
       _mO_,
       _mZ_,
       _mP_,
       _mY_,
       _mS_,
       _mX_,
       _mR_,
       _mW_,
       _mM_,
       _mV_,
       _mN_,
       _mU_,
       _mL_,
       _mT_];
    caml_call2(CamlinternalOO[11],_mJ_,_m0_);
    caml_call1(CamlinternalOO[17],_mJ_);
    var t$2=[0,gcata_nat,caml_call2(CamlinternalOO[24],0,_mJ_),_mI_];
    function html_t$2(fa,subj){return _mC_(caml_call1(GT[4],fa),0,subj)}
    function gmap_t$3(fa,subj){return _mE_(caml_call1(GT[4],fa),0,subj)}
    function show_t$3(fa,subj){return _mH_(caml_call1(GT[4],fa),0,subj)}
    var ground_t$3=[],_m1_=0,_m2_=0;
    caml_update_dummy
     (ground_t$3,
      [0,
       0,
       function(_KA_)
        {caml_call2(CamlinternalOO[8],_KA_,shared$4);
         var _KB_=caml_call6(CamlinternalOO[18],_KA_,0,shared$4,0,t_t$3,1)[1];
         return function(_KD_,_KC_)
          {var _KE_=caml_call2(CamlinternalOO[24],_KC_,_KA_);
           caml_call1(_KB_,_KE_);
           return caml_call3(CamlinternalOO[26],_KC_,_KE_,_KA_)}},
       _m2_,
       _m1_]);
    function _m3_(_Kt_)
     {caml_call2(CamlinternalOO[8],_Kt_,shared$4);
      var
       _Ku_=caml_call6(CamlinternalOO[18],_Kt_,0,shared$4,0,ground_t$3,1)[1],
       _Kv_=caml_call6(CamlinternalOO[18],_Kt_,0,0,_mm_,fmt_t_t$3,1)[1];
      return function(_Ky_,_Kx_,_Kw_)
       {var _Kz_=caml_call2(CamlinternalOO[24],_Kx_,_Kt_);
        caml_call1(_Ku_,_Kz_);
        caml_call3(_Kv_,_Kz_,_Kw_,_Kw_);
        return caml_call3(CamlinternalOO[26],_Kx_,_Kz_,_Kt_)}}
    var fmt_ground_t$3=caml_call2(CamlinternalOO[19],_mm_,_m3_);
    function fmt_ground$3(inh_027,subj_028)
     {return caml_call4(GT[224],t$2,fmt_ground$3,inh_027,subj_028)}
    function _m4_(_Km_)
     {caml_call2(CamlinternalOO[8],_Km_,shared$4);
      var
       _Kn_=caml_call6(CamlinternalOO[18],_Km_,0,shared$4,0,ground_t$3,1)[1],
       _Ko_=caml_call6(CamlinternalOO[18],_Km_,0,0,_mm_,foldr_t_t$3,1)[1];
      return function(_Kr_,_Kq_,_Kp_)
       {var _Ks_=caml_call2(CamlinternalOO[24],_Kq_,_Km_);
        caml_call1(_Kn_,_Ks_);
        caml_call3(_Ko_,_Ks_,_Kp_,_Kp_);
        return caml_call3(CamlinternalOO[26],_Kq_,_Ks_,_Km_)}}
    var foldr_ground_t$3=caml_call2(CamlinternalOO[19],_mm_,_m4_);
    function foldr_ground$3(inh_029,subj_030)
     {return caml_call4(GT[226],t$2,foldr_ground$3,inh_029,subj_030)}
    function _m5_(_Kf_)
     {caml_call2(CamlinternalOO[8],_Kf_,shared$4);
      var
       _Kg_=caml_call6(CamlinternalOO[18],_Kf_,0,shared$4,0,ground_t$3,1)[1],
       _Kh_=caml_call6(CamlinternalOO[18],_Kf_,0,0,_mm_,foldl_t_t$3,1)[1];
      return function(_Kk_,_Kj_,_Ki_)
       {var _Kl_=caml_call2(CamlinternalOO[24],_Kj_,_Kf_);
        caml_call1(_Kg_,_Kl_);
        caml_call3(_Kh_,_Kl_,_Ki_,_Ki_);
        return caml_call3(CamlinternalOO[26],_Kj_,_Kl_,_Kf_)}}
    var foldl_ground_t$3=caml_call2(CamlinternalOO[19],_mm_,_m5_);
    function foldl_ground$3(inh_031,subj_032)
     {return caml_call4(GT[225],t$2,foldl_ground$3,inh_031,subj_032)}
    function _m6_(_J__)
     {caml_call2(CamlinternalOO[8],_J__,shared$4);
      var
       _J$_=caml_call6(CamlinternalOO[18],_J__,0,shared$4,0,ground_t$3,1)[1],
       _Ka_=caml_call6(CamlinternalOO[18],_J__,0,0,_mm_,compare_t_t$3,1)[1];
      return function(_Kd_,_Kc_,_Kb_)
       {var _Ke_=caml_call2(CamlinternalOO[24],_Kc_,_J__);
        caml_call1(_J$_,_Ke_);
        caml_call3(_Ka_,_Ke_,_Kb_,_Kb_);
        return caml_call3(CamlinternalOO[26],_Kc_,_Ke_,_J__)}}
    var compare_ground_t$3=caml_call2(CamlinternalOO[19],_mm_,_m6_);
    function compare_ground$3(inh,subj)
     {return caml_call4(GT[228],t$2,compare_ground$3,inh,subj)}
    function _m7_(_J3_)
     {caml_call2(CamlinternalOO[8],_J3_,shared$4);
      var
       _J4_=caml_call6(CamlinternalOO[18],_J3_,0,shared$4,0,ground_t$3,1)[1],
       _J5_=caml_call6(CamlinternalOO[18],_J3_,0,0,_mm_,eq_t_t$3,1)[1];
      return function(_J8_,_J7_,_J6_)
       {var _J9_=caml_call2(CamlinternalOO[24],_J7_,_J3_);
        caml_call1(_J4_,_J9_);
        caml_call3(_J5_,_J9_,_J6_,_J6_);
        return caml_call3(CamlinternalOO[26],_J7_,_J9_,_J3_)}}
    var eq_ground_t$3=caml_call2(CamlinternalOO[19],_mm_,_m7_);
    function eq_ground$3(inh,subj)
     {return caml_call4(GT[227],t$2,eq_ground$3,inh,subj)}
    function _m8_(_JW_)
     {caml_call2(CamlinternalOO[8],_JW_,shared$4);
      var
       _JX_=caml_call6(CamlinternalOO[18],_JW_,0,shared$4,0,ground_t$3,1)[1],
       _JY_=caml_call6(CamlinternalOO[18],_JW_,0,0,_mm_,html_t_t$2,1)[1];
      return function(_J1_,_J0_,_JZ_)
       {var _J2_=caml_call2(CamlinternalOO[24],_J0_,_JW_);
        caml_call1(_JX_,_J2_);
        caml_call3(_JY_,_J2_,_JZ_,_JZ_);
        return caml_call3(CamlinternalOO[26],_J0_,_J2_,_JW_)}}
    var html_ground_t$2=caml_call2(CamlinternalOO[19],_mm_,_m8_);
    function _m9_(param,subj)
     {var _JT_=0;
      function _JU_(_JV_){return _m9_(_JT_,_JV_)}
      return caml_call3(GT[222],t$2,_JU_,subj)}
    function _m__(_JM_)
     {caml_call2(CamlinternalOO[8],_JM_,shared$4);
      var
       _JN_=caml_call6(CamlinternalOO[18],_JM_,0,shared$4,0,ground_t$3,1)[1],
       _JO_=caml_call6(CamlinternalOO[18],_JM_,0,0,_mm_,gmap_t_t$3,1)[1];
      return function(_JR_,_JQ_,_JP_)
       {var _JS_=caml_call2(CamlinternalOO[24],_JQ_,_JM_);
        caml_call1(_JN_,_JS_);
        caml_call3(_JO_,_JS_,_JP_,_JP_);
        return caml_call3(CamlinternalOO[26],_JQ_,_JS_,_JM_)}}
    var gmap_ground_t$3=caml_call2(CamlinternalOO[19],_mm_,_m__);
    function _m$_(param,subj)
     {var _JJ_=0;
      function _JK_(_JL_){return _m$_(_JJ_,_JL_)}
      return caml_call3(GT[223],t$2,_JK_,subj)}
    function _na_(_JC_)
     {caml_call2(CamlinternalOO[8],_JC_,shared$4);
      var
       _JD_=caml_call6(CamlinternalOO[18],_JC_,0,shared$4,0,ground_t$3,1)[1],
       _JE_=caml_call6(CamlinternalOO[18],_JC_,0,0,_mm_,show_t_t$3,1)[1];
      return function(_JH_,_JG_,_JF_)
       {var _JI_=caml_call2(CamlinternalOO[24],_JG_,_JC_);
        caml_call1(_JD_,_JI_);
        caml_call3(_JE_,_JI_,_JF_,_JF_);
        return caml_call3(CamlinternalOO[26],_JG_,_JI_,_JC_)}}
    var show_ground_t$3=caml_call2(CamlinternalOO[19],_mm_,_na_);
    function _nb_(param,subj)
     {var _Jz_=0;
      function _JA_(_JB_){return _nb_(_Jz_,_JB_)}
      return caml_call3(GT[221],t$2,_JA_,subj)}
    function _nc_(eta){return caml_call2(GT[2],gcata_nat,eta)}
    var
     _nd_=caml_call1(CamlinternalOO[16],_mn_),
     _ne_=caml_call2(CamlinternalOO[8],_nd_,_mp_),
     _nf_=_ne_[1],
     _ng_=_ne_[2],
     _nh_=_ne_[3],
     _ni_=_ne_[4],
     _nj_=_ne_[5],
     _nk_=_ne_[6],
     _nl_=_ne_[7],
     _nm_=_ne_[8];
    function _nn_(self_20,subj){return _nb_(0,subj)}
    function _no_(self_20,subj){return _m$_(0,subj)}
    function _np_(self_20,subj){return _m9_(0,subj)}
    function _nq_(self_20){return eq_ground$3}
    function _nr_(self_20){return compare_ground$3}
    function _ns_(self_20){return foldl_ground$3}
    function _nt_(self_20){return foldr_ground$3}
    var
     _nu_=
      [0,
       _nk_,
       function(self_20){return fmt_ground$3},
       _ni_,
       _nt_,
       _nj_,
       _ns_,
       _nm_,
       _nr_,
       _nl_,
       _nq_,
       _ng_,
       _np_,
       _nh_,
       _no_,
       _nf_,
       _nn_];
    caml_call2(CamlinternalOO[11],_nd_,_nu_);
    caml_call1(CamlinternalOO[17],_nd_);
    var ground$3=[0,gcata_nat,caml_call2(CamlinternalOO[24],0,_nd_),_nc_];
    function html_ground$2(subj){return _m9_(0,subj)}
    function gmap_ground$3(subj){return _m$_(0,subj)}
    function show_ground$3(subj){return _nb_(0,subj)}
    var logic_t$6=[],_nv_=0,_nw_=0;
    caml_update_dummy
     (logic_t$6,
      [0,
       0,
       function(_Ju_)
        {caml_call2(CamlinternalOO[8],_Ju_,_mq_);
         var _Jv_=caml_call6(CamlinternalOO[18],_Ju_,0,_mq_,0,logic_t,1)[1];
         return function(_Jx_,_Jw_)
          {var _Jy_=caml_call2(CamlinternalOO[24],_Jw_,_Ju_);
           caml_call1(_Jv_,_Jy_);
           return caml_call3(CamlinternalOO[26],_Jw_,_Jy_,_Ju_)}},
       _nw_,
       _nv_]);
    function _nx_(_Jn_)
     {caml_call2(CamlinternalOO[8],_Jn_,_mq_);
      var
       _Jo_=caml_call6(CamlinternalOO[18],_Jn_,0,_mq_,0,logic_t$6,1)[1],
       _Jp_=caml_call6(CamlinternalOO[18],_Jn_,0,0,_mo_,fmt_logic_t,1)[1];
      return function(_Js_,_Jr_,_Jq_)
       {var _Jt_=caml_call2(CamlinternalOO[24],_Jr_,_Jn_);
        caml_call1(_Jo_,_Jt_);
        caml_call3
         (_Jp_,
          _Jt_,
          function(inh_037,subj_038)
           {return caml_call4(GT[224],t$2,_Jq_,inh_037,subj_038)},
          _Jq_);
        return caml_call3(CamlinternalOO[26],_Jr_,_Jt_,_Jn_)}}
    var fmt_logic_t$6=caml_call2(CamlinternalOO[19],_mo_,_nx_);
    function fmt_logic$6(inh_033,subj_034)
     {function _Jm_(inh_035,subj_036)
       {return caml_call4(GT[224],t$2,fmt_logic$6,inh_035,subj_036)}
      return caml_call4(GT[224],logic,_Jm_,inh_033,subj_034)}
    function _ny_(_Jf_)
     {caml_call2(CamlinternalOO[8],_Jf_,_mq_);
      var
       _Jg_=caml_call6(CamlinternalOO[18],_Jf_,0,_mq_,0,logic_t$6,1)[1],
       _Jh_=caml_call6(CamlinternalOO[18],_Jf_,0,0,_mo_,foldr_logic_t,1)[1];
      return function(_Jk_,_Jj_,_Ji_)
       {var _Jl_=caml_call2(CamlinternalOO[24],_Jj_,_Jf_);
        caml_call1(_Jg_,_Jl_);
        caml_call3
         (_Jh_,
          _Jl_,
          function(inh_043,subj_044)
           {return caml_call4(GT[226],t$2,_Ji_,inh_043,subj_044)},
          _Ji_);
        return caml_call3(CamlinternalOO[26],_Jj_,_Jl_,_Jf_)}}
    var foldr_logic_t$6=caml_call2(CamlinternalOO[19],_mo_,_ny_);
    function foldr_logic$6(inh_039,subj_040)
     {function _Je_(inh_041,subj_042)
       {return caml_call4(GT[226],t$2,foldr_logic$6,inh_041,subj_042)}
      return caml_call4(GT[226],logic,_Je_,inh_039,subj_040)}
    function _nz_(_I9_)
     {caml_call2(CamlinternalOO[8],_I9_,_mq_);
      var
       _I__=caml_call6(CamlinternalOO[18],_I9_,0,_mq_,0,logic_t$6,1)[1],
       _I$_=caml_call6(CamlinternalOO[18],_I9_,0,0,_mo_,foldl_logic_t,1)[1];
      return function(_Jc_,_Jb_,_Ja_)
       {var _Jd_=caml_call2(CamlinternalOO[24],_Jb_,_I9_);
        caml_call1(_I__,_Jd_);
        caml_call3
         (_I$_,
          _Jd_,
          function(inh_049,subj_050)
           {return caml_call4(GT[225],t$2,_Ja_,inh_049,subj_050)},
          _Ja_);
        return caml_call3(CamlinternalOO[26],_Jb_,_Jd_,_I9_)}}
    var foldl_logic_t$6=caml_call2(CamlinternalOO[19],_mo_,_nz_);
    function foldl_logic$6(inh_045,subj_046)
     {function _I8_(inh_047,subj_048)
       {return caml_call4(GT[225],t$2,foldl_logic$6,inh_047,subj_048)}
      return caml_call4(GT[225],logic,_I8_,inh_045,subj_046)}
    function _nA_(_I1_)
     {caml_call2(CamlinternalOO[8],_I1_,_mq_);
      var
       _I2_=caml_call6(CamlinternalOO[18],_I1_,0,_mq_,0,logic_t$6,1)[1],
       _I3_=caml_call6(CamlinternalOO[18],_I1_,0,0,_mo_,compare_logic_t,1)[1];
      return function(_I6_,_I5_,_I4_)
       {var _I7_=caml_call2(CamlinternalOO[24],_I5_,_I1_);
        caml_call1(_I2_,_I7_);
        caml_call3
         (_I3_,
          _I7_,
          function(inh,subj){return caml_call4(GT[228],t$2,_I4_,inh,subj)},
          _I4_);
        return caml_call3(CamlinternalOO[26],_I5_,_I7_,_I1_)}}
    var compare_logic_t$6=caml_call2(CamlinternalOO[19],_mo_,_nA_);
    function compare_logic$6(inh,subj)
     {function _I0_(inh,subj)
       {return caml_call4(GT[228],t$2,compare_logic$6,inh,subj)}
      return caml_call4(GT[228],logic,_I0_,inh,subj)}
    function _nB_(_IT_)
     {caml_call2(CamlinternalOO[8],_IT_,_mq_);
      var
       _IU_=caml_call6(CamlinternalOO[18],_IT_,0,_mq_,0,logic_t$6,1)[1],
       _IV_=caml_call6(CamlinternalOO[18],_IT_,0,0,_mo_,eq_logic_t,1)[1];
      return function(_IY_,_IX_,_IW_)
       {var _IZ_=caml_call2(CamlinternalOO[24],_IX_,_IT_);
        caml_call1(_IU_,_IZ_);
        caml_call3
         (_IV_,
          _IZ_,
          function(inh,subj){return caml_call4(GT[227],t$2,_IW_,inh,subj)},
          _IW_);
        return caml_call3(CamlinternalOO[26],_IX_,_IZ_,_IT_)}}
    var eq_logic_t$6=caml_call2(CamlinternalOO[19],_mo_,_nB_);
    function eq_logic$6(inh,subj)
     {function _IS_(inh,subj)
       {return caml_call4(GT[227],t$2,eq_logic$6,inh,subj)}
      return caml_call4(GT[227],logic,_IS_,inh,subj)}
    function _nC_(_IK_)
     {caml_call2(CamlinternalOO[8],_IK_,_mq_);
      var
       _IL_=caml_call6(CamlinternalOO[18],_IK_,0,_mq_,0,logic_t$6,1)[1],
       _IM_=caml_call6(CamlinternalOO[18],_IK_,0,0,_mo_,html_logic_t,1)[1];
      return function(_IP_,_IO_,_IN_)
       {var _IQ_=caml_call2(CamlinternalOO[24],_IO_,_IK_);
        caml_call1(_IL_,_IQ_);
        caml_call3
         (_IM_,
          _IQ_,
          function(param,subj)
           {var _IR_=caml_call1(_IN_,0);
            return caml_call3(GT[222],t$2,_IR_,subj)},
          _IN_);
        return caml_call3(CamlinternalOO[26],_IO_,_IQ_,_IK_)}}
    var html_logic_t$5=caml_call2(CamlinternalOO[19],_mo_,_nC_);
    function _nD_(param,subj)
     {function _IG_(subj)
       {var _IH_=0;
        function _II_(_IJ_){return _nD_(_IH_,_IJ_)}
        return caml_call3(GT[222],t$2,_II_,subj)}
      return caml_call3(GT[222],logic,_IG_,subj)}
    function _nE_(_Iy_)
     {caml_call2(CamlinternalOO[8],_Iy_,_mq_);
      var
       _Iz_=caml_call6(CamlinternalOO[18],_Iy_,0,_mq_,0,logic_t$6,1)[1],
       _IA_=caml_call6(CamlinternalOO[18],_Iy_,0,0,_mo_,gmap_logic_t,1)[1];
      return function(_ID_,_IC_,_IB_)
       {var _IE_=caml_call2(CamlinternalOO[24],_IC_,_Iy_);
        caml_call1(_Iz_,_IE_);
        caml_call3
         (_IA_,
          _IE_,
          function(param,subj)
           {var _IF_=caml_call1(_IB_,0);
            return caml_call3(GT[223],t$2,_IF_,subj)},
          _IB_);
        return caml_call3(CamlinternalOO[26],_IC_,_IE_,_Iy_)}}
    var gmap_logic_t$6=caml_call2(CamlinternalOO[19],_mo_,_nE_);
    function _nF_(param,subj)
     {function _Iu_(subj)
       {var _Iv_=0;
        function _Iw_(_Ix_){return _nF_(_Iv_,_Ix_)}
        return caml_call3(GT[223],t$2,_Iw_,subj)}
      return caml_call3(GT[223],logic,_Iu_,subj)}
    function _nG_(_Im_)
     {caml_call2(CamlinternalOO[8],_Im_,_mq_);
      var
       _In_=caml_call6(CamlinternalOO[18],_Im_,0,_mq_,0,logic_t$6,1)[1],
       _Io_=caml_call6(CamlinternalOO[18],_Im_,0,0,_mo_,show_logic_t,1)[1];
      return function(_Ir_,_Iq_,_Ip_)
       {var _Is_=caml_call2(CamlinternalOO[24],_Iq_,_Im_);
        caml_call1(_In_,_Is_);
        caml_call3
         (_Io_,
          _Is_,
          function(param,subj)
           {var _It_=caml_call1(_Ip_,0);
            return caml_call3(GT[221],t$2,_It_,subj)},
          _Ip_);
        return caml_call3(CamlinternalOO[26],_Iq_,_Is_,_Im_)}}
    var show_logic_t$6=caml_call2(CamlinternalOO[19],_mo_,_nG_);
    function _nH_(param,subj)
     {function _Ii_(subj)
       {var _Ij_=0;
        function _Ik_(_Il_){return _nH_(_Ij_,_Il_)}
        return caml_call3(GT[221],t$2,_Ik_,subj)}
      return caml_call3(GT[221],logic,_Ii_,subj)}
    function _nI_(eta){return caml_call2(GT[2],gcata_logic,eta)}
    var
     _nJ_=caml_call1(CamlinternalOO[16],_mn_),
     _nK_=caml_call2(CamlinternalOO[8],_nJ_,_mp_),
     _nL_=_nK_[1],
     _nM_=_nK_[2],
     _nN_=_nK_[3],
     _nO_=_nK_[4],
     _nP_=_nK_[5],
     _nQ_=_nK_[6],
     _nR_=_nK_[7],
     _nS_=_nK_[8];
    function _nT_(self_30,subj){return _nH_(0,subj)}
    function _nU_(self_30,subj){return _nF_(0,subj)}
    function _nV_(self_30,subj){return _nD_(0,subj)}
    function _nW_(self_30){return eq_logic$6}
    function _nX_(self_30){return compare_logic$6}
    function _nY_(self_30){return foldl_logic$6}
    function _nZ_(self_30){return foldr_logic$6}
    var
     _n0_=
      [0,
       _nQ_,
       function(self_30){return fmt_logic$6},
       _nO_,
       _nZ_,
       _nP_,
       _nY_,
       _nS_,
       _nX_,
       _nR_,
       _nW_,
       _nM_,
       _nV_,
       _nN_,
       _nU_,
       _nL_,
       _nT_];
    caml_call2(CamlinternalOO[11],_nJ_,_n0_);
    caml_call1(CamlinternalOO[17],_nJ_);
    var _n1_=[0,gcata_logic,caml_call2(CamlinternalOO[24],0,_nJ_),_nI_];
    function html_logic$3(subj){return _nD_(0,subj)}
    function gmap_logic$4(subj){return _nF_(0,subj)}
    function show_logic$4(subj){return _nH_(0,subj)}
    var nat_t=[],_n2_=0,_n3_=0;
    caml_update_dummy
     (nat_t,
      [0,
       0,
       function(_Id_)
        {caml_call2(CamlinternalOO[8],_Id_,shared$4);
         var
          _Ie_=
           caml_call6(CamlinternalOO[18],_Id_,0,shared$4,0,ground_t$3,1)[1];
         return function(_Ig_,_If_)
          {var _Ih_=caml_call2(CamlinternalOO[24],_If_,_Id_);
           caml_call1(_Ie_,_Ih_);
           return caml_call3(CamlinternalOO[26],_If_,_Ih_,_Id_)}},
       _n3_,
       _n2_]);
    function _n4_(_H8_)
     {caml_call2(CamlinternalOO[8],_H8_,shared$4);
      var
       _H9_=caml_call6(CamlinternalOO[18],_H8_,0,shared$4,0,nat_t,1)[1],
       _H__=caml_call6(CamlinternalOO[18],_H8_,0,0,_mm_,fmt_ground_t$3,1)[1];
      return function(_Ib_,_Ia_,_H$_)
       {var _Ic_=caml_call2(CamlinternalOO[24],_Ia_,_H8_);
        caml_call1(_H9_,_Ic_);
        caml_call2(_H__,_Ic_,_H$_);
        return caml_call3(CamlinternalOO[26],_Ia_,_Ic_,_H8_)}}
    var fmt_nat_t=caml_call2(CamlinternalOO[19],_mm_,_n4_);
    function fmt_nat(inh_051,subj_052)
     {return caml_call3(GT[224],ground$3,inh_051,subj_052)}
    function _n5_(_H1_)
     {caml_call2(CamlinternalOO[8],_H1_,shared$4);
      var
       _H2_=caml_call6(CamlinternalOO[18],_H1_,0,shared$4,0,nat_t,1)[1],
       _H3_=caml_call6(CamlinternalOO[18],_H1_,0,0,_mm_,foldr_ground_t$3,1)[1];
      return function(_H6_,_H5_,_H4_)
       {var _H7_=caml_call2(CamlinternalOO[24],_H5_,_H1_);
        caml_call1(_H2_,_H7_);
        caml_call2(_H3_,_H7_,_H4_);
        return caml_call3(CamlinternalOO[26],_H5_,_H7_,_H1_)}}
    var foldr_nat_t=caml_call2(CamlinternalOO[19],_mm_,_n5_);
    function foldr_nat(inh_053,subj_054)
     {return caml_call3(GT[226],ground$3,inh_053,subj_054)}
    function _n6_(_HU_)
     {caml_call2(CamlinternalOO[8],_HU_,shared$4);
      var
       _HV_=caml_call6(CamlinternalOO[18],_HU_,0,shared$4,0,nat_t,1)[1],
       _HW_=caml_call6(CamlinternalOO[18],_HU_,0,0,_mm_,foldl_ground_t$3,1)[1];
      return function(_HZ_,_HY_,_HX_)
       {var _H0_=caml_call2(CamlinternalOO[24],_HY_,_HU_);
        caml_call1(_HV_,_H0_);
        caml_call2(_HW_,_H0_,_HX_);
        return caml_call3(CamlinternalOO[26],_HY_,_H0_,_HU_)}}
    var foldl_nat_t=caml_call2(CamlinternalOO[19],_mm_,_n6_);
    function foldl_nat(inh_055,subj_056)
     {return caml_call3(GT[225],ground$3,inh_055,subj_056)}
    function _n7_(_HN_)
     {caml_call2(CamlinternalOO[8],_HN_,shared$4);
      var
       _HO_=caml_call6(CamlinternalOO[18],_HN_,0,shared$4,0,nat_t,1)[1],
       _HP_=
        caml_call6(CamlinternalOO[18],_HN_,0,0,_mm_,compare_ground_t$3,1)[1];
      return function(_HS_,_HR_,_HQ_)
       {var _HT_=caml_call2(CamlinternalOO[24],_HR_,_HN_);
        caml_call1(_HO_,_HT_);
        caml_call2(_HP_,_HT_,_HQ_);
        return caml_call3(CamlinternalOO[26],_HR_,_HT_,_HN_)}}
    var compare_nat_t=caml_call2(CamlinternalOO[19],_mm_,_n7_);
    function compare_nat(inh,subj)
     {return caml_call3(GT[228],ground$3,inh,subj)}
    function _n8_(_HG_)
     {caml_call2(CamlinternalOO[8],_HG_,shared$4);
      var
       _HH_=caml_call6(CamlinternalOO[18],_HG_,0,shared$4,0,nat_t,1)[1],
       _HI_=caml_call6(CamlinternalOO[18],_HG_,0,0,_mm_,eq_ground_t$3,1)[1];
      return function(_HL_,_HK_,_HJ_)
       {var _HM_=caml_call2(CamlinternalOO[24],_HK_,_HG_);
        caml_call1(_HH_,_HM_);
        caml_call2(_HI_,_HM_,_HJ_);
        return caml_call3(CamlinternalOO[26],_HK_,_HM_,_HG_)}}
    var eq_nat_t=caml_call2(CamlinternalOO[19],_mm_,_n8_);
    function eq_nat(inh,subj){return caml_call3(GT[227],ground$3,inh,subj)}
    function _n9_(_Hz_)
     {caml_call2(CamlinternalOO[8],_Hz_,shared$4);
      var
       _HA_=caml_call6(CamlinternalOO[18],_Hz_,0,shared$4,0,nat_t,1)[1],
       _HB_=caml_call6(CamlinternalOO[18],_Hz_,0,0,_mm_,html_ground_t$2,1)[1];
      return function(_HE_,_HD_,_HC_)
       {var _HF_=caml_call2(CamlinternalOO[24],_HD_,_Hz_);
        caml_call1(_HA_,_HF_);
        caml_call2(_HB_,_HF_,_HC_);
        return caml_call3(CamlinternalOO[26],_HD_,_HF_,_Hz_)}}
    var html_nat_t=caml_call2(CamlinternalOO[19],_mm_,_n9_);
    function _n__(param,subj){return caml_call2(GT[222],ground$3,subj)}
    function _n$_(_Hs_)
     {caml_call2(CamlinternalOO[8],_Hs_,shared$4);
      var
       _Ht_=caml_call6(CamlinternalOO[18],_Hs_,0,shared$4,0,nat_t,1)[1],
       _Hu_=caml_call6(CamlinternalOO[18],_Hs_,0,0,_mm_,gmap_ground_t$3,1)[1];
      return function(_Hx_,_Hw_,_Hv_)
       {var _Hy_=caml_call2(CamlinternalOO[24],_Hw_,_Hs_);
        caml_call1(_Ht_,_Hy_);
        caml_call2(_Hu_,_Hy_,_Hv_);
        return caml_call3(CamlinternalOO[26],_Hw_,_Hy_,_Hs_)}}
    var gmap_nat_t=caml_call2(CamlinternalOO[19],_mm_,_n$_);
    function _oa_(param,subj){return caml_call2(GT[223],ground$3,subj)}
    function _ob_(_Hl_)
     {caml_call2(CamlinternalOO[8],_Hl_,shared$4);
      var
       _Hm_=caml_call6(CamlinternalOO[18],_Hl_,0,shared$4,0,nat_t,1)[1],
       _Hn_=caml_call6(CamlinternalOO[18],_Hl_,0,0,_mm_,show_ground_t$3,1)[1];
      return function(_Hq_,_Hp_,_Ho_)
       {var _Hr_=caml_call2(CamlinternalOO[24],_Hp_,_Hl_);
        caml_call1(_Hm_,_Hr_);
        caml_call2(_Hn_,_Hr_,_Ho_);
        return caml_call3(CamlinternalOO[26],_Hp_,_Hr_,_Hl_)}}
    var show_nat_t=caml_call2(CamlinternalOO[19],_mm_,_ob_);
    function _oc_(param,subj){return caml_call2(GT[221],ground$3,subj)}
    var
     _od_=caml_call1(CamlinternalOO[16],_mn_),
     _oe_=caml_call2(CamlinternalOO[8],_od_,_mp_),
     _of_=_oe_[1],
     _og_=_oe_[2],
     _oh_=_oe_[3],
     _oi_=_oe_[4],
     _oj_=_oe_[5],
     _ok_=_oe_[6],
     _ol_=_oe_[7],
     _om_=_oe_[8];
    function _on_(self_40,subj){return _oc_(0,subj)}
    function _oo_(self_40,subj){return _oa_(0,subj)}
    function _op_(self_40,subj){return _n__(0,subj)}
    function _oq_(self_40){return eq_nat}
    function _or_(self_40){return compare_nat}
    function _os_(self_40){return foldl_nat}
    function _ot_(self_40){return foldr_nat}
    var
     _ou_=
      [0,
       _ok_,
       function(self_40){return fmt_nat},
       _oi_,
       _ot_,
       _oj_,
       _os_,
       _om_,
       _or_,
       _ol_,
       _oq_,
       _og_,
       _op_,
       _oh_,
       _oo_,
       _of_,
       _on_];
    caml_call2(CamlinternalOO[11],_od_,_ou_);
    caml_call1(CamlinternalOO[17],_od_);
    caml_call2(CamlinternalOO[24],0,_od_);
    function html_nat(subj){return _n__(0,subj)}
    function gmap_nat(subj){return _oa_(0,subj)}
    function show_nat(subj){return _oc_(0,subj)}
    var nat_logic_t=[],_ov_=0,_ow_=0;
    caml_update_dummy
     (nat_logic_t,
      [0,
       0,
       function(_Hg_)
        {caml_call2(CamlinternalOO[8],_Hg_,_mq_);
         var _Hh_=caml_call6(CamlinternalOO[18],_Hg_,0,_mq_,0,logic_t$6,1)[1];
         return function(_Hj_,_Hi_)
          {var _Hk_=caml_call2(CamlinternalOO[24],_Hi_,_Hg_);
           caml_call1(_Hh_,_Hk_);
           return caml_call3(CamlinternalOO[26],_Hi_,_Hk_,_Hg_)}},
       _ow_,
       _ov_]);
    function _ox_(_G$_)
     {caml_call2(CamlinternalOO[8],_G$_,_mq_);
      var
       _Ha_=caml_call6(CamlinternalOO[18],_G$_,0,_mq_,0,nat_logic_t,1)[1],
       _Hb_=caml_call6(CamlinternalOO[18],_G$_,0,0,_mo_,fmt_logic_t$6,1)[1];
      return function(_He_,_Hd_,_Hc_)
       {var _Hf_=caml_call2(CamlinternalOO[24],_Hd_,_G$_);
        caml_call1(_Ha_,_Hf_);
        caml_call2(_Hb_,_Hf_,_Hc_);
        return caml_call3(CamlinternalOO[26],_Hd_,_Hf_,_G$_)}}
    var fmt_nat_logic_t=caml_call2(CamlinternalOO[19],_mo_,_ox_);
    function fmt_nat_logic(inh_057,subj_058)
     {return caml_call3(GT[224],_n1_,inh_057,subj_058)}
    function _oy_(_G4_)
     {caml_call2(CamlinternalOO[8],_G4_,_mq_);
      var
       _G5_=caml_call6(CamlinternalOO[18],_G4_,0,_mq_,0,nat_logic_t,1)[1],
       _G6_=caml_call6(CamlinternalOO[18],_G4_,0,0,_mo_,foldr_logic_t$6,1)[1];
      return function(_G9_,_G8_,_G7_)
       {var _G__=caml_call2(CamlinternalOO[24],_G8_,_G4_);
        caml_call1(_G5_,_G__);
        caml_call2(_G6_,_G__,_G7_);
        return caml_call3(CamlinternalOO[26],_G8_,_G__,_G4_)}}
    var foldr_nat_logic_t=caml_call2(CamlinternalOO[19],_mo_,_oy_);
    function foldr_nat_logic(inh_059,subj_060)
     {return caml_call3(GT[226],_n1_,inh_059,subj_060)}
    function _oz_(_GX_)
     {caml_call2(CamlinternalOO[8],_GX_,_mq_);
      var
       _GY_=caml_call6(CamlinternalOO[18],_GX_,0,_mq_,0,nat_logic_t,1)[1],
       _GZ_=caml_call6(CamlinternalOO[18],_GX_,0,0,_mo_,foldl_logic_t$6,1)[1];
      return function(_G2_,_G1_,_G0_)
       {var _G3_=caml_call2(CamlinternalOO[24],_G1_,_GX_);
        caml_call1(_GY_,_G3_);
        caml_call2(_GZ_,_G3_,_G0_);
        return caml_call3(CamlinternalOO[26],_G1_,_G3_,_GX_)}}
    var foldl_nat_logic_t=caml_call2(CamlinternalOO[19],_mo_,_oz_);
    function foldl_nat_logic(inh_061,subj_062)
     {return caml_call3(GT[225],_n1_,inh_061,subj_062)}
    function _oA_(_GQ_)
     {caml_call2(CamlinternalOO[8],_GQ_,_mq_);
      var
       _GR_=caml_call6(CamlinternalOO[18],_GQ_,0,_mq_,0,nat_logic_t,1)[1],
       _GS_=
        caml_call6(CamlinternalOO[18],_GQ_,0,0,_mo_,compare_logic_t$6,1)[1];
      return function(_GV_,_GU_,_GT_)
       {var _GW_=caml_call2(CamlinternalOO[24],_GU_,_GQ_);
        caml_call1(_GR_,_GW_);
        caml_call2(_GS_,_GW_,_GT_);
        return caml_call3(CamlinternalOO[26],_GU_,_GW_,_GQ_)}}
    var compare_nat_logic_t=caml_call2(CamlinternalOO[19],_mo_,_oA_);
    function compare_nat_logic(inh,subj)
     {return caml_call3(GT[228],_n1_,inh,subj)}
    function _oB_(_GJ_)
     {caml_call2(CamlinternalOO[8],_GJ_,_mq_);
      var
       _GK_=caml_call6(CamlinternalOO[18],_GJ_,0,_mq_,0,nat_logic_t,1)[1],
       _GL_=caml_call6(CamlinternalOO[18],_GJ_,0,0,_mo_,eq_logic_t$6,1)[1];
      return function(_GO_,_GN_,_GM_)
       {var _GP_=caml_call2(CamlinternalOO[24],_GN_,_GJ_);
        caml_call1(_GK_,_GP_);
        caml_call2(_GL_,_GP_,_GM_);
        return caml_call3(CamlinternalOO[26],_GN_,_GP_,_GJ_)}}
    var eq_nat_logic_t=caml_call2(CamlinternalOO[19],_mo_,_oB_);
    function eq_nat_logic(inh,subj){return caml_call3(GT[227],_n1_,inh,subj)}
    function _oC_(_GC_)
     {caml_call2(CamlinternalOO[8],_GC_,_mq_);
      var
       _GD_=caml_call6(CamlinternalOO[18],_GC_,0,_mq_,0,nat_logic_t,1)[1],
       _GE_=caml_call6(CamlinternalOO[18],_GC_,0,0,_mo_,html_logic_t$5,1)[1];
      return function(_GH_,_GG_,_GF_)
       {var _GI_=caml_call2(CamlinternalOO[24],_GG_,_GC_);
        caml_call1(_GD_,_GI_);
        caml_call2(_GE_,_GI_,_GF_);
        return caml_call3(CamlinternalOO[26],_GG_,_GI_,_GC_)}}
    var html_nat_logic_t=caml_call2(CamlinternalOO[19],_mo_,_oC_);
    function _oD_(param,subj){return caml_call2(GT[222],_n1_,subj)}
    function _oE_(_Gv_)
     {caml_call2(CamlinternalOO[8],_Gv_,_mq_);
      var
       _Gw_=caml_call6(CamlinternalOO[18],_Gv_,0,_mq_,0,nat_logic_t,1)[1],
       _Gx_=caml_call6(CamlinternalOO[18],_Gv_,0,0,_mo_,gmap_logic_t$6,1)[1];
      return function(_GA_,_Gz_,_Gy_)
       {var _GB_=caml_call2(CamlinternalOO[24],_Gz_,_Gv_);
        caml_call1(_Gw_,_GB_);
        caml_call2(_Gx_,_GB_,_Gy_);
        return caml_call3(CamlinternalOO[26],_Gz_,_GB_,_Gv_)}}
    var gmap_nat_logic_t=caml_call2(CamlinternalOO[19],_mo_,_oE_);
    function _oF_(param,subj){return caml_call2(GT[223],_n1_,subj)}
    function _oG_(_Go_)
     {caml_call2(CamlinternalOO[8],_Go_,_mq_);
      var
       _Gp_=caml_call6(CamlinternalOO[18],_Go_,0,_mq_,0,nat_logic_t,1)[1],
       _Gq_=caml_call6(CamlinternalOO[18],_Go_,0,0,_mo_,show_logic_t$6,1)[1];
      return function(_Gt_,_Gs_,_Gr_)
       {var _Gu_=caml_call2(CamlinternalOO[24],_Gs_,_Go_);
        caml_call1(_Gp_,_Gu_);
        caml_call2(_Gq_,_Gu_,_Gr_);
        return caml_call3(CamlinternalOO[26],_Gs_,_Gu_,_Go_)}}
    var show_nat_logic_t=caml_call2(CamlinternalOO[19],_mo_,_oG_);
    function _oH_(param,subj){return caml_call2(GT[221],_n1_,subj)}
    function _oI_(eta){return caml_call2(GT[2],gcata_logic,eta)}
    var
     _oJ_=caml_call1(CamlinternalOO[16],_mn_),
     _oK_=caml_call2(CamlinternalOO[8],_oJ_,_mp_),
     _oL_=_oK_[1],
     _oM_=_oK_[2],
     _oN_=_oK_[3],
     _oO_=_oK_[4],
     _oP_=_oK_[5],
     _oQ_=_oK_[6],
     _oR_=_oK_[7],
     _oS_=_oK_[8];
    function _oT_(self_50,subj){return _oH_(0,subj)}
    function _oU_(self_50,subj){return _oF_(0,subj)}
    function _oV_(self_50,subj){return _oD_(0,subj)}
    function _oW_(self_50){return eq_nat_logic}
    function _oX_(self_50){return compare_nat_logic}
    function _oY_(self_50){return foldl_nat_logic}
    function _oZ_(self_50){return foldr_nat_logic}
    var
     _o0_=
      [0,
       _oQ_,
       function(self_50){return fmt_nat_logic},
       _oO_,
       _oZ_,
       _oP_,
       _oY_,
       _oS_,
       _oX_,
       _oR_,
       _oW_,
       _oM_,
       _oV_,
       _oN_,
       _oU_,
       _oL_,
       _oT_];
    caml_call2(CamlinternalOO[11],_oJ_,_o0_);
    caml_call1(CamlinternalOO[17],_oJ_);
    var nat_logic=[0,gcata_logic,caml_call2(CamlinternalOO[24],0,_oJ_),_oI_];
    function html_nat_logic(subj){return _oD_(0,subj)}
    function gmap_nat_logic(subj){return _oF_(0,subj)}
    function show_nat_logic(subj){return _oH_(0,subj)}
    var
     _o1_=_n1_[3],
     _o2_=caml_call1(CamlinternalOO[16],_mn_),
     _o3_=caml_call2(CamlinternalOO[8],_o2_,_mp_),
     _o4_=_o3_[1],
     _o5_=_o3_[2],
     _o6_=_o3_[3],
     _o7_=_o3_[4],
     _o8_=_o3_[5],
     _o9_=_o3_[6],
     _o__=_o3_[7],
     _o$_=_o3_[8];
    function _pa_(self_51)
     {function _Gm_(l)
       {var _Gn_=caml_call1(self_51[1][1 + _o4_],self_51);
        return caml_call3(GT[221],t$2,_Gn_,l)}
      return caml_call2(GT[221],logic,_Gm_)}
    function _pb_(self_51)
     {var _Gl_=_n1_[2];
      return caml_call1(caml_get_public_method(_Gl_,5096781,42),_Gl_)}
    function _pc_(self_51)
     {var _Gk_=_n1_[2];
      return caml_call1(caml_get_public_method(_Gk_,-988375701,43),_Gk_)}
    function _pd_(self_51)
     {var _Gj_=_n1_[2];
      return caml_call1(caml_get_public_method(_Gj_,76555601,44),_Gj_)}
    function _pe_(self_51)
     {var _Gi_=_n1_[2];
      return caml_call1(caml_get_public_method(_Gi_,76555595,45),_Gi_)}
    function _pf_(self_51)
     {var _Gh_=_n1_[2];
      return caml_call1(caml_get_public_method(_Gh_,22636,46),_Gh_)}
    function _pg_(self_51)
     {var _Gg_=_n1_[2];
      return caml_call1(caml_get_public_method(_Gg_,-999816043,47),_Gg_)}
    var
     _ph_=
      [0,
       _o$_,
       function(self_51)
        {var _Gf_=_n1_[2];
         return caml_call1(caml_get_public_method(_Gf_,57219237,48),_Gf_)},
       _o6_,
       _pg_,
       _o__,
       _pf_,
       _o8_,
       _pe_,
       _o7_,
       _pd_,
       _o5_,
       _pc_,
       _o9_,
       _pb_,
       _o4_,
       _pa_];
    caml_call2(CamlinternalOO[11],_o2_,_ph_);
    caml_call1(CamlinternalOO[17],_o2_);
    var
     _pi_=caml_call2(CamlinternalOO[24],0,_o2_),
     logic$4=[0,_n1_[1],_pi_,_o1_];
    function of_int(n){return 0 < n?[0,of_int(n - 1 | 0)]:0}
    function to_int(param)
     {if(! param)return 0;var n=param[1];return 1 + to_int(n) | 0}
    function inj$2(n){return [1,caml_call2(caml_call1(GT[223],t$2),inj$2,n)]}
    function _pj_(self)
     {function _Gd_(fr)
       {function foo(param)
         {if(0 === param[0])
           {var xs=param[2],v=param[1];
            return [0,v,caml_call2(Stdlib_List[19],foo,xs)]}
          var x=param[1];
          return [1,caml_call3(GT[223],t$2,fr,x)]}
        return caml_call1(_p_[1],foo)}
      var _Ge_=caml_call2(_p_[8][1],self,_Gd_);
      return caml_call2(Reifier[4],Reifier[1],_Ge_)}
    var reify_nat=caml_call1(Reifier[7],_pj_),symbol_bind=_p_[3];
    function _pk_(self)
     {var
       _Gb_=
        caml_call2
         (symbol_bind,
          self,
          function(fr)
           {function _Gc_(x){return caml_call3(GT[223],t$2,fr,x)}
            return caml_call1(_p_[1],_Gc_)});
      return caml_call2(Reifier[4],Reifier[2],_Gb_)}
    var prj_exn_nat=caml_call1(Reifier[7],_pk_),o=0;
    function s(x){return [0,x]}
    function nat(n){return caml_call3(GT[223],t$2,nat,n)}
    var one$4=[0,o];
    function addo(x,y,z)
     {var _FT_=0;
      function _FU_(x$0,z$0)
       {var _F3_=addo(x$0,y,z$0),_F4_=[0,z$0];
        function _F5_(_Ga_){return unify$1(z,_F4_,_Ga_)}
        var _F6_=[0,x$0];
        function _F7_(_F$_){return unify$1(x,_F6_,_F$_)}
        function _F8_(_F__){return symbol$3(_F7_,_F5_,_F__)}
        return function(_F9_){return symbol$3(_F8_,_F3_,_F9_)}}
      var _FV_=[0,caml_call1(Fresh[4],_FU_),_FT_];
      function _FW_(_F2_){return unify$1(z,y,_F2_)}
      function _FX_(_F1_){return unify$1(x,o,_F1_)}
      var _FY_=[0,function(_F0_){return symbol$3(_FX_,_FW_,_F0_)},_FV_];
      return function(_FZ_){return conde(_FY_,_FZ_)}}
    function mulo(x,y,z)
     {var _FB_=0;
      function _FC_(x$0,z$0)
       {var _FL_=mulo(x$0,y,z$0),_FM_=addo(y,z$0,z),_FN_=[0,x$0];
        function _FO_(_FS_){return unify$1(x,_FN_,_FS_)}
        function _FP_(_FR_){return symbol$3(_FO_,_FM_,_FR_)}
        return function(_FQ_){return symbol$3(_FP_,_FL_,_FQ_)}}
      var _FD_=[0,caml_call1(Fresh[4],_FC_),_FB_];
      function _FE_(_FK_){return unify$1(z,o,_FK_)}
      function _FF_(_FJ_){return unify$1(x,o,_FJ_)}
      var _FG_=[0,function(_FI_){return symbol$3(_FF_,_FE_,_FI_)},_FD_];
      return function(_FH_){return conde(_FG_,_FH_)}}
    function leo(x,y,b)
     {var _E9_=0;
      function _E__(x$0,y$0)
       {var _Fr_=leo(x$0,y$0,b),_Fs_=[0,y$0];
        function _Ft_(_FA_){return unify$1(y,_Fs_,_FA_)}
        var _Fu_=[0,x$0];
        function _Fv_(_Fz_){return unify$1(x,_Fu_,_Fz_)}
        function _Fw_(_Fy_){return symbol$3(_Fv_,_Ft_,_Fy_)}
        return function(_Fx_){return symbol$3(_Fw_,_Fr_,_Fx_)}}
      var _E$_=[0,caml_call1(Fresh[4],_E__),_E9_];
      function _Fa_(_Fq_){return unify$1(b,falso,_Fq_)}
      function _Fb_(_Fp_){return unify$1(y,o,_Fp_)}
      function _Fc_(_Fo_){return diseq(x,o,_Fo_)}
      function _Fd_(_Fn_){return symbol$3(_Fc_,_Fb_,_Fn_)}
      var _Fe_=[0,function(_Fm_){return symbol$3(_Fd_,_Fa_,_Fm_)},_E$_];
      function _Ff_(_Fl_){return unify$1(b,truo,_Fl_)}
      function _Fg_(_Fk_){return unify$1(x,o,_Fk_)}
      var _Fh_=[0,function(_Fj_){return symbol$3(_Fg_,_Ff_,_Fj_)},_Fe_];
      return function(_Fi_){return conde(_Fh_,_Fi_)}}
    function geo(x,y,b){return leo(y,x,b)}
    function symbol$10(x,y){return leo(x,y,truo)}
    function symbol$11(x,y){return geo(x,y,truo)}
    function gto(x,y,b)
     {var _EF_=0;
      function _EG_(x$0,y$0)
       {var _EZ_=gto(x$0,y$0,b),_E0_=[0,y$0];
        function _E1_(_E8_){return unify$1(y,_E0_,_E8_)}
        var _E2_=[0,x$0];
        function _E3_(_E7_){return unify$1(x,_E2_,_E7_)}
        function _E4_(_E6_){return symbol$3(_E3_,_E1_,_E6_)}
        return function(_E5_){return symbol$3(_E4_,_EZ_,_E5_)}}
      var _EH_=[0,caml_call1(Fresh[4],_EG_),_EF_];
      function _EI_(_EY_){return unify$1(b,falso,_EY_)}
      function _EJ_(_EX_){return unify$1(x,o,_EX_)}
      var _EK_=[0,function(_EW_){return symbol$3(_EJ_,_EI_,_EW_)},_EH_];
      function _EL_(_EV_){return unify$1(b,truo,_EV_)}
      function _EM_(_EU_){return unify$1(y,o,_EU_)}
      function _EN_(_ET_){return diseq(x,o,_ET_)}
      function _EO_(_ES_){return symbol$3(_EN_,_EM_,_ES_)}
      var _EP_=[0,function(_ER_){return symbol$3(_EO_,_EL_,_ER_)},_EK_];
      return function(_EQ_){return conde(_EP_,_EQ_)}}
    function lto(x,y,b){return gto(y,x,b)}
    function symbol$12(x,y){return gto(x,y,truo)}
    function symbol$13(x,y){return lto(x,y,truo)}
    function maxo(x,y,z)
     {var _Et_=0,_Eu_=symbol$13(x,y);
      function _Ev_(_EE_){return unify$1(z,y,_EE_)}
      var
       _Ew_=[0,function(_ED_){return symbol$3(_Ev_,_Eu_,_ED_)},_Et_],
       _Ex_=symbol$11(x,y);
      function _Ey_(_EC_){return unify$1(z,x,_EC_)}
      var _Ez_=[0,function(_EB_){return symbol$3(_Ey_,_Ex_,_EB_)},_Ew_];
      return function(_EA_){return conde(_Ez_,_EA_)}}
    function mino(x,y,z)
     {var _Eh_=0,_Ei_=symbol$12(x,y);
      function _Ej_(_Es_){return unify$1(z,y,_Es_)}
      var
       _Ek_=[0,function(_Er_){return symbol$3(_Ej_,_Ei_,_Er_)},_Eh_],
       _El_=symbol$10(x,y);
      function _Em_(_Eq_){return unify$1(z,x,_Eq_)}
      var _En_=[0,function(_Ep_){return symbol$3(_Em_,_El_,_Ep_)},_Ek_];
      return function(_Eo_){return conde(_En_,_Eo_)}}
    var
     OCanren_Nat=
      [0,
       t_t$3,
       gcata_nat,
       fmt_t_t$3,
       fmt_t$3,
       gmap_t_t$3,
       gmap_t$3,
       foldr_t_t$3,
       foldr_t$3,
       foldl_t_t$3,
       foldl_t$3,
       compare_t_t$3,
       compare_t$3,
       eq_t_t$3,
       eq_t$3,
       html_t_t$2,
       html_t$2,
       show_t_t$3,
       show_t$3,
       t$2,
       ground_t$3,
       gcata_nat,
       fmt_ground_t$3,
       fmt_ground$3,
       gmap_ground_t$3,
       gmap_ground$3,
       foldr_ground_t$3,
       foldr_ground$3,
       foldl_ground_t$3,
       foldl_ground$3,
       compare_ground_t$3,
       compare_ground$3,
       eq_ground_t$3,
       eq_ground$3,
       html_ground_t$2,
       html_ground$2,
       show_ground_t$3,
       show_ground$3,
       ground$3,
       logic_t$6,
       gcata_logic,
       fmt_logic_t$6,
       fmt_logic$6,
       gmap_logic_t$6,
       gmap_logic$4,
       foldr_logic_t$6,
       foldr_logic$6,
       foldl_logic_t$6,
       foldl_logic$6,
       compare_logic_t$6,
       compare_logic$6,
       eq_logic_t$6,
       eq_logic$6,
       html_logic_t$5,
       html_logic$3,
       show_logic_t$6,
       show_logic$4,
       logic$4,
       nat_t,
       gcata_nat,
       fmt_nat_t,
       fmt_nat,
       gmap_nat_t,
       gmap_nat,
       foldr_nat_t,
       foldr_nat,
       foldl_nat_t,
       foldl_nat,
       compare_nat_t,
       compare_nat,
       eq_nat_t,
       eq_nat,
       html_nat_t,
       html_nat,
       show_nat_t,
       show_nat,
       nat_logic_t,
       gcata_logic,
       fmt_nat_logic_t,
       fmt_nat_logic,
       gmap_nat_logic_t,
       gmap_nat_logic,
       foldr_nat_logic_t,
       foldr_nat_logic,
       foldl_nat_logic_t,
       foldl_nat_logic,
       compare_nat_logic_t,
       compare_nat_logic,
       eq_nat_logic_t,
       eq_nat_logic,
       html_nat_logic_t,
       html_nat_logic,
       show_nat_logic_t,
       show_nat_logic,
       nat_logic,
       inj$2,
       reify_nat,
       prj_exn_nat,
       reify_nat,
       prj_exn_nat,
       of_int,
       to_int,
       nat,
       o,
       s,
       o,
       one$4,
       s,
       addo,
       addo,
       mulo,
       mulo,
       leo,
       geo,
       gto,
       lto,
       symbol$10,
       symbol$11,
       symbol$12,
       symbol$13,
       maxo,
       mino];
    caml_register_global(373,OCanren_Nat,"OCanren__Nat");
    var t_t$4=[],_pq_=0,_pr_=0;
    caml_update_dummy
     (t_t$4,
      [0,
       0,
       function(_Ee_)
        {caml_call2(CamlinternalOO[8],_Ee_,_po_);
         return function(_Eg_,_Ef_)
          {return caml_call2(CamlinternalOO[24],_Ef_,_Ee_)}},
       _pr_,
       _pq_]);
    function gcata_t$1(tr,inh,subj)
     {if(! subj)
       return caml_call3(caml_get_public_method(tr,1068646037,50),tr,inh,subj);
      var x_002=subj[2],x_001=subj[1];
      return caml_call5
              (caml_get_public_method(tr,-184304979,49),
               tr,
               inh,
               subj,
               x_001,
               x_002)}
    function _ps_(_D1_)
     {var
       _D2_=caml_call2(CamlinternalOO[3],_D1_,cst$101),
       _D3_=caml_call2(CamlinternalOO[3],_D1_,cst$102),
       _D4_=caml_call2(CamlinternalOO[8],_D1_,_po_),
       _D5_=_D4_[1],
       _D6_=_D4_[2],
       _D7_=caml_call6(CamlinternalOO[18],_D1_,0,_po_,0,t_t$4,1)[1];
      function _D8_(self_2,inh_006,param,x_007,x_008)
       {return caml_call6
                (Stdlib_Format[129],
                 inh_006,
                 _pt_,
                 self_2[1 + _D2_],
                 x_007,
                 self_2[1 + _D3_],
                 x_008)}
      var
       _D9_=
        [0,
         _D5_,
         function(self_2,inh_005,param)
          {return caml_call2(Stdlib_Format[129],inh_005,_pu_)},
         _D6_,
         _D8_];
      caml_call2(CamlinternalOO[11],_D1_,_D9_);
      return function(_Ec_,_Eb_,_Ea_,_D$_,_D__)
       {var _Ed_=caml_call2(CamlinternalOO[24],_Eb_,_D1_);
        _Ed_[1 + _D3_] = _D$_;
        _Ed_[1 + _D2_] = _Ea_;
        caml_call1(_D7_,_Ed_);
        return caml_call3(CamlinternalOO[26],_Eb_,_Ed_,_D1_)}}
    var fmt_t_t$4=caml_call2(CamlinternalOO[19],_pm_,_ps_);
    function fmt_t$4(fa,fl,inh0,subj)
     {var _D0_=caml_call3(fmt_t_t$4[1],0,fa,fl);
      return caml_call4(GT[2],gcata_t$1,_D0_,inh0,subj)}
    function _pv_(_DK_)
     {var
       _DL_=caml_call2(CamlinternalOO[3],_DK_,cst$103),
       _DM_=caml_call2(CamlinternalOO[3],_DK_,cst$104),
       _DN_=caml_call2(CamlinternalOO[8],_DK_,_po_),
       _DO_=_DN_[1],
       _DP_=_DN_[2],
       _DQ_=caml_call6(CamlinternalOO[18],_DK_,0,_po_,0,t_t$4,1)[1];
      function _DR_(self_3,inh_010,param,x_011,x_012)
       {var _DZ_=caml_call2(self_3[1 + _DM_],inh_010,x_012);
        return caml_call2(self_3[1 + _DL_],_DZ_,x_011)}
      var
       _DS_=
        [0,_DO_,function(self_3,inh_009,param){return inh_009},_DP_,_DR_];
      caml_call2(CamlinternalOO[11],_DK_,_DS_);
      return function(_DX_,_DW_,_DV_,_DU_,_DT_)
       {var _DY_=caml_call2(CamlinternalOO[24],_DW_,_DK_);
        _DY_[1 + _DM_] = _DU_;
        _DY_[1 + _DL_] = _DV_;
        caml_call1(_DQ_,_DY_);
        return caml_call3(CamlinternalOO[26],_DW_,_DY_,_DK_)}}
    var foldr_t_t$4=caml_call2(CamlinternalOO[19],_pm_,_pv_);
    function foldr_t$4(fa,fl,inh0,subj)
     {var _DJ_=caml_call3(foldr_t_t$4[1],0,fa,fl);
      return caml_call4(GT[2],gcata_t$1,_DJ_,inh0,subj)}
    function _pw_(_Dt_)
     {var
       _Du_=caml_call2(CamlinternalOO[3],_Dt_,cst$105),
       _Dv_=caml_call2(CamlinternalOO[3],_Dt_,cst$106),
       _Dw_=caml_call2(CamlinternalOO[8],_Dt_,_po_),
       _Dx_=_Dw_[1],
       _Dy_=_Dw_[2],
       _Dz_=caml_call6(CamlinternalOO[18],_Dt_,0,_po_,0,t_t$4,1)[1];
      function _DA_(self_4,inh_014,param,x_015,x_016)
       {var _DI_=caml_call2(self_4[1 + _Du_],inh_014,x_015);
        return caml_call2(self_4[1 + _Dv_],_DI_,x_016)}
      var
       _DB_=
        [0,_Dx_,function(self_4,inh_013,param){return inh_013},_Dy_,_DA_];
      caml_call2(CamlinternalOO[11],_Dt_,_DB_);
      return function(_DG_,_DF_,_DE_,_DD_,_DC_)
       {var _DH_=caml_call2(CamlinternalOO[24],_DF_,_Dt_);
        _DH_[1 + _Dv_] = _DD_;
        _DH_[1 + _Du_] = _DE_;
        caml_call1(_Dz_,_DH_);
        return caml_call3(CamlinternalOO[26],_DF_,_DH_,_Dt_)}}
    var foldl_t_t$4=caml_call2(CamlinternalOO[19],_pm_,_pw_);
    function foldl_t$4(fa,fl,inh0,subj)
     {var _Ds_=caml_call3(foldl_t_t$4[1],0,fa,fl);
      return caml_call4(GT[2],gcata_t$1,_Ds_,inh0,subj)}
    function _px_(_Da_)
     {var
       _Db_=caml_call2(CamlinternalOO[3],_Da_,cst$107),
       _Dc_=caml_call2(CamlinternalOO[3],_Da_,cst$108),
       _Dd_=caml_call2(CamlinternalOO[8],_Da_,_po_),
       _De_=_Dd_[1],
       _Df_=_Dd_[2],
       _Dg_=caml_call6(CamlinternalOO[18],_Da_,0,_po_,0,t_t$4,1)[1];
      function _Dh_(self_5,inh_019,param,x_020,x_021)
       {if(! inh_019)return caml_call2(GT[12],inh_019,_py_);
        var x_023=inh_019[2],x_022=inh_019[1];
        function _Dp_(param){return caml_call2(self_5[1 + _Dc_],x_023,x_021)}
        function _Dq_(param){return caml_call2(self_5[1 + _Db_],x_022,x_020)}
        var _Dr_=caml_call2(GT[6],1,_Dq_);
        return caml_call2(GT[6],_Dr_,_Dp_)}
      var
       _Di_=
        [0,
         _De_,
         function(self_5,inh_017,param)
          {return inh_017?caml_call2(GT[12],inh_017,0):1},
         _Df_,
         _Dh_];
      caml_call2(CamlinternalOO[11],_Da_,_Di_);
      return function(_Dn_,_Dm_,_Dl_,_Dk_,_Dj_)
       {var _Do_=caml_call2(CamlinternalOO[24],_Dm_,_Da_);
        _Do_[1 + _Dc_] = _Dk_;
        _Do_[1 + _Db_] = _Dl_;
        caml_call1(_Dg_,_Do_);
        return caml_call3(CamlinternalOO[26],_Dm_,_Do_,_Da_)}}
    var compare_t_t$4=caml_call2(CamlinternalOO[19],_pm_,_px_);
    function compare_t$4(fa,fl,inh0,subj)
     {var _C$_=caml_call3(compare_t_t$4[1],0,fa,fl);
      return caml_call4(GT[2],gcata_t$1,_C$_,inh0,subj)}
    function _pz_(_CV_)
     {var
       _CW_=caml_call2(CamlinternalOO[3],_CV_,cst$109),
       _CX_=caml_call2(CamlinternalOO[3],_CV_,cst$110),
       _CY_=caml_call2(CamlinternalOO[8],_CV_,_po_),
       _CZ_=_CY_[1],
       _C0_=_CY_[2],
       _C1_=caml_call6(CamlinternalOO[18],_CV_,0,_po_,0,t_t$4,1)[1];
      function _C2_(self_6,inh_027,param,x_028,x_029)
       {if(! inh_027)return 0;
        var
         x_031=inh_027[2],
         x_030=inh_027[1],
         _C__=caml_call2(self_6[1 + _CW_],x_030,x_028);
        return _C__?caml_call2(self_6[1 + _CX_],x_031,x_029):_C__}
      var
       _C3_=
        [0,_CZ_,function(self_6,inh_025,param){return inh_025?0:1},_C0_,_C2_];
      caml_call2(CamlinternalOO[11],_CV_,_C3_);
      return function(_C8_,_C7_,_C6_,_C5_,_C4_)
       {var _C9_=caml_call2(CamlinternalOO[24],_C7_,_CV_);
        _C9_[1 + _CX_] = _C5_;
        _C9_[1 + _CW_] = _C6_;
        caml_call1(_C1_,_C9_);
        return caml_call3(CamlinternalOO[26],_C7_,_C9_,_CV_)}}
    var eq_t_t$4=caml_call2(CamlinternalOO[19],_pm_,_pz_);
    function eq_t$4(fa,fl,inh0,subj)
     {var _CU_=caml_call3(eq_t_t$4[1],0,fa,fl);
      return caml_call4(GT[2],gcata_t$1,_CU_,inh0,subj)}
    function _pA_(_Co_)
     {var
       _Cp_=caml_call2(CamlinternalOO[3],_Co_,cst$111),
       _Cq_=caml_call2(CamlinternalOO[3],_Co_,cst$112),
       _Cr_=caml_call2(CamlinternalOO[8],_Co_,_po_),
       _Cs_=_Cr_[1],
       _Ct_=_Cr_[2],
       _Cu_=caml_call6(CamlinternalOO[18],_Co_,0,_po_,0,t_t$4,1)[1];
      function _Cv_(self_7,param,_CE_,x_033,x_034)
       {var
         _CF_=caml_call2(self_7[1 + _Cq_],0,x_034),
         _CG_=caml_call2(Stdlib_List[4],_CF_,0),
         _CH_=caml_call1(HTML[10],_CG_),
         _CI_=caml_call2(HTML[25],0,_CH_),
         _CJ_=caml_call2(Stdlib_List[4],_CI_,0),
         _CK_=caml_call2(self_7[1 + _Cp_],0,x_033),
         _CL_=caml_call2(Stdlib_List[4],_CK_,0),
         _CM_=caml_call1(HTML[10],_CL_),
         _CN_=caml_call2(HTML[25],0,_CM_),
         _CO_=caml_call2(Stdlib_List[4],_CN_,_CJ_),
         _CP_=caml_call1(HTML[10],_CO_),
         _CQ_=caml_call2(HTML[23],0,_CP_),
         _CR_=caml_call2(Stdlib_List[4],_CQ_,0),
         _CS_=caml_call1(HTML[3],cst_Cons),
         _CT_=caml_call2(Stdlib_List[4],_CS_,_CR_);
        return caml_call1(HTML[10],_CT_)}
      var
       _Cw_=
        [0,
         _Cs_,
         function(self_7,param,_CD_){return caml_call1(HTML[3],cst_Nil)},
         _Ct_,
         _Cv_];
      caml_call2(CamlinternalOO[11],_Co_,_Cw_);
      return function(_CB_,_CA_,_Cz_,_Cy_,_Cx_)
       {var _CC_=caml_call2(CamlinternalOO[24],_CA_,_Co_);
        _CC_[1 + _Cq_] = _Cy_;
        _CC_[1 + _Cp_] = _Cz_;
        caml_call1(_Cu_,_CC_);
        return caml_call3(CamlinternalOO[26],_CA_,_CC_,_Co_)}}
    var html_t_t$3=caml_call2(CamlinternalOO[19],_pm_,_pA_);
    function _pB_(fa,fl,inh0,subj)
     {var _Cn_=caml_call3(html_t_t$3[1],0,fa,fl);
      return caml_call4(GT[2],gcata_t$1,_Cn_,inh0,subj)}
    function _pC_(_B7_)
     {var
       _B8_=caml_call2(CamlinternalOO[3],_B7_,cst$113),
       _B9_=caml_call2(CamlinternalOO[3],_B7_,cst$114),
       _B__=caml_call2(CamlinternalOO[8],_B7_,_po_),
       _B$_=_B__[1],
       _Ca_=_B__[2],
       _Cb_=caml_call6(CamlinternalOO[18],_B7_,0,_po_,0,t_t$4,1)[1];
      function _Cc_(self_8,param,_Cl_,x_035,x_036)
       {var _Cm_=caml_call2(self_8[1 + _B9_],0,x_036);
        return [0,caml_call2(self_8[1 + _B8_],0,x_035),_Cm_]}
      var _Cd_=[0,_B$_,function(self_8,param,_Ck_){return 0},_Ca_,_Cc_];
      caml_call2(CamlinternalOO[11],_B7_,_Cd_);
      return function(_Ci_,_Ch_,_Cg_,_Cf_,_Ce_)
       {var _Cj_=caml_call2(CamlinternalOO[24],_Ch_,_B7_);
        _Cj_[1 + _B9_] = _Cf_;
        _Cj_[1 + _B8_] = _Cg_;
        caml_call1(_Cb_,_Cj_);
        return caml_call3(CamlinternalOO[26],_Ch_,_Cj_,_B7_)}}
    var gmap_t_t$4=caml_call2(CamlinternalOO[19],_pm_,_pC_);
    function _pD_(fa,fl,inh0,subj)
     {var _B6_=caml_call3(gmap_t_t$4[1],0,fa,fl);
      return caml_call4(GT[2],gcata_t$1,_B6_,inh0,subj)}
    function _pE_(_BN_)
     {var
       _BO_=caml_call2(CamlinternalOO[3],_BN_,cst$115),
       _BP_=caml_call2(CamlinternalOO[3],_BN_,cst$116),
       _BQ_=caml_call2(CamlinternalOO[8],_BN_,_po_),
       _BR_=_BQ_[1],
       _BS_=_BQ_[2],
       _BT_=caml_call6(CamlinternalOO[18],_BN_,0,_po_,0,t_t$4,1)[1];
      function _BU_(self_9,param,_B3_,x_037,x_038)
       {var
         _B4_=caml_call2(self_9[1 + _BP_],0,x_038),
         _B5_=caml_call2(self_9[1 + _BO_],0,x_037);
        return caml_call3(Stdlib_Printf[4],_pF_,_B5_,_B4_)}
      var
       _BV_=
        [0,_BR_,function(self_9,param,_B2_){return cst_Nil$0},_BS_,_BU_];
      caml_call2(CamlinternalOO[11],_BN_,_BV_);
      return function(_B0_,_BZ_,_BY_,_BX_,_BW_)
       {var _B1_=caml_call2(CamlinternalOO[24],_BZ_,_BN_);
        _B1_[1 + _BP_] = _BX_;
        _B1_[1 + _BO_] = _BY_;
        caml_call1(_BT_,_B1_);
        return caml_call3(CamlinternalOO[26],_BZ_,_B1_,_BN_)}}
    var show_t_t$4=caml_call2(CamlinternalOO[19],_pm_,_pE_);
    function _pG_(fa,fl,inh0,subj)
     {var _BM_=caml_call3(show_t_t$4[1],0,fa,fl);
      return caml_call4(GT[2],gcata_t$1,_BM_,inh0,subj)}
    function _pH_(eta){return caml_call2(GT[2],gcata_t$1,eta)}
    var
     _pI_=caml_call1(CamlinternalOO[16],_pl_),
     _pJ_=caml_call2(CamlinternalOO[8],_pI_,_pp_),
     _pK_=_pJ_[1],
     _pL_=_pJ_[2],
     _pM_=_pJ_[3],
     _pN_=_pJ_[4],
     _pO_=_pJ_[5],
     _pP_=_pJ_[6],
     _pQ_=_pJ_[7],
     _pR_=_pJ_[8];
    function _pS_(self_10,fa,fl,subj)
     {var _BL_=caml_call1(GT[4],fl);
      return _pG_(caml_call1(GT[4],fa),_BL_,0,subj)}
    function _pT_(self_10,fa,fl,subj)
     {var _BK_=caml_call1(GT[4],fl);
      return _pD_(caml_call1(GT[4],fa),_BK_,0,subj)}
    function _pU_(self_10,fa,fl,subj)
     {var _BJ_=caml_call1(GT[4],fl);
      return _pB_(caml_call1(GT[4],fa),_BJ_,0,subj)}
    function _pV_(self_10){return eq_t$4}
    function _pW_(self_10){return compare_t$4}
    function _pX_(self_10){return foldl_t$4}
    function _pY_(self_10){return foldr_t$4}
    var
     _pZ_=
      [0,
       _pP_,
       function(self_10){return fmt_t$4},
       _pN_,
       _pY_,
       _pO_,
       _pX_,
       _pR_,
       _pW_,
       _pQ_,
       _pV_,
       _pL_,
       _pU_,
       _pM_,
       _pT_,
       _pK_,
       _pS_];
    caml_call2(CamlinternalOO[11],_pI_,_pZ_);
    caml_call1(CamlinternalOO[17],_pI_);
    var t$3=[0,gcata_t$1,caml_call2(CamlinternalOO[24],0,_pI_),_pH_];
    function html_t$3(fa,fl,subj)
     {var _BI_=caml_call1(GT[4],fl);
      return _pB_(caml_call1(GT[4],fa),_BI_,0,subj)}
    function gmap_t$4(fa,fl,subj)
     {var _BH_=caml_call1(GT[4],fl);
      return _pD_(caml_call1(GT[4],fa),_BH_,0,subj)}
    function show_t$4(fa,fl,subj)
     {var _BG_=caml_call1(GT[4],fl);
      return _pG_(caml_call1(GT[4],fa),_BG_,0,subj)}
    var ground_t$4=[],_p0_=0,_p1_=0;
    caml_update_dummy
     (ground_t$4,
      [0,
       0,
       function(_BB_)
        {caml_call2(CamlinternalOO[8],_BB_,_po_);
         var _BC_=caml_call6(CamlinternalOO[18],_BB_,0,_po_,0,GT[146],1)[1];
         return function(_BE_,_BD_)
          {var _BF_=caml_call2(CamlinternalOO[24],_BD_,_BB_);
           caml_call1(_BC_,_BF_);
           return caml_call3(CamlinternalOO[26],_BD_,_BF_,_BB_)}},
       _p1_,
       _p0_]);
    var gcata_ground$2=GT[147];
    function _p2_(_Bt_)
     {caml_call2(CamlinternalOO[8],_Bt_,_po_);
      var
       _Bu_=caml_call6(CamlinternalOO[18],_Bt_,0,_po_,0,ground_t$4,1)[1],
       _Bv_=caml_call6(CamlinternalOO[18],_Bt_,0,0,_pm_,GT[151],1)[1];
      return function(_Bz_,_By_,_Bx_,_Bw_)
       {var _BA_=caml_call2(CamlinternalOO[24],_By_,_Bt_);
        caml_call1(_Bu_,_BA_);
        caml_call3(_Bv_,_BA_,_Bx_,_Bw_);
        return caml_call3(CamlinternalOO[26],_By_,_BA_,_Bt_)}}
    var fmt_ground_t$4=caml_call2(CamlinternalOO[19],_pm_,_p2_);
    function fmt_ground$4(fa,inh_039,subj_040)
     {return caml_call4(GT[224],GT[159],fa,inh_039,subj_040)}
    function _p3_(_Bl_)
     {caml_call2(CamlinternalOO[8],_Bl_,_po_);
      var
       _Bm_=caml_call6(CamlinternalOO[18],_Bl_,0,_po_,0,ground_t$4,1)[1],
       _Bn_=caml_call6(CamlinternalOO[18],_Bl_,0,0,_pm_,GT[156],1)[1];
      return function(_Br_,_Bq_,_Bp_,_Bo_)
       {var _Bs_=caml_call2(CamlinternalOO[24],_Bq_,_Bl_);
        caml_call1(_Bm_,_Bs_);
        caml_call3(_Bn_,_Bs_,_Bp_,_Bo_);
        return caml_call3(CamlinternalOO[26],_Bq_,_Bs_,_Bl_)}}
    var foldr_ground_t$4=caml_call2(CamlinternalOO[19],_pm_,_p3_);
    function foldr_ground$4(fa,inh_041,subj_042)
     {return caml_call4(GT[226],GT[159],fa,inh_041,subj_042)}
    function _p4_(_Bd_)
     {caml_call2(CamlinternalOO[8],_Bd_,_po_);
      var
       _Be_=caml_call6(CamlinternalOO[18],_Bd_,0,_po_,0,ground_t$4,1)[1],
       _Bf_=caml_call6(CamlinternalOO[18],_Bd_,0,0,_pm_,GT[155],1)[1];
      return function(_Bj_,_Bi_,_Bh_,_Bg_)
       {var _Bk_=caml_call2(CamlinternalOO[24],_Bi_,_Bd_);
        caml_call1(_Be_,_Bk_);
        caml_call3(_Bf_,_Bk_,_Bh_,_Bg_);
        return caml_call3(CamlinternalOO[26],_Bi_,_Bk_,_Bd_)}}
    var foldl_ground_t$4=caml_call2(CamlinternalOO[19],_pm_,_p4_);
    function foldl_ground$4(fa,inh_043,subj_044)
     {return caml_call4(GT[225],GT[159],fa,inh_043,subj_044)}
    function _p5_(_A7_)
     {caml_call2(CamlinternalOO[8],_A7_,_po_);
      var
       _A8_=caml_call6(CamlinternalOO[18],_A7_,0,_po_,0,ground_t$4,1)[1],
       _A9_=caml_call6(CamlinternalOO[18],_A7_,0,0,_pm_,GT[158],1)[1];
      return function(_Bb_,_Ba_,_A$_,_A__)
       {var _Bc_=caml_call2(CamlinternalOO[24],_Ba_,_A7_);
        caml_call1(_A8_,_Bc_);
        caml_call3(_A9_,_Bc_,_A$_,_A__);
        return caml_call3(CamlinternalOO[26],_Ba_,_Bc_,_A7_)}}
    var compare_ground_t$4=caml_call2(CamlinternalOO[19],_pm_,_p5_);
    function compare_ground$4(fa,inh,subj)
     {return caml_call4(GT[228],GT[159],fa,inh,subj)}
    function _p6_(_AZ_)
     {caml_call2(CamlinternalOO[8],_AZ_,_po_);
      var
       _A0_=caml_call6(CamlinternalOO[18],_AZ_,0,_po_,0,ground_t$4,1)[1],
       _A1_=caml_call6(CamlinternalOO[18],_AZ_,0,0,_pm_,GT[157],1)[1];
      return function(_A5_,_A4_,_A3_,_A2_)
       {var _A6_=caml_call2(CamlinternalOO[24],_A4_,_AZ_);
        caml_call1(_A0_,_A6_);
        caml_call3(_A1_,_A6_,_A3_,_A2_);
        return caml_call3(CamlinternalOO[26],_A4_,_A6_,_AZ_)}}
    var eq_ground_t$4=caml_call2(CamlinternalOO[19],_pm_,_p6_);
    function eq_ground$4(fa,inh,subj)
     {return caml_call4(GT[227],GT[159],fa,inh,subj)}
    function _p7_(_AR_)
     {caml_call2(CamlinternalOO[8],_AR_,_po_);
      var
       _AS_=caml_call6(CamlinternalOO[18],_AR_,0,_po_,0,ground_t$4,1)[1],
       _AT_=caml_call6(CamlinternalOO[18],_AR_,0,0,_pm_,GT[148],1)[1];
      return function(_AX_,_AW_,_AV_,_AU_)
       {var _AY_=caml_call2(CamlinternalOO[24],_AW_,_AR_);
        caml_call1(_AS_,_AY_);
        caml_call3(_AT_,_AY_,_AV_,_AU_);
        return caml_call3(CamlinternalOO[26],_AW_,_AY_,_AR_)}}
    var html_ground_t$3=caml_call2(CamlinternalOO[19],_pm_,_p7_);
    function _p8_(fa,param,subj)
     {var _AQ_=caml_call1(fa,0);return caml_call3(GT[222],GT[159],_AQ_,subj)}
    function _p9_(_AI_)
     {caml_call2(CamlinternalOO[8],_AI_,_po_);
      var
       _AJ_=caml_call6(CamlinternalOO[18],_AI_,0,_po_,0,ground_t$4,1)[1],
       _AK_=caml_call6(CamlinternalOO[18],_AI_,0,0,_pm_,GT[152],1)[1];
      return function(_AO_,_AN_,_AM_,_AL_)
       {var _AP_=caml_call2(CamlinternalOO[24],_AN_,_AI_);
        caml_call1(_AJ_,_AP_);
        caml_call3(_AK_,_AP_,_AM_,_AL_);
        return caml_call3(CamlinternalOO[26],_AN_,_AP_,_AI_)}}
    var gmap_ground_t$4=caml_call2(CamlinternalOO[19],_pm_,_p9_);
    function _p__(fa,param,subj)
     {var _AH_=caml_call1(fa,0);return caml_call3(GT[223],GT[159],_AH_,subj)}
    function _p$_(_Az_)
     {caml_call2(CamlinternalOO[8],_Az_,_po_);
      var
       _AA_=caml_call6(CamlinternalOO[18],_Az_,0,_po_,0,ground_t$4,1)[1],
       _AB_=caml_call6(CamlinternalOO[18],_Az_,0,0,_pm_,GT[149],1)[1];
      return function(_AF_,_AE_,_AD_,_AC_)
       {var _AG_=caml_call2(CamlinternalOO[24],_AE_,_Az_);
        caml_call1(_AA_,_AG_);
        caml_call3(_AB_,_AG_,_AD_,_AC_);
        return caml_call3(CamlinternalOO[26],_AE_,_AG_,_Az_)}}
    var show_ground_t$4=caml_call2(CamlinternalOO[19],_pm_,_p$_);
    function _qa_(fa,param,subj)
     {var _Ay_=caml_call1(fa,0);return caml_call3(GT[221],GT[159],_Ay_,subj)}
    function _qb_(eta){return caml_call2(GT[2],gcata_ground$2,eta)}
    var
     _qc_=caml_call1(CamlinternalOO[16],_pl_),
     _qd_=caml_call2(CamlinternalOO[8],_qc_,_pp_),
     _qe_=_qd_[1],
     _qf_=_qd_[2],
     _qg_=_qd_[3],
     _qh_=_qd_[4],
     _qi_=_qd_[5],
     _qj_=_qd_[6],
     _qk_=_qd_[7],
     _ql_=_qd_[8];
    function _qm_(self_20,fa,subj){return _qa_(caml_call1(GT[4],fa),0,subj)}
    function _qn_(self_20,fa,subj){return _p__(caml_call1(GT[4],fa),0,subj)}
    function _qo_(self_20,fa,subj){return _p8_(caml_call1(GT[4],fa),0,subj)}
    function _qp_(self_20){return eq_ground$4}
    function _qq_(self_20){return compare_ground$4}
    function _qr_(self_20){return foldl_ground$4}
    function _qs_(self_20){return foldr_ground$4}
    var
     _qt_=
      [0,
       _qj_,
       function(self_20){return fmt_ground$4},
       _qh_,
       _qs_,
       _qi_,
       _qr_,
       _ql_,
       _qq_,
       _qk_,
       _qp_,
       _qf_,
       _qo_,
       _qg_,
       _qn_,
       _qe_,
       _qm_];
    caml_call2(CamlinternalOO[11],_qc_,_qt_);
    caml_call1(CamlinternalOO[17],_qc_);
    var
     ground$4=
      [0,gcata_ground$2,caml_call2(CamlinternalOO[24],0,_qc_),_qb_];
    function html_ground$3(fa,subj){return _p8_(caml_call1(GT[4],fa),0,subj)}
    function gmap_ground$4(fa,subj){return _p__(caml_call1(GT[4],fa),0,subj)}
    function show_ground$4(fa,subj){return _qa_(caml_call1(GT[4],fa),0,subj)}
    var logic_t$7=[],_qu_=0,_qv_=0;
    caml_update_dummy
     (logic_t$7,
      [0,
       0,
       function(_At_)
        {caml_call2(CamlinternalOO[8],_At_,shared$5);
         var
          _Au_=
           caml_call6(CamlinternalOO[18],_At_,0,shared$5,0,logic_t,1)[1];
         return function(_Aw_,_Av_)
          {var _Ax_=caml_call2(CamlinternalOO[24],_Av_,_At_);
           caml_call1(_Au_,_Ax_);
           return caml_call3(CamlinternalOO[26],_Av_,_Ax_,_At_)}},
       _qv_,
       _qu_]);
    function _qw_(_Al_)
     {caml_call2(CamlinternalOO[8],_Al_,shared$5);
      var
       _Am_=caml_call6(CamlinternalOO[18],_Al_,0,shared$5,0,logic_t$7,1)[1],
       _An_=caml_call6(CamlinternalOO[18],_Al_,0,0,_pn_,fmt_logic_t,1)[1];
      return function(_Ar_,_Aq_,_Ap_,_Ao_)
       {var _As_=caml_call2(CamlinternalOO[24],_Aq_,_Al_);
        caml_call1(_Am_,_As_);
        caml_call3
         (_An_,
          _As_,
          function(inh_049,subj_050)
           {return caml_call5(GT[224],t$3,_Ap_,_Ao_,inh_049,subj_050)},
          _Ao_);
        return caml_call3(CamlinternalOO[26],_Aq_,_As_,_Al_)}}
    var fmt_logic_t$7=caml_call2(CamlinternalOO[19],_pn_,_qw_);
    function fmt_logic$7(fa,inh_045,subj_046)
     {function _Ah_(inh_047,subj_048)
       {function _Ai_(_Aj_,_Ak_){return fmt_logic$7(fa,_Aj_,_Ak_)}
        return caml_call5(GT[224],t$3,fa,_Ai_,inh_047,subj_048)}
      return caml_call4(GT[224],logic,_Ah_,inh_045,subj_046)}
    function _qx_(_z$_)
     {caml_call2(CamlinternalOO[8],_z$_,shared$5);
      var
       _Aa_=caml_call6(CamlinternalOO[18],_z$_,0,shared$5,0,logic_t$7,1)[1],
       _Ab_=caml_call6(CamlinternalOO[18],_z$_,0,0,_pn_,foldr_logic_t,1)[1];
      return function(_Af_,_Ae_,_Ad_,_Ac_)
       {var _Ag_=caml_call2(CamlinternalOO[24],_Ae_,_z$_);
        caml_call1(_Aa_,_Ag_);
        caml_call3
         (_Ab_,
          _Ag_,
          function(inh_055,subj_056)
           {return caml_call5(GT[226],t$3,_Ad_,_Ac_,inh_055,subj_056)},
          _Ac_);
        return caml_call3(CamlinternalOO[26],_Ae_,_Ag_,_z$_)}}
    var foldr_logic_t$7=caml_call2(CamlinternalOO[19],_pn_,_qx_);
    function foldr_logic$7(fa,inh_051,subj_052)
     {function _z7_(inh_053,subj_054)
       {function _z8_(_z9_,_z__){return foldr_logic$7(fa,_z9_,_z__)}
        return caml_call5(GT[226],t$3,fa,_z8_,inh_053,subj_054)}
      return caml_call4(GT[226],logic,_z7_,inh_051,subj_052)}
    function _qy_(_zZ_)
     {caml_call2(CamlinternalOO[8],_zZ_,shared$5);
      var
       _z0_=caml_call6(CamlinternalOO[18],_zZ_,0,shared$5,0,logic_t$7,1)[1],
       _z1_=caml_call6(CamlinternalOO[18],_zZ_,0,0,_pn_,foldl_logic_t,1)[1];
      return function(_z5_,_z4_,_z3_,_z2_)
       {var _z6_=caml_call2(CamlinternalOO[24],_z4_,_zZ_);
        caml_call1(_z0_,_z6_);
        caml_call3
         (_z1_,
          _z6_,
          function(inh_061,subj_062)
           {return caml_call5(GT[225],t$3,_z3_,_z2_,inh_061,subj_062)},
          _z2_);
        return caml_call3(CamlinternalOO[26],_z4_,_z6_,_zZ_)}}
    var foldl_logic_t$7=caml_call2(CamlinternalOO[19],_pn_,_qy_);
    function foldl_logic$7(fa,inh_057,subj_058)
     {function _zV_(inh_059,subj_060)
       {function _zW_(_zX_,_zY_){return foldl_logic$7(fa,_zX_,_zY_)}
        return caml_call5(GT[225],t$3,fa,_zW_,inh_059,subj_060)}
      return caml_call4(GT[225],logic,_zV_,inh_057,subj_058)}
    function _qz_(_zN_)
     {caml_call2(CamlinternalOO[8],_zN_,shared$5);
      var
       _zO_=caml_call6(CamlinternalOO[18],_zN_,0,shared$5,0,logic_t$7,1)[1],
       _zP_=caml_call6(CamlinternalOO[18],_zN_,0,0,_pn_,compare_logic_t,1)[1];
      return function(_zT_,_zS_,_zR_,_zQ_)
       {var _zU_=caml_call2(CamlinternalOO[24],_zS_,_zN_);
        caml_call1(_zO_,_zU_);
        caml_call3
         (_zP_,
          _zU_,
          function(inh,subj)
           {return caml_call5(GT[228],t$3,_zR_,_zQ_,inh,subj)},
          _zQ_);
        return caml_call3(CamlinternalOO[26],_zS_,_zU_,_zN_)}}
    var compare_logic_t$7=caml_call2(CamlinternalOO[19],_pn_,_qz_);
    function compare_logic$7(fa,inh,subj)
     {function _zJ_(inh,subj)
       {function _zK_(_zL_,_zM_){return compare_logic$7(fa,_zL_,_zM_)}
        return caml_call5(GT[228],t$3,fa,_zK_,inh,subj)}
      return caml_call4(GT[228],logic,_zJ_,inh,subj)}
    function _qA_(_zB_)
     {caml_call2(CamlinternalOO[8],_zB_,shared$5);
      var
       _zC_=caml_call6(CamlinternalOO[18],_zB_,0,shared$5,0,logic_t$7,1)[1],
       _zD_=caml_call6(CamlinternalOO[18],_zB_,0,0,_pn_,eq_logic_t,1)[1];
      return function(_zH_,_zG_,_zF_,_zE_)
       {var _zI_=caml_call2(CamlinternalOO[24],_zG_,_zB_);
        caml_call1(_zC_,_zI_);
        caml_call3
         (_zD_,
          _zI_,
          function(inh,subj)
           {return caml_call5(GT[227],t$3,_zF_,_zE_,inh,subj)},
          _zE_);
        return caml_call3(CamlinternalOO[26],_zG_,_zI_,_zB_)}}
    var eq_logic_t$7=caml_call2(CamlinternalOO[19],_pn_,_qA_);
    function eq_logic$7(fa,inh,subj)
     {function _zx_(inh,subj)
       {function _zy_(_zz_,_zA_){return eq_logic$7(fa,_zz_,_zA_)}
        return caml_call5(GT[227],t$3,fa,_zy_,inh,subj)}
      return caml_call4(GT[227],logic,_zx_,inh,subj)}
    function _qB_(_zn_)
     {caml_call2(CamlinternalOO[8],_zn_,shared$5);
      var
       _zo_=caml_call6(CamlinternalOO[18],_zn_,0,shared$5,0,logic_t$7,1)[1],
       _zp_=caml_call6(CamlinternalOO[18],_zn_,0,0,_pn_,html_logic_t,1)[1];
      return function(_zt_,_zs_,_zr_,_zq_)
       {var _zu_=caml_call2(CamlinternalOO[24],_zs_,_zn_);
        caml_call1(_zo_,_zu_);
        caml_call3
         (_zp_,
          _zu_,
          function(param,subj)
           {var _zv_=caml_call1(_zq_,0),_zw_=caml_call1(_zr_,0);
            return caml_call4(GT[222],t$3,_zw_,_zv_,subj)},
          _zq_);
        return caml_call3(CamlinternalOO[26],_zs_,_zu_,_zn_)}}
    var html_logic_t$6=caml_call2(CamlinternalOO[19],_pn_,_qB_);
    function _qC_(fa,param,subj)
     {function _zi_(subj)
       {var _zj_=0;
        function _zk_(_zm_){return _qC_(fa,_zj_,_zm_)}
        var _zl_=caml_call1(fa,0);
        return caml_call4(GT[222],t$3,_zl_,_zk_,subj)}
      return caml_call3(GT[222],logic,_zi_,subj)}
    function _qD_(_y__)
     {caml_call2(CamlinternalOO[8],_y__,shared$5);
      var
       _y$_=caml_call6(CamlinternalOO[18],_y__,0,shared$5,0,logic_t$7,1)[1],
       _za_=caml_call6(CamlinternalOO[18],_y__,0,0,_pn_,gmap_logic_t,1)[1];
      return function(_ze_,_zd_,_zc_,_zb_)
       {var _zf_=caml_call2(CamlinternalOO[24],_zd_,_y__);
        caml_call1(_y$_,_zf_);
        caml_call3
         (_za_,
          _zf_,
          function(param,subj)
           {var _zg_=caml_call1(_zb_,0),_zh_=caml_call1(_zc_,0);
            return caml_call4(GT[223],t$3,_zh_,_zg_,subj)},
          _zb_);
        return caml_call3(CamlinternalOO[26],_zd_,_zf_,_y__)}}
    var gmap_logic_t$7=caml_call2(CamlinternalOO[19],_pn_,_qD_);
    function _qE_(fa,param,subj)
     {function _y5_(subj)
       {var _y6_=0;
        function _y7_(_y9_){return _qE_(fa,_y6_,_y9_)}
        var _y8_=caml_call1(fa,0);
        return caml_call4(GT[223],t$3,_y8_,_y7_,subj)}
      return caml_call3(GT[223],logic,_y5_,subj)}
    function _qF_(_yV_)
     {caml_call2(CamlinternalOO[8],_yV_,shared$5);
      var
       _yW_=caml_call6(CamlinternalOO[18],_yV_,0,shared$5,0,logic_t$7,1)[1],
       _yX_=caml_call6(CamlinternalOO[18],_yV_,0,0,_pn_,show_logic_t,1)[1];
      return function(_y1_,_y0_,_yZ_,_yY_)
       {var _y2_=caml_call2(CamlinternalOO[24],_y0_,_yV_);
        caml_call1(_yW_,_y2_);
        caml_call3
         (_yX_,
          _y2_,
          function(param,subj)
           {var _y3_=caml_call1(_yY_,0),_y4_=caml_call1(_yZ_,0);
            return caml_call4(GT[221],t$3,_y4_,_y3_,subj)},
          _yY_);
        return caml_call3(CamlinternalOO[26],_y0_,_y2_,_yV_)}}
    var show_logic_t$7=caml_call2(CamlinternalOO[19],_pn_,_qF_);
    function _qG_(fa,param,subj)
     {function _yQ_(subj)
       {var _yR_=0;
        function _yS_(_yU_){return _qG_(fa,_yR_,_yU_)}
        var _yT_=caml_call1(fa,0);
        return caml_call4(GT[221],t$3,_yT_,_yS_,subj)}
      return caml_call3(GT[221],logic,_yQ_,subj)}
    function _qH_(eta){return caml_call2(GT[2],gcata_logic,eta)}
    var
     _qI_=caml_call1(CamlinternalOO[16],_pl_),
     _qJ_=caml_call2(CamlinternalOO[8],_qI_,_pp_),
     _qK_=_qJ_[1],
     _qL_=_qJ_[2],
     _qM_=_qJ_[3],
     _qN_=_qJ_[4],
     _qO_=_qJ_[5],
     _qP_=_qJ_[6],
     _qQ_=_qJ_[7],
     _qR_=_qJ_[8];
    function _qS_(self_30,fa,subj){return _qG_(caml_call1(GT[4],fa),0,subj)}
    function _qT_(self_30,fa,subj){return _qE_(caml_call1(GT[4],fa),0,subj)}
    function _qU_(self_30,fa,subj){return _qC_(caml_call1(GT[4],fa),0,subj)}
    function _qV_(self_30){return eq_logic$7}
    function _qW_(self_30){return compare_logic$7}
    function _qX_(self_30){return foldl_logic$7}
    function _qY_(self_30){return foldr_logic$7}
    var
     _qZ_=
      [0,
       _qP_,
       function(self_30){return fmt_logic$7},
       _qN_,
       _qY_,
       _qO_,
       _qX_,
       _qR_,
       _qW_,
       _qQ_,
       _qV_,
       _qL_,
       _qU_,
       _qM_,
       _qT_,
       _qK_,
       _qS_];
    caml_call2(CamlinternalOO[11],_qI_,_qZ_);
    caml_call1(CamlinternalOO[17],_qI_);
    var _q0_=[0,gcata_logic,caml_call2(CamlinternalOO[24],0,_qI_),_qH_];
    function html_logic$4(fa,subj){return _qC_(caml_call1(GT[4],fa),0,subj)}
    function gmap_logic$5(fa,subj){return _qE_(caml_call1(GT[4],fa),0,subj)}
    function show_logic$5(fa,subj){return _qG_(caml_call1(GT[4],fa),0,subj)}
    var list_t=[],_q1_=0,_q2_=0;
    caml_update_dummy
     (list_t,
      [0,
       0,
       function(_yL_)
        {caml_call2(CamlinternalOO[8],_yL_,_po_);
         var
          _yM_=
           caml_call6(CamlinternalOO[18],_yL_,0,_po_,0,ground_t$4,1)[1];
         return function(_yO_,_yN_)
          {var _yP_=caml_call2(CamlinternalOO[24],_yN_,_yL_);
           caml_call1(_yM_,_yP_);
           return caml_call3(CamlinternalOO[26],_yN_,_yP_,_yL_)}},
       _q2_,
       _q1_]);
    function _q3_(_yD_)
     {caml_call2(CamlinternalOO[8],_yD_,_po_);
      var
       _yE_=caml_call6(CamlinternalOO[18],_yD_,0,_po_,0,list_t,1)[1],
       _yF_=caml_call6(CamlinternalOO[18],_yD_,0,0,_pm_,fmt_ground_t$4,1)[1];
      return function(_yJ_,_yI_,_yH_,_yG_)
       {var _yK_=caml_call2(CamlinternalOO[24],_yI_,_yD_);
        caml_call1(_yE_,_yK_);
        caml_call3(_yF_,_yK_,_yH_,_yG_);
        return caml_call3(CamlinternalOO[26],_yI_,_yK_,_yD_)}}
    var fmt_list_t=caml_call2(CamlinternalOO[19],_pm_,_q3_);
    function fmt_list(fa,inh_063,subj_064)
     {return caml_call4(GT[224],ground$4,fa,inh_063,subj_064)}
    function _q4_(_yv_)
     {caml_call2(CamlinternalOO[8],_yv_,_po_);
      var
       _yw_=caml_call6(CamlinternalOO[18],_yv_,0,_po_,0,list_t,1)[1],
       _yx_=caml_call6(CamlinternalOO[18],_yv_,0,0,_pm_,foldr_ground_t$4,1)[1];
      return function(_yB_,_yA_,_yz_,_yy_)
       {var _yC_=caml_call2(CamlinternalOO[24],_yA_,_yv_);
        caml_call1(_yw_,_yC_);
        caml_call3(_yx_,_yC_,_yz_,_yy_);
        return caml_call3(CamlinternalOO[26],_yA_,_yC_,_yv_)}}
    var foldr_list_t=caml_call2(CamlinternalOO[19],_pm_,_q4_);
    function foldr_list(fa,inh_065,subj_066)
     {return caml_call4(GT[226],ground$4,fa,inh_065,subj_066)}
    function _q5_(_yn_)
     {caml_call2(CamlinternalOO[8],_yn_,_po_);
      var
       _yo_=caml_call6(CamlinternalOO[18],_yn_,0,_po_,0,list_t,1)[1],
       _yp_=caml_call6(CamlinternalOO[18],_yn_,0,0,_pm_,foldl_ground_t$4,1)[1];
      return function(_yt_,_ys_,_yr_,_yq_)
       {var _yu_=caml_call2(CamlinternalOO[24],_ys_,_yn_);
        caml_call1(_yo_,_yu_);
        caml_call3(_yp_,_yu_,_yr_,_yq_);
        return caml_call3(CamlinternalOO[26],_ys_,_yu_,_yn_)}}
    var foldl_list_t=caml_call2(CamlinternalOO[19],_pm_,_q5_);
    function foldl_list(fa,inh_067,subj_068)
     {return caml_call4(GT[225],ground$4,fa,inh_067,subj_068)}
    function _q6_(_yf_)
     {caml_call2(CamlinternalOO[8],_yf_,_po_);
      var
       _yg_=caml_call6(CamlinternalOO[18],_yf_,0,_po_,0,list_t,1)[1],
       _yh_=
        caml_call6(CamlinternalOO[18],_yf_,0,0,_pm_,compare_ground_t$4,1)[1];
      return function(_yl_,_yk_,_yj_,_yi_)
       {var _ym_=caml_call2(CamlinternalOO[24],_yk_,_yf_);
        caml_call1(_yg_,_ym_);
        caml_call3(_yh_,_ym_,_yj_,_yi_);
        return caml_call3(CamlinternalOO[26],_yk_,_ym_,_yf_)}}
    var compare_list_t=caml_call2(CamlinternalOO[19],_pm_,_q6_);
    function compare_list(fa,inh,subj)
     {return caml_call4(GT[228],ground$4,fa,inh,subj)}
    function _q7_(_x9_)
     {caml_call2(CamlinternalOO[8],_x9_,_po_);
      var
       _x__=caml_call6(CamlinternalOO[18],_x9_,0,_po_,0,list_t,1)[1],
       _x$_=caml_call6(CamlinternalOO[18],_x9_,0,0,_pm_,eq_ground_t$4,1)[1];
      return function(_yd_,_yc_,_yb_,_ya_)
       {var _ye_=caml_call2(CamlinternalOO[24],_yc_,_x9_);
        caml_call1(_x__,_ye_);
        caml_call3(_x$_,_ye_,_yb_,_ya_);
        return caml_call3(CamlinternalOO[26],_yc_,_ye_,_x9_)}}
    var eq_list_t=caml_call2(CamlinternalOO[19],_pm_,_q7_);
    function eq_list(fa,inh,subj)
     {return caml_call4(GT[227],ground$4,fa,inh,subj)}
    function _q8_(_x1_)
     {caml_call2(CamlinternalOO[8],_x1_,_po_);
      var
       _x2_=caml_call6(CamlinternalOO[18],_x1_,0,_po_,0,list_t,1)[1],
       _x3_=caml_call6(CamlinternalOO[18],_x1_,0,0,_pm_,html_ground_t$3,1)[1];
      return function(_x7_,_x6_,_x5_,_x4_)
       {var _x8_=caml_call2(CamlinternalOO[24],_x6_,_x1_);
        caml_call1(_x2_,_x8_);
        caml_call3(_x3_,_x8_,_x5_,_x4_);
        return caml_call3(CamlinternalOO[26],_x6_,_x8_,_x1_)}}
    var html_list_t=caml_call2(CamlinternalOO[19],_pm_,_q8_);
    function _q9_(fa,param,subj)
     {var _x0_=caml_call1(fa,0);return caml_call3(GT[222],ground$4,_x0_,subj)}
    function _q__(_xS_)
     {caml_call2(CamlinternalOO[8],_xS_,_po_);
      var
       _xT_=caml_call6(CamlinternalOO[18],_xS_,0,_po_,0,list_t,1)[1],
       _xU_=caml_call6(CamlinternalOO[18],_xS_,0,0,_pm_,gmap_ground_t$4,1)[1];
      return function(_xY_,_xX_,_xW_,_xV_)
       {var _xZ_=caml_call2(CamlinternalOO[24],_xX_,_xS_);
        caml_call1(_xT_,_xZ_);
        caml_call3(_xU_,_xZ_,_xW_,_xV_);
        return caml_call3(CamlinternalOO[26],_xX_,_xZ_,_xS_)}}
    var gmap_list_t=caml_call2(CamlinternalOO[19],_pm_,_q__);
    function _q$_(fa,param,subj)
     {var _xR_=caml_call1(fa,0);return caml_call3(GT[223],ground$4,_xR_,subj)}
    function _ra_(_xJ_)
     {caml_call2(CamlinternalOO[8],_xJ_,_po_);
      var
       _xK_=caml_call6(CamlinternalOO[18],_xJ_,0,_po_,0,list_t,1)[1],
       _xL_=caml_call6(CamlinternalOO[18],_xJ_,0,0,_pm_,show_ground_t$4,1)[1];
      return function(_xP_,_xO_,_xN_,_xM_)
       {var _xQ_=caml_call2(CamlinternalOO[24],_xO_,_xJ_);
        caml_call1(_xK_,_xQ_);
        caml_call3(_xL_,_xQ_,_xN_,_xM_);
        return caml_call3(CamlinternalOO[26],_xO_,_xQ_,_xJ_)}}
    var show_list_t=caml_call2(CamlinternalOO[19],_pm_,_ra_);
    function _rb_(fa,param,subj)
     {var _xI_=caml_call1(fa,0);return caml_call3(GT[221],ground$4,_xI_,subj)}
    function _rc_(eta){return caml_call2(GT[2],gcata_ground$2,eta)}
    var
     _rd_=caml_call1(CamlinternalOO[16],_pl_),
     _re_=caml_call2(CamlinternalOO[8],_rd_,_pp_),
     _rf_=_re_[1],
     _rg_=_re_[2],
     _rh_=_re_[3],
     _ri_=_re_[4],
     _rj_=_re_[5],
     _rk_=_re_[6],
     _rl_=_re_[7],
     _rm_=_re_[8];
    function _rn_(self_40,fa,subj){return _rb_(caml_call1(GT[4],fa),0,subj)}
    function _ro_(self_40,fa,subj){return _q$_(caml_call1(GT[4],fa),0,subj)}
    function _rp_(self_40,fa,subj){return _q9_(caml_call1(GT[4],fa),0,subj)}
    function _rq_(self_40){return eq_list}
    function _rr_(self_40){return compare_list}
    function _rs_(self_40){return foldl_list}
    function _rt_(self_40){return foldr_list}
    var
     _ru_=
      [0,
       _rk_,
       function(self_40){return fmt_list},
       _ri_,
       _rt_,
       _rj_,
       _rs_,
       _rm_,
       _rr_,
       _rl_,
       _rq_,
       _rg_,
       _rp_,
       _rh_,
       _ro_,
       _rf_,
       _rn_];
    caml_call2(CamlinternalOO[11],_rd_,_ru_);
    caml_call1(CamlinternalOO[17],_rd_);
    var list=[0,gcata_ground$2,caml_call2(CamlinternalOO[24],0,_rd_),_rc_];
    function html_list(fa,subj){return _q9_(caml_call1(GT[4],fa),0,subj)}
    function gmap_list(fa,subj){return _q$_(caml_call1(GT[4],fa),0,subj)}
    function show_list(fa,subj){return _rb_(caml_call1(GT[4],fa),0,subj)}
    var list_logic_t=[],_rv_=0,_rw_=0;
    caml_update_dummy
     (list_logic_t,
      [0,
       0,
       function(_xD_)
        {caml_call2(CamlinternalOO[8],_xD_,shared$5);
         var
          _xE_=
           caml_call6(CamlinternalOO[18],_xD_,0,shared$5,0,logic_t$7,1)[1];
         return function(_xG_,_xF_)
          {var _xH_=caml_call2(CamlinternalOO[24],_xF_,_xD_);
           caml_call1(_xE_,_xH_);
           return caml_call3(CamlinternalOO[26],_xF_,_xH_,_xD_)}},
       _rw_,
       _rv_]);
    function _rx_(_xv_)
     {caml_call2(CamlinternalOO[8],_xv_,shared$5);
      var
       _xw_=caml_call6(CamlinternalOO[18],_xv_,0,shared$5,0,list_logic_t,1)[1],
       _xx_=caml_call6(CamlinternalOO[18],_xv_,0,0,_pn_,fmt_logic_t$7,1)[1];
      return function(_xB_,_xA_,_xz_,_xy_)
       {var _xC_=caml_call2(CamlinternalOO[24],_xA_,_xv_);
        caml_call1(_xw_,_xC_);
        caml_call3(_xx_,_xC_,_xz_,_xy_);
        return caml_call3(CamlinternalOO[26],_xA_,_xC_,_xv_)}}
    var fmt_list_logic_t=caml_call2(CamlinternalOO[19],_pn_,_rx_);
    function fmt_list_logic(fa,inh_069,subj_070)
     {return caml_call4(GT[224],_q0_,fa,inh_069,subj_070)}
    function _ry_(_xn_)
     {caml_call2(CamlinternalOO[8],_xn_,shared$5);
      var
       _xo_=caml_call6(CamlinternalOO[18],_xn_,0,shared$5,0,list_logic_t,1)[1],
       _xp_=caml_call6(CamlinternalOO[18],_xn_,0,0,_pn_,foldr_logic_t$7,1)[1];
      return function(_xt_,_xs_,_xr_,_xq_)
       {var _xu_=caml_call2(CamlinternalOO[24],_xs_,_xn_);
        caml_call1(_xo_,_xu_);
        caml_call3(_xp_,_xu_,_xr_,_xq_);
        return caml_call3(CamlinternalOO[26],_xs_,_xu_,_xn_)}}
    var foldr_list_logic_t=caml_call2(CamlinternalOO[19],_pn_,_ry_);
    function foldr_list_logic(fa,inh_071,subj_072)
     {return caml_call4(GT[226],_q0_,fa,inh_071,subj_072)}
    function _rz_(_xf_)
     {caml_call2(CamlinternalOO[8],_xf_,shared$5);
      var
       _xg_=caml_call6(CamlinternalOO[18],_xf_,0,shared$5,0,list_logic_t,1)[1],
       _xh_=caml_call6(CamlinternalOO[18],_xf_,0,0,_pn_,foldl_logic_t$7,1)[1];
      return function(_xl_,_xk_,_xj_,_xi_)
       {var _xm_=caml_call2(CamlinternalOO[24],_xk_,_xf_);
        caml_call1(_xg_,_xm_);
        caml_call3(_xh_,_xm_,_xj_,_xi_);
        return caml_call3(CamlinternalOO[26],_xk_,_xm_,_xf_)}}
    var foldl_list_logic_t=caml_call2(CamlinternalOO[19],_pn_,_rz_);
    function foldl_list_logic(fa,inh_073,subj_074)
     {return caml_call4(GT[225],_q0_,fa,inh_073,subj_074)}
    function _rA_(_w9_)
     {caml_call2(CamlinternalOO[8],_w9_,shared$5);
      var
       _w__=caml_call6(CamlinternalOO[18],_w9_,0,shared$5,0,list_logic_t,1)[1],
       _w$_=
        caml_call6(CamlinternalOO[18],_w9_,0,0,_pn_,compare_logic_t$7,1)[1];
      return function(_xd_,_xc_,_xb_,_xa_)
       {var _xe_=caml_call2(CamlinternalOO[24],_xc_,_w9_);
        caml_call1(_w__,_xe_);
        caml_call3(_w$_,_xe_,_xb_,_xa_);
        return caml_call3(CamlinternalOO[26],_xc_,_xe_,_w9_)}}
    var compare_list_logic_t=caml_call2(CamlinternalOO[19],_pn_,_rA_);
    function compare_list_logic(fa,inh,subj)
     {return caml_call4(GT[228],_q0_,fa,inh,subj)}
    function _rB_(_w1_)
     {caml_call2(CamlinternalOO[8],_w1_,shared$5);
      var
       _w2_=caml_call6(CamlinternalOO[18],_w1_,0,shared$5,0,list_logic_t,1)[1],
       _w3_=caml_call6(CamlinternalOO[18],_w1_,0,0,_pn_,eq_logic_t$7,1)[1];
      return function(_w7_,_w6_,_w5_,_w4_)
       {var _w8_=caml_call2(CamlinternalOO[24],_w6_,_w1_);
        caml_call1(_w2_,_w8_);
        caml_call3(_w3_,_w8_,_w5_,_w4_);
        return caml_call3(CamlinternalOO[26],_w6_,_w8_,_w1_)}}
    var eq_list_logic_t=caml_call2(CamlinternalOO[19],_pn_,_rB_);
    function eq_list_logic(fa,inh,subj)
     {return caml_call4(GT[227],_q0_,fa,inh,subj)}
    function _rC_(_wT_)
     {caml_call2(CamlinternalOO[8],_wT_,shared$5);
      var
       _wU_=caml_call6(CamlinternalOO[18],_wT_,0,shared$5,0,list_logic_t,1)[1],
       _wV_=caml_call6(CamlinternalOO[18],_wT_,0,0,_pn_,html_logic_t$6,1)[1];
      return function(_wZ_,_wY_,_wX_,_wW_)
       {var _w0_=caml_call2(CamlinternalOO[24],_wY_,_wT_);
        caml_call1(_wU_,_w0_);
        caml_call3(_wV_,_w0_,_wX_,_wW_);
        return caml_call3(CamlinternalOO[26],_wY_,_w0_,_wT_)}}
    var html_list_logic_t=caml_call2(CamlinternalOO[19],_pn_,_rC_);
    function _rD_(fa,param,subj)
     {var _wS_=caml_call1(fa,0);return caml_call3(GT[222],_q0_,_wS_,subj)}
    function _rE_(_wK_)
     {caml_call2(CamlinternalOO[8],_wK_,shared$5);
      var
       _wL_=caml_call6(CamlinternalOO[18],_wK_,0,shared$5,0,list_logic_t,1)[1],
       _wM_=caml_call6(CamlinternalOO[18],_wK_,0,0,_pn_,gmap_logic_t$7,1)[1];
      return function(_wQ_,_wP_,_wO_,_wN_)
       {var _wR_=caml_call2(CamlinternalOO[24],_wP_,_wK_);
        caml_call1(_wL_,_wR_);
        caml_call3(_wM_,_wR_,_wO_,_wN_);
        return caml_call3(CamlinternalOO[26],_wP_,_wR_,_wK_)}}
    var gmap_list_logic_t=caml_call2(CamlinternalOO[19],_pn_,_rE_);
    function _rF_(fa,param,subj)
     {var _wJ_=caml_call1(fa,0);return caml_call3(GT[223],_q0_,_wJ_,subj)}
    function _rG_(_wB_)
     {caml_call2(CamlinternalOO[8],_wB_,shared$5);
      var
       _wC_=caml_call6(CamlinternalOO[18],_wB_,0,shared$5,0,list_logic_t,1)[1],
       _wD_=caml_call6(CamlinternalOO[18],_wB_,0,0,_pn_,show_logic_t$7,1)[1];
      return function(_wH_,_wG_,_wF_,_wE_)
       {var _wI_=caml_call2(CamlinternalOO[24],_wG_,_wB_);
        caml_call1(_wC_,_wI_);
        caml_call3(_wD_,_wI_,_wF_,_wE_);
        return caml_call3(CamlinternalOO[26],_wG_,_wI_,_wB_)}}
    var show_list_logic_t=caml_call2(CamlinternalOO[19],_pn_,_rG_);
    function _rH_(fa,param,subj)
     {var _wA_=caml_call1(fa,0);return caml_call3(GT[221],_q0_,_wA_,subj)}
    function _rI_(eta){return caml_call2(GT[2],gcata_logic,eta)}
    var
     _rJ_=caml_call1(CamlinternalOO[16],_pl_),
     _rK_=caml_call2(CamlinternalOO[8],_rJ_,_pp_),
     _rL_=_rK_[1],
     _rM_=_rK_[2],
     _rN_=_rK_[3],
     _rO_=_rK_[4],
     _rP_=_rK_[5],
     _rQ_=_rK_[6],
     _rR_=_rK_[7],
     _rS_=_rK_[8];
    function _rT_(self_50,fa,subj){return _rH_(caml_call1(GT[4],fa),0,subj)}
    function _rU_(self_50,fa,subj){return _rF_(caml_call1(GT[4],fa),0,subj)}
    function _rV_(self_50,fa,subj){return _rD_(caml_call1(GT[4],fa),0,subj)}
    function _rW_(self_50){return eq_list_logic}
    function _rX_(self_50){return compare_list_logic}
    function _rY_(self_50){return foldl_list_logic}
    function _rZ_(self_50){return foldr_list_logic}
    var
     _r0_=
      [0,
       _rQ_,
       function(self_50){return fmt_list_logic},
       _rO_,
       _rZ_,
       _rP_,
       _rY_,
       _rS_,
       _rX_,
       _rR_,
       _rW_,
       _rM_,
       _rV_,
       _rN_,
       _rU_,
       _rL_,
       _rT_];
    caml_call2(CamlinternalOO[11],_rJ_,_r0_);
    caml_call1(CamlinternalOO[17],_rJ_);
    var list_logic=[0,gcata_logic,caml_call2(CamlinternalOO[24],0,_rJ_),_rI_];
    function html_list_logic(fa,subj)
     {return _rD_(caml_call1(GT[4],fa),0,subj)}
    function gmap_list_logic(fa,subj)
     {return _rF_(caml_call1(GT[4],fa),0,subj)}
    function show_list_logic(fa,subj)
     {return _rH_(caml_call1(GT[4],fa),0,subj)}
    var
     _r1_=_q0_[3],
     _r2_=caml_call1(CamlinternalOO[16],_pl_),
     _r3_=caml_call2(CamlinternalOO[8],_r2_,_pp_),
     _r4_=_r3_[1],
     _r5_=_r3_[2],
     _r6_=_r3_[3],
     _r7_=_r3_[4],
     _r8_=_r3_[5],
     _r__=_r3_[7],
     _r$_=_r3_[8],
     _r9_=_r3_[6];
    function _sa_(self_51,fa)
     {function loop(opt,param)
       {if(opt)var sth=opt[1],is_head=sth;else var is_head=0;
        if(! param)return cst$124;
        var _wr_=param[2],_ws_=param[1];
        if(0 !== _wr_[0])
         {var
           tl=_wr_[1],
           _wx_=[0,loop(0,tl),0],
           _wy_=[0,caml_call1(fa,_ws_),_wx_],
           _wz_=is_head?cst$121:cst$123;
          return caml_call2(Stdlib_String[6],cst$122,[0,_wz_,_wy_])}
        var _wt_=0;
        if(0 === _wr_[0])
         var _wu_=caml_call3(GT[221],logic,loop_whole,_wr_);
        else
         var v=_wr_[1],_wu_=loop(0,v);
        var
         _wv_=[0,caml_call1(fa,_ws_),[0,cst$117,[0,_wu_,_wt_]]],
         _ww_=is_head?cst$118:cst$120;
        return caml_call2(Stdlib_String[6],cst$119,[0,_ww_,_wv_])}
      function loop_whole(x)
       {var _wp_=loop(_sb_,x),_wq_=caml_call2(Stdlib[28],_wp_,cst$125);
        return caml_call2(Stdlib[28],cst$126,_wq_)}
      return function(l)
       {if(0 === l[0])return caml_call3(GT[221],logic,loop_whole,l);
        var v=l[1];
        return loop_whole(v)}}
    function _sc_(self_51,fa,fmt,l)
     {var
       _wn_=caml_call2(Stdlib_Format[133],_sd_,fa),
       _wo_=caml_call3(self_51[1][1 + _r4_],self_51,_wn_,l);
      return caml_call3(Stdlib_Format[129],fmt,_se_,_wo_)}
    function _sf_(self_51,fa,l)
     {var
       _wl_=caml_call2(self_51[1][1 + _r5_],self_51,fa),
       _wm_=caml_call3(GT[222],t$3,fa,_wl_);
      return caml_call3(GT[222],logic,_wm_,l)}
    function _sg_(self_51,fa,l)
     {var
       _wj_=caml_call2(self_51[1][1 + _r7_],self_51,fa),
       _wk_=caml_call3(GT[226],t$3,fa,_wj_);
      return caml_call3(GT[226],logic,_wk_,l)}
    function _sh_(self_51,fa,l)
     {var
       _wh_=caml_call2(self_51[1][1 + _r8_],self_51,fa),
       _wi_=caml_call3(GT[225],t$3,fa,_wh_);
      return caml_call3(GT[225],logic,_wi_,l)}
    function _si_(self_51,fa,l)
     {var
       _wf_=caml_call2(self_51[1][1 + _r__],self_51,fa),
       _wg_=caml_call3(GT[227],t$3,fa,_wf_);
      return caml_call3(GT[227],logic,_wg_,l)}
    function _sj_(self_51,fa,l)
     {var
       _wd_=caml_call2(self_51[1][1 + _r6_],self_51,fa),
       _we_=caml_call3(GT[223],t$3,fa,_wd_);
      return caml_call3(GT[223],logic,_we_,l)}
    var
     _sk_=
      [0,
       _r$_,
       function(self_51,fa,l)
        {var
          _wb_=caml_call2(self_51[1][1 + _r$_],self_51,fa),
          _wc_=caml_call3(GT[228],t$3,fa,_wb_);
         return caml_call3(GT[228],logic,_wc_,l)},
       _r6_,
       _sj_,
       _r__,
       _si_,
       _r8_,
       _sh_,
       _r7_,
       _sg_,
       _r5_,
       _sf_,
       _r9_,
       _sc_,
       _r4_,
       _sa_];
    caml_call2(CamlinternalOO[11],_r2_,_sk_);
    caml_call1(CamlinternalOO[17],_r2_);
    var
     _sl_=caml_call2(CamlinternalOO[24],0,_r2_),
     logic$5=[0,_q0_[1],_sl_,_r1_];
    function list_reify(ra)
     {function _v9_(self)
       {function _v__(fa)
         {function _wa_(fr)
           {function foo(param)
             {if(0 === param[0])
               {var xs=param[2],v=param[1];
                return [0,v,caml_call2(Stdlib_List[19],foo,xs)]}
              var x=param[1];
              return [1,caml_call4(GT[223],t$3,fa,fr,x)]}
            return caml_call1(_p_[1],foo)}
          return caml_call2(_p_[8][1],self,_wa_)}
        var _v$_=caml_call2(_p_[8][1],ra,_v__);
        return caml_call2(Reifier[4],Reifier[1],_v$_)}
      return caml_call1(Reifier[7],_v9_)}
    var list_prj_exn=function _v8_(_v7_){return _v8_.fun(_v7_)};
    caml_update_dummy
     (list_prj_exn,
      function(ra)
       {function _v1_(rself)
         {function _v2_(fa)
           {function _v4_(fr)
             {function _v5_(x)
               {if(! x)return 0;
                var tl=x[2],h=x[1],_v6_=caml_call1(fr,tl);
                return [0,caml_call1(fa,h),_v6_]}
              return caml_call1(_p_[1],_v5_)}
            return caml_call2(_p_[8][1],rself,_v4_)}
          var _v3_=caml_call2(_p_[8][1],ra,_v2_);
          return caml_call2(Reifier[4],Reifier[2],_v3_)}
        return caml_call1(Reifier[7],_v1_)});
    function nil$0(param){return 0}
    function symbol$14(x,y){return [0,x,y]}
    var _sm_=Stdlib_List[19],_sn_=Stdlib_List[19];
    function inj$3(f,param)
     {if(! param)return _so_;
      var xs=param[2],x=param[1],_v0_=inj$3(f,xs);
      return [1,[0,caml_call1(f,x),_v0_]]}
    function logic_to_ground_exn(f,param)
     {if(0 === param[0])
       return caml_call1(Stdlib[2],cst_List_logic_to_ground_exn_v);
      var _vY_=param[1];
      if(! _vY_)return 0;
      var tl=_vY_[2],h=_vY_[1],_vZ_=logic_to_ground_exn(f,tl);
      return [0,caml_call1(f,h),_vZ_]}
    function symbol$15(x,y){return [0,x,[0,y,0]]}
    function symbol$16(x){return [0,x,0]}
    function foldro(f,a,xs,r)
     {var _vF_=0;
      function _vG_(h,t,a$0)
       {var _vQ_=foldro(f,a,t,a$0),_vR_=caml_call3(f,h,a$0,r),_vS_=[0,h,t];
        function _vT_(_vX_){return unify$1(xs,_vS_,_vX_)}
        function _vU_(_vW_){return symbol$3(_vT_,_vR_,_vW_)}
        return function(_vV_){return symbol$3(_vU_,_vQ_,_vV_)}}
      var _vH_=[0,caml_call1(Fresh[5],_vG_),_vF_];
      function _vI_(_vP_){return unify$1(a,r,_vP_)}
      var _vJ_=0;
      function _vK_(_vO_){return unify$1(xs,_vJ_,_vO_)}
      var _vL_=[0,function(_vN_){return symbol$3(_vK_,_vI_,_vN_)},_vH_];
      return function(_vM_){return conde(_vL_,_vM_)}}
    function mapo(f,xs,ys)
     {var _vf_=0;
      function _vg_(z,zs)
       {function _vr_(a1,a2)
         {var _vx_=[0,a1,a2];
          function _vy_(_vE_){return unify$1(ys,_vx_,_vE_)}
          var _vz_=mapo(f,zs,a2),_vA_=caml_call2(f,z,a1);
          function _vB_(_vD_){return symbol$3(_vA_,_vz_,_vD_)}
          return function(_vC_){return symbol$3(_vB_,_vy_,_vC_)}}
        var _vs_=caml_call1(Fresh[4],_vr_),_vt_=[0,z,zs];
        function _vu_(_vw_){return unify$1(xs,_vt_,_vw_)}
        return function(_vv_){return symbol$3(_vu_,_vs_,_vv_)}}
      var _vh_=[0,caml_call1(Fresh[4],_vg_),_vf_],_vi_=0;
      function _vj_(_vq_){return unify$1(ys,_vi_,_vq_)}
      var _vk_=0;
      function _vl_(_vp_){return unify$1(xs,_vk_,_vp_)}
      var _vm_=[0,function(_vo_){return symbol$3(_vl_,_vj_,_vo_)},_vh_];
      return function(_vn_){return conde(_vm_,_vn_)}}
    function filtero(p,xs,ys)
     {function folder(x,a$0,a)
       {var _u4_=0;
        function _u5_(_ve_){return unify$1(a$0,a,_ve_)}
        var
         _u6_=caml_call2(p,x,falso),
         _u7_=[0,function(_vd_){return symbol$3(_u6_,_u5_,_vd_)},_u4_],
         _u8_=[0,x,a$0];
        function _u9_(_vc_){return unify$1(_u8_,a,_vc_)}
        var
         _u__=caml_call2(p,x,truo),
         _u$_=[0,function(_vb_){return symbol$3(_u__,_u9_,_vb_)},_u7_];
        return function(_va_){return conde(_u$_,_va_)}}
      return foldro(folder,0,xs,ys)}
    function lookupo(p,xs,mx)
     {var _uB_=0;
      function _uC_(h,t)
       {var
         _uO_=lookupo(p,t,mx),
         _uN_=0,
         _uP_=caml_call2(p,h,falso),
         _uQ_=[0,function(_u3_){return symbol$3(_uP_,_uO_,_u3_)},_uN_],
         _uR_=[0,h];
        function _uS_(_u2_){return unify$1(mx,_uR_,_u2_)}
        var
         _uT_=caml_call2(p,h,truo),
         _uU_=[0,function(_u1_){return symbol$3(_uT_,_uS_,_u1_)},_uQ_];
        function _uV_(_u0_){return conde(_uU_,_u0_)}
        var _uW_=[0,h,t];
        function _uX_(_uZ_){return unify$1(_uW_,xs,_uZ_)}
        return function(_uY_){return symbol$3(_uX_,_uV_,_uY_)}}
      var _uD_=[0,caml_call1(Fresh[4],_uC_),_uB_],_uE_=0;
      function _uF_(_uM_){return unify$1(mx,_uE_,_uM_)}
      var _uG_=0;
      function _uH_(_uL_){return unify$1(xs,_uG_,_uL_)}
      var _uI_=[0,function(_uK_){return symbol$3(_uH_,_uF_,_uK_)},_uD_];
      return function(_uJ_){return conde(_uI_,_uJ_)}}
    function assoco(x,xs,v)
     {function _ui_(a,b,tl)
       {var _uj_=0,_uk_=assoco(x,tl,v);
        function _ul_(_uA_){return diseq(a,x,_uA_)}
        var _um_=[0,function(_uz_){return symbol$3(_ul_,_uk_,_uz_)},_uj_];
        function _un_(_uy_){return unify$1(b,v,_uy_)}
        function _uo_(_ux_){return unify$1(a,x,_ux_)}
        var _up_=[0,function(_uw_){return symbol$3(_uo_,_un_,_uw_)},_um_];
        function _uq_(_uv_){return conde(_up_,_uv_)}
        var _ur_=[0,[0,a,b],tl];
        function _us_(_uu_){return unify$1(xs,_ur_,_uu_)}
        return function(_ut_){return symbol$3(_us_,_uq_,_ut_)}}
      return caml_call1(Fresh[5],_ui_)}
    function anyo(_ug_,_uh_){return foldro(oro,falso,_ug_,_uh_)}
    function allo(_ue_,_uf_){return foldro(ando,truo,_ue_,_uf_)}
    function lengtho(l,n)
     {var _tV_=0;
      function _tW_(x,xs,n$0)
       {var _t6_=lengtho(xs,n$0),_t7_=[0,n$0];
        function _t8_(_ud_){return unify$1(n,_t7_,_ud_)}
        var _t9_=[0,x,xs];
        function _t__(_uc_){return unify$1(l,_t9_,_uc_)}
        function _t$_(_ub_){return symbol$3(_t__,_t8_,_ub_)}
        return function(_ua_){return symbol$3(_t$_,_t6_,_ua_)}}
      var _tX_=[0,caml_call1(Fresh[5],_tW_),_tV_];
      function _tY_(_t5_){return unify$1(n,o,_t5_)}
      var _tZ_=0;
      function _t0_(_t4_){return unify$1(l,_tZ_,_t4_)}
      var _t1_=[0,function(_t3_){return symbol$3(_t0_,_tY_,_t3_)},_tX_];
      return function(_t2_){return conde(_t1_,_t2_)}}
    function appendo(a,b,ab)
     {var _tA_=0;
      function _tB_(h,t,ab$0)
       {var _tL_=appendo(t,b,ab$0),_tM_=[0,h,ab$0];
        function _tN_(_tU_){return unify$1(_tM_,ab,_tU_)}
        var _tO_=[0,h,t];
        function _tP_(_tT_){return unify$1(a,_tO_,_tT_)}
        function _tQ_(_tS_){return symbol$3(_tP_,_tN_,_tS_)}
        return function(_tR_){return symbol$3(_tQ_,_tL_,_tR_)}}
      var _tC_=[0,caml_call1(Fresh[5],_tB_),_tA_];
      function _tD_(_tK_){return unify$1(b,ab,_tK_)}
      var _tE_=0;
      function _tF_(_tJ_){return unify$1(a,_tE_,_tJ_)}
      var _tG_=[0,function(_tI_){return symbol$3(_tF_,_tD_,_tI_)},_tC_];
      return function(_tH_){return conde(_tG_,_tH_)}}
    function reverso(a,b)
     {var _tg_=0;
      function _th_(h,t,a$0)
       {var _ts_=reverso(t,a$0),_tt_=appendo(a$0,symbol$16(h),b),_tu_=[0,h,t];
        function _tv_(_tz_){return unify$1(a,_tu_,_tz_)}
        function _tw_(_ty_){return symbol$3(_tv_,_tt_,_ty_)}
        return function(_tx_){return symbol$3(_tw_,_ts_,_tx_)}}
      var _ti_=[0,caml_call1(Fresh[5],_th_),_tg_],_tj_=0;
      function _tk_(_tr_){return unify$1(b,_tj_,_tr_)}
      var _tl_=0;
      function _tm_(_tq_){return unify$1(a,_tl_,_tq_)}
      var _tn_=[0,function(_tp_){return symbol$3(_tm_,_tk_,_tp_)},_ti_];
      return function(_to_){return conde(_tn_,_to_)}}
    function membero(l,a)
     {function _s3_(x,xs)
       {var _s4_=0,_s5_=membero(xs,a);
        function _s6_(_tf_){return diseq(x,a,_tf_)}
        var
         _s7_=[0,function(_te_){return symbol$3(_s6_,_s5_,_te_)},_s4_],
         _s8_=[0,function(_td_){return unify$1(x,a,_td_)},_s7_];
        function _s9_(_tc_){return conde(_s8_,_tc_)}
        var _s__=[0,x,xs];
        function _s$_(_tb_){return unify$1(l,_s__,_tb_)}
        return function(_ta_){return symbol$3(_s$_,_s9_,_ta_)}}
      return caml_call1(Fresh[4],_s3_)}
    function nullo(q)
     {var _s1_=0;return function(_s2_){return unify$1(q,_s1_,_s2_)}}
    function caro(xs,h)
     {function _sX_(tl)
       {var _sZ_=[0,h,tl];return function(_s0_){return unify$1(xs,_sZ_,_s0_)}}
      return function(_sY_){return call_fresh(_sX_,_sY_)}}
    function cdro(xs,tl)
     {function _sT_(h)
       {var _sV_=[0,h,tl];return function(_sW_){return unify$1(xs,_sV_,_sW_)}}
      return function(_sU_){return call_fresh(_sT_,_sU_)}}
    var
     OCanren_List=
      [0,
       t_t$4,
       gcata_t$1,
       fmt_t_t$4,
       fmt_t$4,
       foldr_t_t$4,
       foldr_t$4,
       foldl_t_t$4,
       foldl_t$4,
       compare_t_t$4,
       compare_t$4,
       eq_t_t$4,
       eq_t$4,
       html_t_t$3,
       html_t$3,
       gmap_t_t$4,
       gmap_t$4,
       show_t_t$4,
       show_t$4,
       t$3,
       ground_t$4,
       gcata_ground$2,
       fmt_ground_t$4,
       fmt_ground$4,
       foldr_ground_t$4,
       foldr_ground$4,
       foldl_ground_t$4,
       foldl_ground$4,
       compare_ground_t$4,
       compare_ground$4,
       eq_ground_t$4,
       eq_ground$4,
       html_ground_t$3,
       html_ground$3,
       gmap_ground_t$4,
       gmap_ground$4,
       show_ground_t$4,
       show_ground$4,
       ground$4,
       logic_t$7,
       gcata_logic,
       fmt_logic_t$7,
       fmt_logic$7,
       foldr_logic_t$7,
       foldr_logic$7,
       foldl_logic_t$7,
       foldl_logic$7,
       compare_logic_t$7,
       compare_logic$7,
       eq_logic_t$7,
       eq_logic$7,
       html_logic_t$6,
       html_logic$4,
       gmap_logic_t$7,
       gmap_logic$5,
       show_logic_t$7,
       show_logic$5,
       logic$5,
       list_t,
       gcata_ground$2,
       fmt_list_t,
       fmt_list,
       foldr_list_t,
       foldr_list,
       foldl_list_t,
       foldl_list,
       compare_list_t,
       compare_list,
       eq_list_t,
       eq_list,
       html_list_t,
       html_list,
       gmap_list_t,
       gmap_list,
       show_list_t,
       show_list,
       list,
       list_logic_t,
       gcata_logic,
       fmt_list_logic_t,
       fmt_list_logic,
       foldr_list_logic_t,
       foldr_list_logic,
       foldl_list_logic_t,
       foldl_list_logic,
       compare_list_logic_t,
       compare_list_logic,
       eq_list_logic_t,
       eq_list_logic,
       html_list_logic_t,
       html_list_logic,
       gmap_list_logic_t,
       gmap_list_logic,
       show_list_logic_t,
       show_list_logic,
       list_logic,
       _sm_,
       _sn_,
       inj$3,
       logic_to_ground_exn,
       nil$0,
       symbol$14,
       symbol$14,
       symbol$15,
       symbol$16,
       list_reify,
       list_reify,
       list_prj_exn,
       list_prj_exn,
       list_reify,
       list_prj_exn,
       foldro,
       mapo,
       filtero,
       lookupo,
       assoco,
       anyo,
       allo,
       lengtho,
       appendo,
       reverso,
       membero,
       nullo,
       caro,
       caro,
       cdro,
       cdro];
    caml_register_global(374,OCanren_List,"OCanren__List");
    function eqo(x,y,t)
     {var _sF_=0;
      function _sG_(_sS_){return unify$1(t,falso,_sS_)}
      function _sH_(_sR_){return diseq(x,y,_sR_)}
      var _sI_=[0,function(_sQ_){return symbol$3(_sH_,_sG_,_sQ_)},_sF_];
      function _sJ_(_sP_){return unify$1(t,truo,_sP_)}
      function _sK_(_sO_){return unify$1(x,y,_sO_)}
      var _sL_=[0,function(_sN_){return symbol$3(_sK_,_sJ_,_sN_)},_sI_];
      return function(_sM_){return conde(_sL_,_sM_)}}
    function neqo(x,y,t)
     {var _sr_=0;
      function _ss_(_sE_){return unify$1(t,falso,_sE_)}
      function _st_(_sD_){return unify$1(x,y,_sD_)}
      var _su_=[0,function(_sC_){return symbol$3(_st_,_ss_,_sC_)},_sr_];
      function _sv_(_sB_){return unify$1(t,truo,_sB_)}
      function _sw_(_sA_){return diseq(x,y,_sA_)}
      var _sx_=[0,function(_sz_){return symbol$3(_sw_,_sv_,_sz_)},_su_];
      return function(_sy_){return conde(_sx_,_sy_)}}
    function nat$0(n){return nat(of_int(n))}
    function list$0(f,param)
     {if(! param)return 0;
      var xs=param[2],x=param[1],_sq_=list$0(f,xs);
      return [0,caml_call1(f,x),_sq_]}
    function nat_list(param)
     {if(! param)return 0;
      var xs=param[2],x=param[1],_sp_=nat_list(xs);
      return [0,nat$0(x),_sp_]}
    var
     Std=
      [0,
       eqo,
       neqo,
       nat$0,
       symbol$14,
       symbol$15,
       symbol$16,
       nil$0,
       list$0,
       nat_list,
       some,
       none,
       pair,
       triple,
       structural,
       debug_var,
       only_head],
     OCanren$0=
      [0,
       logic_t,
       gcata_logic,
       fmt_logic_t,
       fmt_logic,
       foldr_logic_t,
       foldr_logic,
       foldl_logic_t,
       foldl_logic,
       compare_logic_t,
       compare_logic,
       eq_logic_t,
       eq_logic,
       html_logic_t,
       html_logic,
       gmap_logic_t,
       gmap_logic,
       show_logic_t,
       show_logic,
       logic,
       to_logic,
       from_logic,
       Reifier,
       symbol$2,
       inji,
       symbol$2,
       prj_exn,
       reify$2,
       Not_a_value,
       make_rr,
       State,
       call_fresh,
       wc$0,
       unify$1,
       unify$1,
       diseq,
       diseq,
       structural,
       symbol$3,
       symbol$3,
       symbol$5,
       symbol$5,
       conde,
       conde,
       symbol$4,
       success,
       failure,
       Fresh,
       delay,
       run,
       succ$2,
       NUMERAL_TYPS,
       q,
       qr,
       qrs,
       qrst,
       q,
       qr,
       qrs,
       qrst,
       Tabling,
       debug_var,
       only_head,
       PrunesControl,
       Std];
    caml_register_global(375,OCanren$0,"OCanren");
    return}
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
